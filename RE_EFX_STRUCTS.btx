//EFX ITEM TYPE STRUCTS 
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 15, 16, 17, 18, 19, 20, 21, 22, 23] + 2800 more

	uint unkn1;//Values:[0, 1]
	float unkn2_0;//Values:[0.0, 0.009999999776482582, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.10000000149011612, 0.10999999940395355] + 95 more
	float unkn2_1;//Values:[0.0, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322] + 96 more
	float unkn2_2;//Values:[-2.859999895095825, -2.6500000953674316, -2.2799999713897705, -2.2699999809265137, -1.8200000524520874, -1.75, -1.6299999952316284, -1.5800000429153442, -1.5700000524520874, -1.5499999523162842] + 195 more
	
}AlphaCorrection<bgcolor=0x731727>/*META:ICON=ItemIconAlphaCorrection*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[41, 53, 85, 113]

	uint unkn1_0;//Values:[2]
	float unkn1_1;//Values:[0.25, 1.0]
	float unkn1_2;//Values:[0.10000000149011612, 0.5]
	uint null1_3;//Values:[0]
	uint null1_4;//Values:[0]
	float unkn1_5;//Values:[1.0]
	uint null1_6;//Values:[0]
	uint unkn1_7;//Values:[1078530011]
	float unkn1_8;//Values:[1.0, 4.0, 5.0, 10.0]
	float unkn1_9;//Values:[0.0, 1.0, 2.0, 3.0]
	float unkn1_10;//Values:[1.0, 4.0, 5.0, 10.0]
	float unkn1_11;//Values:[0.0, 1.0, 2.0, 3.0]
	float unkn1_12;//Values:[0.003490658476948738, 0.005235987715423107, 0.008726646192371845]
	float unkn1_13;//Values:[0.0026179938577115536]
	float unkn1_14;//Values:[1.0]

}AngularVelocity2D<bgcolor=0xf57685>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0013\efd_0004_evc0013_00_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(191);

}AngularVelocity2DDelayFrame<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 15, 16, 17, 22, 23, 24, 25, 26, 27] + 1156 more

	uint unkn1_0;//Values:[0, 1, 2, 3, 4, 6]
	uint unkn1_1;//Values:[0, 1, 2, 4, 5]
	float unkn1_2;//Values:[-3.0, -1.0, -0.5, -0.20000000298023224, 0.0, 0.009999999776482582, 0.013000000268220901, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806] + 69 more
	float unkn1_3;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448] + 24 more
	float unkn1_4;//Values:[-100.0, -28.0, -20.0, -2.0, -1.5, -1.0, -0.5, -0.30000001192092896, -0.25, -0.20000000298023224] + 40 more
	float unkn1_5;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645] + 7 more
	float unkn1_6;//Values:[0.0, 0.800000011920929, 0.9200000166893005, 0.9300000071525574, 0.9399999976158142, 0.949999988079071, 0.9500100016593933, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863] + 8 more
	float unkn1_7;//Values:[-0.2617993950843811, 0.0, 0.05235987901687622, 0.0872664600610733, 0.10471975803375244, 0.13962633907794952, 0.8726646304130554, 1.0471975803375244, 1.3962633609771729, 1.5707963705062866] + 1 more
	float unkn1_8;//Values:[0.0, 0.03490658476948738, 0.05235987901687622, 0.0872664600610733, 0.13962633907794952, 0.1745329201221466, 0.24434609711170197, 0.2617993950843811, 0.3490658402442932, 0.4363323152065277] + 9 more
	float unkn1_9;//Values:[-2.7925267219543457, -2.6179938316345215, -2.094395160675049, -1.5707963705062866, -1.4311699867248535, -1.0471975803375244, -0.6981316804885864, -0.5235987901687622, 0.0, 0.01745329238474369] + 26 more
	float unkn1_10;//Values:[0.0, 0.03490658476948738, 0.05235987901687622, 0.06981316953897476, 0.0872664600610733, 0.1745329201221466, 0.2617993950843811, 0.3490658402442932, 0.4363323152065277, 0.5235987901687622] + 10 more
	float unkn1_11;//Values:[-1.5707963705062866, 0.0, 0.01745329238474369, 0.05235987901687622, 0.0872664600610733, 0.10471975803375244, 0.5235987901687622, 0.7853981852531433, 1.0471975803375244, 1.5707963705062866] + 2 more
	float unkn1_12;//Values:[0.0, 0.05235987901687622, 0.0872664600610733, 0.13962633907794952, 0.1745329201221466, 0.20943951606750488, 0.24434609711170197, 0.2617993950843811, 0.3490658402442932, 0.4363323152065277] + 9 more
	float unkn1_13;//Values:[-0.3490658402442932, -0.10471975803375244, -0.0872664600610733, -0.0003490658418741077, 0.0, 0.0003490658418741077, 0.0008726646192371845, 0.001745329238474369, 0.0026179938577115536, 0.003490658476948738] + 31 more
	float unkn1_14;//Values:[0.0, 0.00017453292093705386, 0.0003490658418741077, 0.00043633230961859226, 0.0008726646192371845, 0.001745329238474369, 0.0026179938577115536, 0.003490658476948738, 0.004363323096185923, 0.005235987715423107] + 20 more
	float unkn1_15;//Values:[-0.5235987901687622, -0.1745329201221466, -0.12217304855585098, -0.10471975803375244, -0.0872664600610733, -0.06981316953897476, -0.05235987901687622, -0.04886921867728233, -0.03490658476948738, -0.02617993950843811] + 55 more
	float unkn1_16;//Values:[0.0, 3.490658491500653e-05, 0.00017453292093705386, 0.0003490658418741077, 0.00043633230961859226, 0.0008726646192371845, 0.001745329238474369, 0.0026179938577115536, 0.003490658476948738, 0.004363323096185923] + 25 more
	float unkn1_17;//Values:[-0.27925267815589905, -0.12217304855585098, -0.0872664600610733, -0.06981316953897476, -0.05235987901687622, -0.03839724510908127, -0.02617993950843811, -0.01745329238474369, -0.003490658476948738, 0.0] + 37 more
	float unkn1_18;//Values:[0.0, 0.00017453292093705386, 0.0003490658418741077, 0.0008726646192371845, 0.001745329238474369, 0.0026179938577115536, 0.003490658476948738, 0.004363323096185923, 0.005235987715423107, 0.006981316953897476] + 20 more
	float unkn1_19;//Values:[0.800000011920929, 0.8999999761581421, 0.9200000166893005, 0.9300000071525574, 0.949999988079071, 0.9599999785423279, 0.9700000286102295, 0.9750000238418579, 0.9800000190734863, 0.9850000143051147] + 12 more

}AngularVelocity3D<bgcolor=0x056e12>;//Example: natives\NSW\vfx\editor\efd_pl\efd_g-swd\efd_0004_g-swd_02_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[29, 32, 38, 92, 111, 122, 140, 152, 165, 188] + 9 more

	uint frameDelay;//Values:[0, 2, 5, 30, 50, 60, 64, 72, 95, 121] + 3 more
	uint unkn1;//Values:[0, 3]

}AngularVelocity3DDelayFrame<bgcolor=0x5eac94>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0006\efd_0004_evc0006_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[15, 16, 17, 22, 25, 27, 30, 32, 38, 40] + 540 more
	uint unkn1_0;//Values:[0, 2, 5]
	float unkn1_1;//Values:[-150.0, -120.0, -53.0, -45.0, -40.0, -30.0, -25.0, -20.0, -10.0, -8.0] + 24 more
	float unkn1_2;//Values:[-200.0, -100.0, -80.0, -50.0, -30.0, -20.0, -15.0, -10.0, -9.0, -8.0] + 32 more
	float unkn1_3;//Values:[-85.0, -40.0, -23.0, -20.0, -10.0, -5.0, -4.0, -3.0, -2.5, -2.0] + 22 more
	float attractionForce;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.5, 0.8999999761581421, 1.0, 1.25, 1.5] + 44 more
	float unkn1_5;//Values:[0.0, 0.20000000298023224, 0.30000001192092896, 0.5, 0.6000000238418579, 0.75, 0.800000011920929, 1.0, 1.5, 1.600000023841858] + 21 more
	float unkn1_6;//Values:[0.0, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.5, 0.6000000238418579, 1.0, 1.2999999523162842, 1.5, 1.7000000476837158] + 27 more
	float unkn1_7;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5, 0.699999988079071, 1.0, 1.5, 2.0] + 12 more
	uint boneNameLength;//Values:[2, 10, 16]
	wstring boneName;//Values:[16]		 

}Attractor<read=ReadBoneAttractor,write=WriteBoneAttractor,bgcolor=0x3a2006>/*META:ICON=ItemIconAttractor,IsBoneAttribute*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[747, 2655, 6396, 6440, 12265, 17176]

	uint unkn0;//Values:[15]
	uint null1;//Values:[0]
	uint unkn2;//Values:[2]
	float unkn3;//Values:[27.0, 150.0, 170.0, 298.0, 549.0]
	uint unkn4;//Values:[4]
	uint unkn5;//Values:[12, 16]
	uint null6;//Values:[0]
	uint substruct1Length;//Values:[32]
	uint substruct2Length;//Values:[144, 192]
	uint substruct3Length;//Values:[0]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}
	

}AttractorClip<bgcolor=0xbe9672>;//Example: natives\NSW\vfx\editor\efd_pl\efd_lan\efd_0004_lan_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[237, 396, 434, 634, 669, 745]

	uint unkn1_0;//Values:[32]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[4]
	uint unkn1_6;//Values:[4]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2]
	uint solverSize;//Values:[28]
	uint expression[solverSize/4];

}AttractorExpression<bgcolor=0xe78607>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 20, 21] + 1818 more

	float unkn1_0;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.10000000149011612, 0.10999999940395355] + 75 more
	float unkn1_1;//Values:[0.38999998569488525, 0.46000000834465027, 0.47999998927116394, 0.5, 0.6000000238418579, 0.7300000190734863, 0.800000011920929, 0.8199999928474426, 0.8299999833106995, 0.8500000238418579] + 3 more
	float unkn1_2;//Values:[0.009999999776482582, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579] + 30 more
	float unkn1_3;//Values:[0.0, 0.004999998956918716, 0.004999999888241291, 0.005000002682209015, 0.005000114440917969, 0.019999980926513672, 0.019999999552965164, 0.0299999937415123, 0.04999995231628418, 0.04999999701976776] + 27 more
	float unkn1_4;//Values:[0.0, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.44999998807907104, 0.5, 0.6000000238418579, 0.699999988079071] + 13 more
	float unkn1_5;//Values:[0.0, 0.04999995231628418, 0.04999999701976776, 0.05000000447034836, 0.050000011920928955, 0.09999999403953552, 0.10000000894069672, 0.10000002384185791, 0.1999969482421875, 0.19999980926513672] + 9 more
	float unkn1_6;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 0.699999988079071, 0.800000011920929, 1.0, 2.0, 3.0] + 17 more
	float unkn1_7;//Values:[0.0, 0.10000002384185791, 0.19999998807907104, 0.20000004768371582, 0.30000001192092896, 0.5, 1.0, 2.0, 3.0, 4.0] + 5 more
	float unkn1_8;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071] + 10 more
	float unkn1_9;//Values:[0.0, 0.09999999403953552, 0.10000000894069672, 0.10000002384185791, 0.19999997317790985, 0.19999998807907104, 0.20000000298023224, 0.20000004768371582, 0.30000001192092896, 0.5] + 3 more

}Blink<bgcolor=0xe78607>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 15, 16, 17, 18, 19, 20, 21, 22, 23] + 2445 more
	Color color0;//Unconfirmed
	Color color1;//Unconfirmed
	float unkn1_0;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.30000001192092896, 0.3499999940395355, 0.5, 0.699999988079071, 1.0, 1.2000000476837158, 1.5] + 53 more
	float unkn1_1;//Values:[0.0, 0.11999999731779099, 0.15000000596046448, 0.20000000298023224, 0.25, 0.4000000059604645, 0.5, 0.6000000238418579, 0.75, 0.800000011920929] + 57 more
	float unkn1_2;//Values:[0.0, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.09000000357627869] + 90 more
	float unkn1_3;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549] + 79 more

}ColorGrading<bgcolor=0xf57685>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(94);

}ContrastHighlighter<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(170);

}CustomComputeShader<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(162);

}DepthOcclusion<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(159);

}DepthOperator<bgcolor=0x0a2c0f>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(186);

}DirectionalField<bgcolor=0x5eac94>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(156);

}DirectionalFieldParameter<bgcolor=0x85aa32>/*META:IsFieldAttribute*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(157);

}DirectionalFieldParameterClip<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(158);

}DirectionalFieldParameterExpression<bgcolor=0x02b72e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 14, 15, 16, 17, 18, 19, 20, 21, 22] + 1314 more
	enum <uint> 
    {
        DistortionType_Blur = 0,
        DistortionType_Refract = 1,
        DistortionType_BlurTexture = 2    
    }distortionType;//Values:[0, 1, 2]
	float unkn2;//Values:[0.0, 0.00800000037997961, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322] + 47 more
	float unkn3;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355] + 127 more
	float unkn4;//Values:[1.0, 1.100000023841858, 1.2000000476837158, 1.25, 1.2999999523162842, 1.3300000429153442, 1.399999976158142, 1.4299999475479126, 1.5, 1.600000023841858] + 137 more
	Color color;
}Distortion<bgcolor=0x0a2c0f>/*META:ICON=ItemIconAlphaCorrection*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[298, 322, 662, 698, 1210, 2978, 7159, 7173]
	uint unkn1_0;//Values:[1, 4, 8]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[0, 2]
	uint unkn1_4;//Values:[2, 4]
	uint unkn1_5;//Values:[2]
	uint solverSize;//Values:[28, 44]
	uint expression[solverSize/4];

}DistortionExpression<bgcolor=0x2a6866>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn0[3];

}DrawOverlay<bgcolor=0x731727>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[0]

	uint unknShaderCRCHash0;//Values:[2156817390, 2164452218, 2167268744, 2182330480, 2190249500, 2194350897, 2201857489, 2203640482, 2205587007, 2216116712] + 399 more
	uint unknShaderCRCHash1;//Values:[2148455804, 2149806435, 2152937364, 2171534824, 2186022537, 2207107179, 2215059736, 2220946307, 2232208269, 2266281040] + 397 more
	uint unknShaderCRCHash2;//Values:[2236311530, 2265671181, 2270083961, 2291865508, 2337199078, 2455687491, 2525582768, 2641219809, 2708323469, 2834660529] + 62 more
	uint shaderPathLength;//Values:[60, 62, 64, 66, 68, 70, 72, 74, 76, 78] + 16 more
	wstring shaderPath;//Values:[78] + 399 more

}EffectOptimizeShader<read=ReadEffectOptimizeShader,bgcolor=0xe23209>;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[70, 157, 165, 206, 216, 434, 441, 455, 520, 542] + 62 more

	uint unkn1;//Values:[1, 4]//Might be wrong
	
   
}EmitMask<bgcolor=0xbe9672>;//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_10_0040.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[116, 134, 200, 310, 315, 357, 409, 423, 561, 566] + 12 more

	uint unkn1;//Values:[0, 1]
	uint unkn2;//Values:[0, 1]
	Color color;

}EmitterColor<bgcolor=0x2a6866>;//Example: F:\MHR_EXTRACT\extract\re_chunk_000\natives\NSW\vfx\editor\efd_evc\efd_evc1021\efd_0004_evc1021_00_0008.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[136, 312, 769, 778, 1028, 1045, 1540, 3760]

	uint unkn0;//Values:[15]
	uint null1;//Values:[0]
	uint unkn2;//Values:[2]
	float unkn3;//Values:[27.0, 150.0, 170.0, 298.0, 549.0]
	uint unkn4;//Values:[4]
	uint unkn5;//Values:[12, 16]
	uint null6;//Values:[0]
	uint substruct1Length;//Values:[32]
	uint substruct2Length;//Values:[144, 192]
	uint substruct3Length;//Values:[0]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}

}EmitterColorClip<bgcolor=0xe23209>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(203);

}EmitterHSV<bgcolor=0x056e12>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(204);

}EmitterHSVExpression<bgcolor=0x0a2c0f>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[7, 9, 13, 19, 20, 23, 24, 25, 27, 29] + 367 more//This struct might not be right

}EmitterPriority<bgcolor=0x056e12>;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[37, 49, 155]

	float unkn1_0;//Values:[0.0, 3.0]
	float unkn1_1;//Values:[10.0, 11.0]
	float unkn1_2;//Values:[0.0, 1.0]
	float unkn1_3;//Values:[1.0]
	uint null1_4;//Values:[0]
	uint null1_5;//Values:[0]
	uint null1_6;//Values:[0]
	uint null1_7;//Values:[0]

}EmitterShape2D<bgcolor=0x363669>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0013\efd_0004_evc0013_00_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn1_0;//Values:[1, 4, 8]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[0, 2]
	uint unkn1_4;//Values:[2, 4]
	uint unkn1_5;//Values:[2]
	uint solverSize;//Values:[28, 44]
	uint expression[solverSize/4];

}EmitterShape2DExpression<bgcolor=0xf57685>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[8, 11, 12, 13, 14, 15, 16, 17, 18, 19] + 4807 more
	float RangeXMin;//Values:[0.0, 0.0010000000474974513, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549] + 138 more
	float RangeXMax;//Values:[0.0, 9.999999747378752e-05, 0.00019999999494757503, 0.0010000000474974513, 0.0020000000949949026, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746] + 193 more
	float RangeYMin;//Values:[-100.0, -90.0, -83.0, -77.0, -60.0, -50.29999923706055, -50.0, -49.79999923706055, -45.0, -40.0] + 161 more
	float RangeYMax;//Values:[-60.0, -50.0, -48.5, -48.0, -22.0, -20.0, -18.5, -18.0, -15.0, -13.5] + 220 more
	float RangeZMin;//Values:[0.0, 0.0010000000474974513, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549] + 135 more
	float RangeZMax;//Values:[0.0, 9.999999747378752e-05, 0.00019999999494757503, 0.0010000000474974513, 0.0020000000949949026, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746] + 175 more
	uint ShapeType;//Enum, one value is box//Values:[0, 1, 2]
	uint RangeDivideNum;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 10] + 12 more
	uint RangeDivideAxis;//Values:[0, 1, 2]
	uint emitCount;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 11 more
	uint unkn1_10;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 5 more
	float LocalRotationX;//Values:[-3.1415927410125732, -2.6179940700531006, -2.460914373397827, -2.4434611797332764, -2.391101121902466, -2.286381483078003, -2.268928289413452, -2.2340216636657715, -2.18166184425354, -2.094395160675049] + 140 more
	float LocalRotationY;//Values:[-5.864306449890137, -5.253441333770752, -4.450590133666992, -4.36332368850708, -4.223697185516357, -4.049164295196533, -3.83972430229187, -3.5430185794830322, -3.1415927410125732, -3.1241395473480225] + 294 more
	float LocalRotationZ;//Values:[-3.8048181533813477, -2.897246837615967, -2.6179940700531006, -2.4434611797332764, -2.4260077476501465, -2.286381483078003, -2.094395160675049, -2.0420353412628174, -1.919862151145935, -1.7453293800354004] + 110 more
	uint RotationOrder;//Values:[0, 1, 2, 3, 4, 5]
    if (VERSION <= VERSION_MHRSB)
    {
        ubyte unkn3;//Values:[0, 1, 2, 3, 4]
	}
    float unkn4_0;//Values:[0.0, 2.350988701644575e-38]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;//Values:[3211159142, 3212836864, 3214514586, 3215353446, 3217031168, 3221225472, 3223322624, 3225419776, 3229614080, 3235905536] + 95 more
	}
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
	}
    float unkn4_1;//Values:[0.0, 0.01745329424738884, 0.10000000149011612, 0.1745329350233078, 0.20000000298023224, 0.20943953096866608, 0.2617993950843811, 0.27925270795822144, 0.30000001192092896, 0.33161255717277527] + 66 more
	float unkn4_2;//Values:[-2.5, -1.5, -1.0, -0.8999999761581421, -0.800000011920929, -0.75, -0.699999988079071, -0.6000000238418579, -0.5, -0.30000001192092896] + 156 more
	float unkn4_3;//Values:[-1.5707963705062866, -1.3962634801864624, -1.2217305898666382, -1.0471975803375244, -0.9599310755729675, -0.8726646900177002, -0.8203047513961792, -0.7853981852531433, -0.767944872379303, -0.6981317400932312] + 52 more
    
    
}EmitterShape3D<bgcolor=0xbe9672>/*META:ICON=ItemIconEmitter*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[17, 18, 19, 20, 21, 33, 35, 37, 39, 41] + 159 more
	
	uint unkn1_0;//Values:[0, 2, 3, 4, 8, 12, 16, 17, 21, 32] + 13 more
	uint unkn1_1;//Values:[0, 2, 4]
	uint unkn1_2;//Values:[0, 2, 4]
	uint unkn1_3;//Values:[0, 2, 4]
	uint unkn1_4;//Values:[0, 2, 4]
	uint unkn1_5;//Values:[0, 2, 4]
	uint unkn1_6;//Values:[0, 2, 4]
	uint unkn1_7;//Values:[2, 4]
	uint unkn1_8;//Values:[2, 4]
	uint unkn1_9;//Values:[2, 4]
	uint solverSize;//Values:[0, 28, 44, 56, 68, 84, 88, 112, 116, 124] + 14 more
	uint expression[solverSize/4];

}EmitterShape3DExpression<bgcolor=0xbe9672>;//Example: natives\NSW\vfx\editor\efd_em\efd_em099\efd_0004_em099_00_0130.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[15, 16, 19, 22, 23, 27, 33, 41, 43, 46] + 334 more

	uint unkn1_0;//Values:[0, 1, 2, 3, 4, 5, 7]
	float unkn1_1;//Values:[0.008726646192371845, 0.01745329238474369, 0.0263544712215662, 0.03490658476948738, 0.05235987901687622, 0.0872664600610733, 0.10611601918935776, 0.1186823919415474, 0.1302015632390976, 0.13962633907794952] + 89 more
	float unkn1_2;//Values:[0.0, 0.01745329238474369, 0.04520402476191521, 0.05235987901687622, 0.06981316953897476, 0.07941248267889023, 0.0872664600610733, 0.08936085551977158, 0.10471975803375244, 0.11658799648284912] + 62 more
	uint unkn1_3;//Values:[0, 1045220557, 1050253722, 1056964608]
	float unkn1_4;//Values:[-1.0, -0.9902680516242981, -0.9563047289848328, -0.9396926164627075, -0.8660253882408142, -0.836516261100769, -0.8191520571708679, -0.7660444378852844, -0.415561318397522, -0.32139378786087036] + 10 more
	float unkn1_5;//Values:[-1.0, -0.9396926164627075, -0.6156615018844604, -0.5735764503479004, -0.3420201241970062, -0.2588190734386444, 0.0, 4.371138828673793e-08, 0.2588190734386444, 0.30901700258255005] + 8 more
	float unkn1_6;//Values:[-1.0, -0.9902680516242981, -0.9510565400123596, -0.8571673035621643, -0.8480480313301086, -0.838670551776886, -0.731353759765625, -0.6691306233406067, -0.6427876353263855, -0.6160950660705566] + 20 more

}FadeByAngle<bgcolor=0xf57685>/*META:ICON=ItemIconFadeByAngle*/;//Example: natives\NSW\vfx\editor\efd_ot\efd_airou\efd_0004_airou_10_0120.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(117);

}FadeByAngleExpression<bgcolor=0xe23209>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[13, 14, 15, 16, 17, 18, 19, 20, 21, 22] + 3748 more
	float unkn1;//Values:[0.0, 0.10000000149011612, 0.25, 0.30000001192092896, 0.5, 0.6000000238418579, 0.699999988079071, 0.75, 0.800000011920929, 1.0] + 54 more
	float unkn2;//Values:[0.0, 0.20000000298023224, 0.5, 0.6000000238418579, 0.800000011920929, 1.0, 1.2000000476837158, 1.5, 2.0, 2.200000047683716] + 56 more
	float unkn3;//Values:[1.0, 2.0, 3.0, 4.0, 4.5, 5.0, 6.0, 7.0, 8.0, 9.0] + 62 more
	float unkn4;//Values:[4.5, 5.0, 6.0, 6.5, 7.0, 8.0, 10.0, 11.0, 13.0, 14.0] + 72 more
		  


}FadeByDepth<bgcolor=0x2f158b>/*META:ICON=ItemIconFadeByAngle*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[2029]
	
	uint unkn1_0;//Values:[3]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint solverSize;//Values:[56]
	uint expression[solverSize/4];//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_01_0001.efx.2621987

}FadeByDepthExpression<bgcolor=0x731727>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[25, 32, 38, 39, 40, 46, 49, 52, 54, 58] + 309 more

	uint unkn1_0;//Values:[0, 1]
	float unkn1_1;//Values:[0.2617993950843811, 0.34400439262390137, 0.3490658402442932, 0.4363323450088501, 0.5235987901687622, 0.5398303270339966, 0.6981316804885864, 0.7820820212364197, 0.7853981852531433, 0.8086110353469849] + 34 more
	float unkn1_2;//Values:[0.0, 0.1745329201221466, 0.2617993950843811, 0.3490658402442932, 0.3654719591140747, 0.4363323450088501, 0.45064401626586914, 0.5235987901687622, 0.6108652353286743, 0.6126105189323425] + 28 more
	float unkn1_3;//Values:[0.0, 0.2800000011920929, 1.0]
	float unkn1_4;//Values:[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 15.860931396484375]
	float unkn1_5;//Values:[0.0, 0.5, 1.0, 2.0, 3.0, 3.555809497833252, 4.0, 15.860931396484375]

}FadeByEmitterAngle<bgcolor=0x02b72e>/*META:ICON=ItemIconFadeByAngle*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[61, 4252, 4256, 4257, 4262, 4311, 4378, 4987, 5018, 5035] + 8 more

	float unkn1;//Values:[1.0, 5.0]
	uint null2;//Values:[0]
	uint null3;//Values:[0]
	float unkn4;//Values:[0.0, 0.20000000298023224, 0.5]

}FadeByOcclusion<bgcolor=0x5eac94>/*META:ICON=ItemIconFadeByAngle*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(122);

}FadeByOcclusionExpression<bgcolor=0x08a9e5>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(123);

}FakeDoF<bgcolor=0x363669>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 16, 17, 18, 19, 20, 21] + 3341 more

	uint unkn1_0;//Values:[1, 2, 3, 4, 5, 6, 8]
	int unkn1_1;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 3922 more
	int unkn1_2;//Values:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] + 76 more
	int unkn1_3;//Values:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11] + 65 more
	int unkn1_4;//Values:[4, 6, 8, 11, 12, 14, 15, 19, 20, 24] + 46 more
	int unkn1_5;//Values:[17, 20, 25, 28, 29, 45, 62, 68, 190, 143430518] + 7 more
	int unkn1_6;//Values:[18, 23, 26, 27, 34, 41, 42, 52, 69, 332165041] + 4 more
	int unkn1_7;//Values:[-1, 26, 29, 35, 42, 1009658426]
	int unkn1_8;//Values:[-1, 37, 40, 42, 64, 1417876277]
	int unkn1_9;//Values:[-1, 0, 1, 2, 3]

}FixRandomGenerator<bgcolor=0x08a9e5>;//Example: natives\NSW\vfx\editor\efd_pl\efd_h-bg\efd_0004_h-bg_20_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(205);

}FlowMap<bgcolor=0x02b72e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(129);

}FluidEmitter2D<bgcolor=0x5eac94>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(130);

}FluidSimulator2D<bgcolor=0x3a2006>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(153);

}GlobalVectorField<bgcolor=0x2a6866>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(154);

}GlobalVectorFieldClip<bgcolor=0x363669>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(155);

}GlobalVectorFieldExpression<bgcolor=0x08a9e5>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[254, 260, 271, 277, 351, 693, 703, 1717, 1817, 2475] + 3 more

}IgnorePlayerColor<bgcolor=0x85aa32>;//Example: natives\NSW\vfx\editor\efd_pl\efd_bow\efd_0004_bow_00_0100.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(210);

}ItemNum<bgcolor=0x3f16f9>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[4, 10, 11, 12, 13, 14, 15, 16, 17, 18] + 5903 more
	uint AppearFrameMin;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 54 more
	uint AppearFrameMax;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 60 more
	uint KeepFrameMin;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 151 more
	uint KeepFrameMax;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 162 more
	uint VanishFrameMin;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 104 more
	uint VanishFrameMax;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 106 more
	uint unkn7<comment = "Might be KeepHoldFrame">;//Values:[0, 1, 3, 15, 20, 30, 80, 90, 120, 150] + 4 more
	uint unkn8<comment = "Might be KeepHoldFrameVariation">;//Values:[0, 1, 3, 5, 14, 15, 20, 30, 80, 90] + 6 more
	uint unkn9;//Values:[0, 1, 2]
    
}Life<bgcolor=0x7a5736>/*META:ICON=ItemIconLife*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[31, 37, 63, 70, 89, 109, 123, 135, 144, 217] + 9 more

	uint unkn1_0;//Values:[2, 6]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2, 4]
	uint unkn1_3;//Values:[1, 2, 4]
	uint solverSize;//Values:[28, 56, 88]
	uint expression[solverSize/4];

}LifeExpression<bgcolor=0x5eac94>;//Example: natives\NSW\vfx\editor\efd_em\efd_em_shelltest\efd_0004_em000_02_0002.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn0;
    float unkn1;
    float unkn2;
    float unkn3;
    float unkn4;
    float unkn5;
    float unkn6;

}LuminanceBleed<bgcolor=0xfd1e6e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(146);

}MeshEmitter<bgcolor=0x3f16f9>/*META:ICON=ItemIconEmitter*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(147);

}MeshEmitterClip<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(148);

}MeshEmitterExpression<bgcolor=0xef6ade>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 14, 15, 16, 17, 18, 20, 21, 23, 25] + 1356 more

	float unkn1_0;//Values:[-0.5, 0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.042500004172325134, 0.04999999701976776] + 44 more
	float unkn1_1;//Values:[0.0, 0.0020000000949949026, 0.004999999888241291, 0.007000000216066837, 0.009999999776482582, 0.014999999664723873, 0.017500001937150955, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746] + 27 more
	float unkn1_2;//Values:[-0.20000000298023224, 0.0, 0.003999999724328518, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322] + 46 more
	float unkn1_3;//Values:[0.0, 0.001999999862164259, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03500000387430191, 0.05000000074505806, 0.05000000447034836] + 27 more
	float unkn1_4;//Values:[-0.30000001192092896, -0.20000000298023224, 0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806] + 36 more
	float unkn1_5;//Values:[0.0, 0.0010000000474974513, 0.004999999888241291, 0.009999999776482582, 0.012500000186264515, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806] + 17 more
	float unkn1_6;//Values:[-0.25, -0.10000000149011612, -0.019999999552965164, 0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806] + 43 more
	float unkn1_7;//Values:[0.0, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03500000387430191, 0.03999999910593033, 0.05000000074505806] + 28 more

}Noise<bgcolor=0x056e12>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc1003\efd_0004_evc1003_00_0010.efx.2621987
typedef struct//unconfirmed
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[3, 8, 9, 10, 11, 13, 14, 15, 16, 17] + 5934 more
	Int3 RelationPos;
	Int3 RelationRot;
	Int3 RelationScl;
	ubyte ParticleUseLocal;//Values:[0, 1]
	float ConstInheritRate;//Values:[0.0, 0.0010000000474974513, 0.001500000013038516, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033] + 23 more
	float ConstInheritVariation;//Values:[0.0, 0.0009999998146668077, 0.0009999999310821295, 0.0010000000474974513, 0.0010000001639127731, 0.0010000020265579224, 0.0020000003278255463, 0.009999997913837433, 0.009999999776482582, 0.010000001639127731] + 24 more
	uint ConstFrame;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 21 more
	uint ConstFrameVariation;//Values:[0, 1, 2, 3, 4, 5, 10, 12, 15, 17] + 5 more
	uint unkn6;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 29 more
	uint unkn7;//Values:[0, 1, 2, 3, 4, 5, 6, 8, 10, 12] + 9 more
	float unkn8;//Values:[0.0, 0.0010000000474974513, 0.0020000000949949026, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.11999999731779099] + 10 more
	uint boneNameLength;//Values:[2, 4, 6, 8, 10, 12, 14, 16, 18, 20] + 13 more
	wstring boneName;//Values:[20] + 392 more
}ParentOptions<read=ReadBoneParentOptions,write=WriteBoneParentOptions,bgcolor=0x7a5736>/*META:ICON=ItemIconTransform,IsBoneAttribute*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(160);

}PlaneCollider<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(161);

}PlaneColliderExpression<bgcolor=0x02b72e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint efxPathLength;
	wstring efxPath;

}PlayEfx<bgcolor=0xfd1e6e>;//Example: natives\NSW\vfx\editor\efd_em\efd_em042\efd_0004_em042_00_0012.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint fileSize;
	local int pos = FTell();
	EFXR action_efxr;
	FSeek(pos+fileSize);
	
}PlayEmitter<bgcolor=0xef6ade>;//Example: natives\NSW\vfx\editor\efd_ec\efd_ec017\efd_0004_ec017_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[12, 13, 14, 15, 16, 17, 19, 21, 22, 23] + 1485 more
	uint unkn1;//Values:[0, 1, 2, 3]
	float unkn2_0;//Values:[1.0]
	float unkn2_1;//Values:[1.0, 2.0]
	float unkn2_2;//Values:[-33.0, -11.0, -8.0, -6.0, -2.0, -1.0, 0.0, 0.0005000000237487257, 0.10000000149011612, 0.20000000298023224] + 27 more
	float unkn2_3;//Values:[-15.0, -14.5, -5.5, -2.5, -1.0, -0.75, -0.5, -0.49000000953674316, 0.0, 0.004999999888241291] + 40 more
	float unkn2_4;//Values:[-0.5, 0.0, 0.009999999776482582, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.07999999821186066, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224] + 26 more
	float unkn2_5;//Values:[-8.0, -1.0, -0.5, 0.0, 0.009999999776482582, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.33000001311302185, 0.3499999940395355] + 28 more
	float unkn2_6;//Values:[-5.0, -4.0, -3.5, -1.25, -1.0, -0.5, -0.30000001192092896, -0.25, -0.2199999988079071, -0.20000000298023224] + 35 more
	float unkn2_7;//Values:[-3.0, -1.0, -0.800000011920929, -0.30000001192092896, 0.0, 0.009999999776482582, 0.019999999552965164, 0.029999999329447746, 0.035999998450279236, 0.03999999910593033] + 31 more
	float unkn2_8;//Values:[0.0, 1.0, 2.0, 5.0, 10.0, 15.0, 20.0, 34.0, 44.0, 300.0]
	float unkn2_9;//Values:[0.0, 1.0, 2.0, 3.0, 4.0, 7.0, 7.5, 8.0, 20.0, 100.0]
	float unkn2_10;//Values:[0.0, 0.8999999761581421, 0.9800000190734863, 1.0, 2.0]
	float unkn2_11;//Values:[-0.5, 0.0, 0.30000001192092896, 1.0, 2.0, 2.5, 12.0]
	float unkn2_12;//Values:[-18.0, 0.0, 0.009999999776482582, 0.10000000149011612, 4.0, 10.0, 25.0]
	float unkn2_13;//Values:[0.0, 1.0, 2.0, 37.0, 39.0, 98.0]
	float unkn2_14;//Values:[0.0, 1.0, 2.0, 4.0, 16.0, 42.0, 43.0]
	float unkn2_15;//Values:[0.0, 1.0, 3.0, 5.0, 38.0]
	float unkn2_16;//Values:[-6.0, -1.0, 0.0, 0.10000000149011612, 0.30000001192092896, 1.0, 58.0]
	float unkn2_17;//Values:[0.0, 0.10000000149011612]

}ProceduralDistortion<bgcolor=0x85aa32>/*META:ICON=ItemIconAlphaCorrection*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[29, 42, 43, 104, 122, 130, 140, 247, 305, 2466] + 2 more

	uint unkn0;//Values:[8, 128, 136]
	uint null1;//Values:[0]
	int unkn2;//Values:[-1, 2]
	float unkn3;//Values:[7.0, 11.0, 90.0]
	uint unkn4;//Values:[1, 2]
	uint unkn5;//Values:[2, 3, 4]
	uint null6;//Values:[0]
	uint substruct1Length;//Values:[8, 16]
	uint substruct2Length;//Values:[24, 36, 48]
	uint substruct3Length;//Values:[0]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}

}ProceduralDistortionClip<bgcolor=0xfd1e6e>;//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_00_9100.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[114, 115, 123, 130, 213, 368, 548, 564, 12574]

	uint frameDelay;//Values:[3, 20, 200]
	uint null1;//Values:[0]

}ProceduralDistortionDelayFrame<bgcolor=0x4081ec>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc3026\efd_0004_evc3026_00_0007.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[351, 404, 540, 572]

	uint unkn1_0;//Values:[64]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[4]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2]
	uint unkn1_15;//Values:[2]
	uint unkn1_16;//Values:[2]
	uint unkn1_17;//Values:[2]
	uint unkn1_18;//Values:[2]
	uint solverSize;//Values:[76]
	uint expression[solverSize/4];

}ProceduralDistortionExpression<bgcolor=0x2f158b>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(193);

}PtAngularVelocity2D<bgcolor=0x08a9e5>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(194);

}PtAngularVelocity2DExpression<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(189);

}PtAngularVelocity3D<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(190);

}PtAngularVelocity3DExpression<bgcolor=0xfd1e6e>;
typedef struct
{

	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 17, 18, 19, 20, 21] + 576 more
	uint unkn1;//Values:[0, 2]
	uint behaviorStringLength;//Values:[29, 32, 33, 34, 35, 36, 38, 53]
	uint substructCount;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 5 more
	string behaviorString;//Values:[9] + 2 more
	if (substructCount != 0)
	{
		struct
		{
			uint substructLength;
			enum <uint> 
            {
                PtBehaviorProp_float = 9,
                PtBehaviorProp_float2 = 19,
                PtBehaviorProp_float3 = 11,
                PtBehaviorProp_range = 10,
                PtBehaviorProp_uint = 4,
                PtBehaviorProp_int = 14,
                PtBehaviorProp_wstring = 21,
                PtBehaviorProp_prefabpath = 17,
                PtBehaviorProp_enum = 18,
                PtBehaviorProp_color = 15,
                
            }dataType;
			uint unkn2;
            uint dataSize;
            if (VERSION >= VERSION_RE4)
            {
                short re4_unkn0;
                short re4_unkn1;
		    }
			switch(dataType)
            {
                case PtBehaviorProp_float:
                {
                    float propertyValue;
                    break;
                }
                case PtBehaviorProp_float2:
                {
                    Vec2 propertyValue;
                    break;
                }
                case PtBehaviorProp_range:
                {
                    Vec2 propertyValue;
                    break;
                }
                case PtBehaviorProp_float3:
                {
                    Vec3 propertyValue;
                    break;
                }
                case PtBehaviorProp_uint:
                {
                    uint propertyValue;
                    break;
                }
                case PtBehaviorProp_int:
                {
                    int propertyValue;
                    break;
                }
                case PtBehaviorProp_wstring:
                {
                    wstring propertyValue;
                    break;
                }
                case PtBehaviorProp_color:
                {
                    Color propertyValue;
                    break;
                }
                case PtBehaviorProp_prefabpath:
                {
                    wstring propertyValue;
                    break;
                }
                case PtBehaviorProp_enum:
                {
                    uint propertyValue<read=ReadPtBehaviorEnum>;
                    break;
                }
                default:
                {
                    Printf("Unmapped PtBehavior Data Type %i, using default type at %i\n",dataType,FTell());
                    ubyte propertyValue[dataSize];
                    break;
                }
            }//##END ENUM FACTORY DEF##
            
            string behaviorPropertyString;
		}property[substructCount]<optimize=false>;
	}
	
	
	

}PtBehavior<read=ReadPtBehavior,bgcolor=0x02b72e>/*META:ICON=ItemIconPtBehavior*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_ham\efd_0004_ham_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(114);

}PtBehaviorClip<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	ubyte stringBitFlag<format=binary,comment = "bitflag, determines whether there will be strings read">;
	ubyte unkn0_1;
    ubyte unkn0_2;
    ubyte unkn0_3;
    float unkn1;
	float unkn2;
	uint linkedAction;
    if ((stringBitFlag & (1 << 0)) != 0)//Check bit 0 to see if string 0 should be used
    {
        uint unknString0Length;
        wstring unknString0;
    }
    if ((stringBitFlag & (1 << 1)) != 0)//Check bit 1 to see if string 1 should be used
    {
        uint unknString1Length;
        wstring unknString1;
    }

}PtColliderAction<bgcolor=0x363669>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	ubyte stringBitFlag<format=binary,comment = "bitflag, determines whether there will be strings read">;
    ubyte unkn0_1;
    ubyte unkn0_2;
    ubyte unkn0_3;
    float unkn1;
    float unkn2;
    uint unkn3;
    uint unkn4;
    float unkn5;
    float unkn6;
    float unkn7;
    float unkn8;
    uint unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
    float unkn14;
    float unkn15;
    float unkn16;
    if ((stringBitFlag & (1 << 0)) != 0)//Check bit 0 to see if string 0 should be used
    {
        uint unknString0Length;
        wstring unknString0;
    }
    if ((stringBitFlag & (1 << 1)) != 0)//Check bit 1 to see if string 1 should be used
    {
        uint unknString1Length;
        wstring unknString1;
    }
}PtCollision<bgcolor=0xe78607>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[17, 23, 24, 31, 39, 46, 61, 74, 80, 86] + 113 more

	uint unkn1;//Values:[0, 1]
	uint unkn2;//Values:[0, 1]
	Color color0;		 

}PtColor<bgcolor=0xe78607>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0002\efd_0004_evc0002_00_0012.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[19, 26, 28, 30, 32, 41, 48, 63, 77, 88] + 122 more

	uint unkn0;//Values:[8, 15]
	uint unkn1;//Values:[0, 1]
	int unkn2;//Values:[-1, 2]
	float unkn3;//Values:[2.0, 3.0, 4.0, 5.0, 6.0, 8.0, 10.0, 12.0, 17.0, 18.0] + 35 more
	uint unkn4;//Values:[1, 4]
	uint unkn5;//Values:[2, 3, 4, 5, 8, 12, 16]
	uint unkn6;//Values:[0, 2]
	uint substruct1Length;//Values:[8, 32]
	uint substruct2Length;//Values:[24, 36, 48, 60, 96, 144, 192]
	uint substruct3Length;//Values:[0, 32]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}
	
}PtColorClip<bgcolor=0x3a2006>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0002\efd_0004_evc0002_00_0012.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[12, 15, 17, 18, 20, 21, 23, 25, 27, 31] + 485 more

	uint unkn1_0;//Values:[0, 1, 2, 3, 4]
	uint unkn1_1;//Values:[0, 1, 2, 3, 4]
	int actionIndex;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 1 more

}PtLife<bgcolor=0x056e12>/*META:ICON=ItemIconPtLife*/;//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_00_9150.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[19, 28, 30, 31, 35, 42, 43, 116, 121, 123] + 68 more

	uint null1;//Values:[0]
	
}PtSort<bgcolor=0x363669>;//Example: natives\NSW\vfx\editor\efd_hm\efd_hm04\efd_0004_hm04_006_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(134);

}PtTransform2D<bgcolor=0x731727>/*META:ICON=ItemIconTransform*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(135);

}PtTransform2DClip<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[16, 17, 21, 29, 31, 40, 45, 52, 56, 85] + 55 more

	uint null1_0;//Values:[0]
	uint null1_1;//Values:[0]
	uint null1_2;//Values:[0]
	uint null1_3;//Values:[0]
	uint null1_4;//Values:[0]
	uint null1_5;//Values:[0]
	float unkn1_6;//Values:[1.0]
	float unkn1_7;//Values:[1.0]
	float unkn1_8;//Values:[1.0]

}PtTransform3D<bgcolor=0xe78607>/*META:ICON=ItemIconTransform*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_h-bg\efd_0004_h-bg_10_0001.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[23, 31, 33, 42, 46, 58, 59, 62, 87, 94] + 53 more

	uint unkn0;//Values:[1, 2, 7, 28, 34, 36, 192, 448]
	uint unkn1;//Values:[0, 1]
	int unkn2;//Values:[-1, 2]
	float unkn3;//Values:[5.0, 8.0, 9.0, 10.0, 11.0, 13.0, 15.0, 26.0, 28.0, 30.0] + 20 more
	uint unkn4;//Values:[1, 2, 3]
	uint unkn5;//Values:[2, 4, 5, 6, 7, 8, 9, 10, 12, 15] + 1 more
	uint unkn6;//Values:[0, 2, 4]
	uint substruct1Length;//Values:[8, 16, 24]
	uint substruct2Length;//Values:[24, 48, 60, 72, 84, 96, 108, 120, 144, 180] + 1 more
	uint substruct3Length;//Values:[0, 32, 64]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}PtTransform3DClip<bgcolor=0x3f16f9>;//Example: natives\NSW\vfx\editor\efd_pl\efd_h-bg\efd_0004_h-bg_10_0001.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[23, 40, 119, 394, 626, 20749]

	uint unkn1_0;//Values:[0, 2]
	uint null1_1;//Values:[0]
	uint null1_2;//Values:[0]

}PtUvSequence<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[25, 121, 396, 628, 20752]

	uint unkn0;//Values:[2]
	uint unkn1;//Values:[1]
	int unkn2;//Values:[-1, 2]
	float unkn3;//Values:[20.0, 30.0, 100.0]
	uint unkn4;//Values:[1]
	uint unkn5;//Values:[3, 4]
	uint unkn6;//Values:[0, 1]
	uint substruct1Length;//Values:[8]
	uint substruct2Length;//Values:[36, 48]
	uint substruct3Length;//Values:[0, 16]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}PtUvSequenceClip<bgcolor=0x2a6866>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(138);

}PtVelocity2D<bgcolor=0x731727>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(139);

}PtVelocity2DClip<bgcolor=0xbe9672>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 29]

	uint null1_0;//Values:[0]
	float unkn1_1;//Values:[0.0, 1.0]
	uint null1_2;//Values:[0]
	uint null1_3;//Values:[0]

}PtVelocity3D<bgcolor=0xe78607>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc3027\efd_0004_evc3027_00_0007.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 31]

	uint unkn0;//Values:[8, 15]
	uint unkn1;//Values:[0, 1]
	int unkn2;//Values:[-1]
	float unkn3;//Values:[51.0, 70.0]
	uint unkn4;//Values:[1, 4]
	uint unkn5;//Values:[3, 15]
	uint null6;//Values:[0]
	uint substruct1Length;//Values:[8, 32]
	uint substruct2Length;//Values:[36, 180]
	uint substruct3Length;//Values:[0]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}PtVelocity3DClip<bgcolor=0x3f16f9>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc3027\efd_0004_evc3027_00_0007.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[57]

	uint null1;//Values:[0]
	uint rtexPathLength;//Values:[122]
	wstring rtexPath;//Values:[122]

}RenderTarget<bgcolor=0x731727>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0013\efd_0004_evc0013_00_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[59, 1238, 2204, 2466]
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn[4];
    }
    
	Color color0;
	float unkn1_0;//Values:[8.0]
	float unkn1_1;//Values:[10.0]
	float unkn1_2;//Values:[5.0]
	Color unkn1_3;//Values:[]
	float unkn1_4;//Values:[1.0]
	float unkn1_5;//Values:[0.5]
	float unkn1_6;//Values:[0.5]
	uint null1_7;//Values:[0]
	uint null1_8;//Values:[0]
	uint null1_9;//Values:[0]
	uint null1_10;//Values:[0]
	uint null1_11;//Values:[0]
	uint null1_12;//Values:[0]
	uint null1_13;//Values:[0]
	uint null1_14;//Values:[0]
	uint null1_15;//Values:[0]
	uint null1_16;//Values:[0]
	uint null1_17;//Values:[0]
	uint null1_18;//Values:[0]
	uint null1_19;//Values:[0]
	uint unkn1_20;//Values:[16777216]
	uint null1_21;//Values:[0]

}RgbCommon<bgcolor=0x056e12>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(207);

}RgbWater<bgcolor=0xef6ade>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 3465 more
	uint unkn1_0;//Values:[0, 1]
	float rotateSpeedX;//Values:[-0.6981317400932312, -0.4014257490634918, -0.39269909262657166, -0.3490658700466156, -0.2967059910297394, -0.2617993950843811, -0.1745329350233078, -0.15707963705062866, -0.13962635397911072, -0.12217305600643158] + 125 more
	float rotateSpeedXRandom;//Values:[0.0, 8.726646046852693e-05, 0.00017453292093705386, 0.0003490658418741077, 0.0004363323387224227, 0.0005235988064669073, 0.0006981316837482154, 0.0008726646774448454, 0.0010471976129338145, 0.0013089970452710986] + 33 more
	float rotateSpeedY;//Values:[0.0, 1.7453292002755916e-06, 0.00017453292093705386, 0.0008726646774448454, 0.0017453293548896909, 0.0026179940905421972, 0.0034906587097793818, 0.00436332356184721, 0.0052359881810843945, 0.0069813174195587635] + 77 more
	float rotateSpeedYRandom;//Values:[0.0, 0.0004363323387224227, 0.0008726646774448454, 0.0017453293548896909, 0.0026179940905421972, 0.0034906587097793818, 0.00436332356184721, 0.0052359881810843945, 0.0069813174195587635, 0.00872664712369442] + 20 more
	float rotateSpeedZ;//Values:[-0.6108652949333191, -0.2617993950843811, -0.20943953096866608, -0.1745329350233078, -0.15707963705062866, -0.13962635397911072, -0.10471976548433304, -0.0872664675116539, -0.06981317698955536, -0.05235988274216652] + 59 more
	float rotateSpeedZRandom;//Values:[0.0, 1.7453292457503267e-05, 8.726646046852693e-05, 0.00017453292093705386, 0.0003490658418741077, 0.0004363323387224227, 0.0005235988064669073, 0.0008726646774448454, 0.0013089970452710986, 0.0017453293548896909] + 30 more
	float unkn4_2;//Values:[0.0, 0.699999988079071, 0.800000011920929, 0.8700000047683716, 0.8899999856948853, 0.8999999761581421, 0.9200000166893005, 0.9300000071525574, 0.9399999976158142, 0.9449999928474426] + 28 more
	float unkn4_3;//Values:[0.0, 0.0005000000237487257, 0.0010000000474974513, 0.0020000000949949026, 0.004999999888241291, 0.009999999776482582, 0.05000000074505806]
	float unkn4_4;//Values:[0.0, 0.5, 0.800000011920929, 0.8500000238418579, 0.8999999761581421, 0.9200000166893005, 0.9300000071525574, 0.9399999976158142, 0.949999988079071, 0.9599999785423279] + 15 more
	float unkn4_5;//Values:[0.0, 0.0020000000949949026, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164]
	float unkn4_6;//Values:[0.0, 0.6000000238418579, 0.699999988079071, 0.800000011920929, 0.8999999761581421, 0.9300000071525574, 0.9399999976158142, 0.949999988079071, 0.9599999785423279, 0.9700000286102295] + 14 more
	float unkn4_7;//Values:[0.0, 0.0020000000949949026, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164]
	
	

}RotateAnim<bgcolor=0x3a2006>/*META:ICON=ItemIconRotateAnim*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[27, 32, 43, 46, 54, 58, 64, 85, 98, 115] + 62 more

	uint frameDelay;//Values:[0, 1, 2, 15, 20, 22, 25, 26, 28, 30] + 13 more
	uint unkn2;//Values:[0, 3, 5, 10, 15]

}RotateAnimDelayFrame<bgcolor=0x2f158b>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(74);

}RotateAnimExpression<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 4954 more

				float minScale;//Values:[-6.0, -5.0, -3.5, -3.0, -2.700000047683716, -2.5, -2.0, -1.7000000476837158, -1.5, -1.2999999523162842] + 246 more
				float unkn1_1;//Values:[0.0, 9.999999747378752e-05, 0.00019999999494757503, 0.0002500000118743628, 0.00039999998989515007, 0.0005000000237487257, 0.0010000000474974513, 0.001500000013038516, 0.0020000000949949026, 0.0024999999441206455] + 33 more
				float maxScale;//Values:[0.0, 0.10000000149011612, 0.5, 0.550000011920929, 0.6000000238418579, 0.6499999761581421, 0.699999988079071, 0.7400000095367432, 0.75, 0.7799999713897705] + 72 more
				float unkn1_3;//Values:[0.0, 0.0010000000474974513, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004999999888241291, 0.00800000037997961, 0.009999999776482582, 0.019999999552965164, 0.05000000074505806] + 1 more
				float unkn1_4;//Values:[-11.0, -2.0, -1.0, -0.8999999761581421, -0.550000011920929, -0.5, -0.4000000059604645, -0.30000001192092896, -0.25, -0.23000000417232513] + 108 more
				float unkn1_5;//Values:[0.0, 9.999999747378752e-05, 0.0003000000142492354, 0.0005000000237487257, 0.0010000000474974513, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582] + 5 more
				float unkn1_6;//Values:[0.0, 0.009999999776482582, 0.550000011920929, 0.6000000238418579, 0.6100000143051147, 0.699999988079071, 0.7250000238418579, 0.75, 0.800000011920929, 0.8199999928474426] + 39 more
				float unkn1_7;//Values:[0.0, 0.0005000000237487257, 0.0010000000474974513, 0.004999999888241291, 0.009999999776482582, 0.20000000298023224]
				float unkn1_8;//Values:[-2.0, -1.0789999961853027, -1.0, -0.8999999761581421, -0.8500000238418579, -0.800000011920929, -0.75, -0.5, -0.4000000059604645, -0.30000001192092896] + 105 more
				float unkn1_9;//Values:[0.0, 0.0005000000237487257, 0.0010000000474974513, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164] + 9 more
				float unkn1_10;//Values:[0.0, 0.5, 0.550000011920929, 0.5849999785423279, 0.6000000238418579, 0.6200000047683716, 0.699999988079071, 0.7300000190734863, 0.75, 0.7799999713897705] + 36 more
				float unkn1_11;//Values:[0.0, 0.0005000000237487257, 0.004999999888241291, 0.20000000298023224, 2.0]
				float unkn1_12;//Values:[-30.0, -10.0, -1.0, -0.550000011920929, -0.30000001192092896, -0.23000000417232513, -0.20000000298023224, -0.15000000596046448, -0.11999999731779099, -0.10000000149011612] + 60 more
				float unkn1_13;//Values:[0.0, 0.0024999999441206455, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164]
				float unkn1_14;//Values:[0.0, 0.029999999329447746, 0.6000000238418579, 0.699999988079071, 0.75, 0.800000011920929, 0.8299999833106995, 0.8799999952316284, 0.8999999761581421, 0.9100000262260437] + 16 more
				float unkn1_15;//Values:[0.0, 0.004999999888241291, 0.20000000298023224]

}ScaleAnim<bgcolor=0x2a6866>/*META:ICON=ItemIconScaleAnim*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[13, 18, 23, 33, 34, 40, 45, 56, 57, 66] + 193 more

	uint frameDelay;//Values:[0, 1, 2, 3, 4, 5, 6, 8, 9, 10] + 29 more
	uint unkn2;//Values:[0, 1, 2, 3, 5, 10, 50]

}ScaleAnimDelayFrame<bgcolor=0x5eac94>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{

	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[260, 2969, 3001, 3050, 3098, 3099, 3509, 4078, 6540, 6825] + 3 more
	uint unkn1;//Values:[1, 16]
	uint unkn2;//Values:[0, 1, 2, 4]
	uint unkn3;//Values:[0, 2]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;//Values:[2]
	    uint sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;//Values:[2]
	    uint sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0, 2]
	    uint sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;//Values:[2]
	    uint sb_unkn4<comment="Required Version: MHRSB (.2818730) or above">;//Values:[2]
	    uint sb_unkn5<comment="Required Version: MHRSB (.2818730) or above">;//Values:[2]
    }
	
	uint solverSize;//Values:[44, 68, 256]
	uint expression[solverSize/4];

}ScaleAnimExpression<bgcolor=0xf57685>;//Example: natives\NSW\vfx\editor\efd_em\efd_em099\efd_0004_em099_00_0130.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[17, 19, 20, 21, 30, 33, 41, 42, 45, 47] + 521 more
	uint unkn1;//Values:[0, 1, 3]
	float unkn2_0;//Values:[0.009999999776482582, 1.0, 1.5, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0] + 9 more
	float unkn2_1;//Values:[0.009999999776482582, 0.5, 0.6000000238418579, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0] + 18 more
	float unkn2_2;//Values:[0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071] + 15 more
	float unkn2_3;//Values:[0.009999999776482582, 2.0, 3.0, 5.0, 6.0, 7.0, 8.0, 10.0, 12.0, 15.0] + 23 more
	float unkn2_4;//Values:[1.0, 3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 12.0, 14.0, 15.0] + 24 more
	float unkn2_5;//Values:[0.0, 0.10000000149011612, 0.25, 0.3499999940395355, 0.4000000059604645, 0.5, 0.75, 0.800000011920929, 1.0, 1.100000023841858] + 14 more

}ScaleByDepth<bgcolor=0xfd1e6e>;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_50_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(149);

}ScreenSpaceEmitter<bgcolor=0x3f16f9>/*META:ICON=ItemIconEmitter*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 13, 14, 15, 16, 17, 18, 19, 20, 21] + 5834 more
	float unkn1;//Values:[-100.0, -25.0, -20.0, -8.0, -7.0, -6.0, -5.0, -4.0, -3.0, -2.0] + 62 more
	uint unkn2;//Values:[0, 1, 2, 3, 4]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
	    
    }
	float unkn3;//Values:[-500.0, -300.0, -50.0, -40.0, -30.0, -20.0, -10.0, -6.0, -5.0, -4.5] + 25 more
	uint unkn4;//Values:[0]
	uint unkn5;//Values:[0.0, 0.0010000000474974513, 0.009999999776482582, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5, 0.6000000238418579] + 123 more
	float unkn6;//Values:[2.8754644487945246e-42, 3.587324068671532e-42, 3.592929262528831e-42, 3.6041396502434295e-42, 3.7722954659624076e-42, 4.310394076263137e-42, 4.321604463977736e-42, 4.3552356271215315e-42, 4.489760279696714e-42, 5.0222536961401444e-42] + 11 more
	float unkn7;//Values:[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan] + 475 more
	float unkn8;//Values:[0.15000000596046448]
	float unkn9;//Values:[0.15000000596046448]
	float unkn10;//Values:[1.0]
	float unkn11;//Values:[1.0]
	uint unkn12;//Values:[1.0]
	uint unkn13;//Values:[100.0]
	uint null14;//Values:[0]
	float null15;//Values:[0.0]
	float null16;//Values:[0.0]
	float unkn17;//Values:[0.0, 0.009999999776482582, 0.05000000074505806, 0.0784313753247261, 0.10000000149011612, 0.10999999940395355, 0.11999999731779099, 0.12156862765550613, 0.12999999523162842, 0.14901961386203766] + 44 more
	uint unkn18;//Values:[1025705299, 1028389654, 1028443341, 1031831681, 1032358025, 1033937057, 1034120751, 1034989745, 1036568777, 1036805105] + 23 more
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;//Values:[5.0, 10.0, 20.0, 30.0, 100.0]
	    uint sb_unkn4<comment="Required Version: MHRSB (.2818730) or above">;//Values:[1.0]
	    uint sb_unkn5<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0, 1022739087, 1025758986, 1039516303, 1055622431, 1056964608, 1060991140, 1065353216]    
    }
	
	float unkn19;//Values:[0.20000000298023224]
	float null20;//Values:[0.0]
	float null21;//Values:[0.0]
	float null22;//Values:[0.0]
	float null23;//Values:[0.0]
	float unkn24;//Values:[0.0, 1.401298464324817e-45]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn6<comment="Required Version: MHRSB (.2818730) or above">;//Values:[72, 255]
	    uint sb_null7<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0]
	    uint sb_unkn8<comment="Required Version: MHRSB (.2818730) or above">;//Values:[255]
	    uint sb_unkn9<comment="Required Version: MHRSB (.2818730) or above">;//Values:[255]
	    uint sb_unkn10<comment="Required Version: MHRSB (.2818730) or above">;//Values:[255]
	    uint sb_unkn11<comment="Required Version: MHRSB (.2818730) or above">;//Values:[255]
	    uint sb_unkn12<comment="Required Version: MHRSB (.2818730) or above">;//Values:[255] 
    }
	
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn[4];
    }
}ShaderSettings<bgcolor=0x02b72e>/*META:ICON=ItemIconShaderSettings*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(107);

}ShaderSettingsExpression<bgcolor=0x056e12>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(163);

}ShapeOperator<bgcolor=0xf57685>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(164);

}ShapeOperatorExpression<bgcolor=0x731727>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[2, 8, 9, 10, 11, 12, 13, 14, 15, 16] + 5923 more
	uint maxParticles;//Values:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] + 76 more//Unconfirmed
	uint rawMaxParticles;//Values:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] + 76 more//Unconfirmed
	Int2 spawnNum;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 62 more
	Int2 intervalFrame;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 95 more
	uint useSpawnFrame;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 98 more
	RangeI spawnFrame;
    RangeI loopNum;
    /*
    if (VERSION >= VERSION_RERT)
    { 
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0, 1, 2, 3, 4, 5, 9, 10, 20, 63]
	    uint sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 334 more
	    uint sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 334 more
	}
*/
    /*
	if (VERSION >= VERSION_MHR)
    {
        uint unkn8<comment = "Affects spawn cycles, zeroed out on MHR SB update">;//Values:[0, 1, 20, 26, 30, 60, 110]
    }
    */
    Int2 emitterdelayFrame;//Values:[0]
    uint ringBufferMode;
	if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0, 1]
        //uint sb_unkn4<comment="Required Version: MHRSB (.2818730) or above">;
	}
    
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
        float re4_unkn1;
        uint re4_unkn2;
        float re4_unkn3;
        float re4_unkn4;
        float re4_unkn5;
        float re4_unkn6;
    }
    //Unmapped Variable Names:
    /*
    IntervalFrame
    IntervalFrameVariation
    LoopNum
    LoopNumVariation
    */
}Spawn<bgcolor=0x85aa32>/*META:ICON=ItemIconSpawn*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[24, 59, 104, 136, 152, 175, 177, 217, 286, 330] + 66 more
	uint flags;//Values:[1, 3, 4, 5, 12, 16]
	ExpressionOperator spawnNum;//Values:[0, 1, 2, 4]
	ExpressionOperator spawnNumRange;//Values:[2, 4]
	ExpressionOperator intervalFrame;//Values:[2, 3, 4]
	ExpressionOperator intervalFrameRange;//Values:[2, 4]
	ExpressionOperator emitterDelayFrame;//Values:[2, 4]
	ExpressionOperator emitterDelayFrameRange;//Values:[2]
    if (VERSION >= VERSION_RERT)
    {
        ExpressionOperator sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;//Values:[4]
	}
	
	uint solverSize;//Values:[28, 44, 52, 56, 68, 72, 84, 104, 120, 136] + 1 more
	uint expression[solverSize/4];

}SpawnExpression<bgcolor=0xfd1e6e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint blurRotation;
    uint two<comment="Doesn't seem to work when this value isn't two">;
    float blurAmount;
    float unkn4;
    float unkn5;
    float unknBlurScaleX;
    float unknBlurScaleY;
    float blurOpacity;
    float unkn9;
    float unkn10;
    float unkn11;
    float unkn12;


}StretchBlur<bgcolor=0x02b72e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(202);

}StretchBlurExpression<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(200);

}TestBehaviorUpdater<bgcolor=0x02b72e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 16, 17, 18, 19, 20, 22, 25, 26, 27] + 1118 more

	uint unkn1_0;//Values:[0, 994352038, 1000593162, 1008981770, 1014350479, 1015759766, 1017370378, 1020054733, 1022739087, 1025758986] + 52 more
	float unkn1_1;//Values:[0.0, 0.20000000298023224, 1.0, 2.4200000762939453, 2.7200000286102295, 2.8499999046325684, 2.9200000762939453, 2.9800000190734863, 3.0, 3.2300000190734863] + 217 more
	Color unkn1_2;//Values:[] + 276 more
	float unkn1_3;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.09000000357627869] + 68 more
	float unkn1_4;//Values:[0.0, 0.009999999776482582, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.09000000357627869, 0.10000000149011612] + 64 more
	float unkn1_5;//Values:[0.0, 0.009999999776482582, 0.05000000074505806, 0.5, 1.0, 1.649999976158142, 1.8200000524520874, 1.9299999475479126, 2.0, 2.640000104904175] + 109 more
	float unkn1_6;//Values:[0.0, 0.5, 0.6000000238418579, 0.699999988079071, 0.800000011920929, 1.0, 1.2000000476837158, 1.2999999523162842, 1.5, 2.0] + 15 more
	float unkn1_7;//Values:[0.10000000149011612, 0.11999999731779099, 0.14000000059604645, 0.15000000596046448, 0.17000000178813934, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.3799999952316284, 0.4000000059604645] + 23 more
	float unkn1_8;//Values:[0.05000000074505806, 0.07999999821186066, 0.09000000357627869, 0.10999999940395355, 0.12999999523162842, 0.1599999964237213, 0.18000000715255737, 0.1899999976158142, 0.20000000298023224, 0.23999999463558197] + 32 more
	float unkn1_9;//Values:[0.0, 0.5, 0.800000011920929, 1.0, 1.2000000476837158, 1.25, 1.5, 2.0, 3.0, 4.0] + 1 more
	uint unkn1_10;//Values:[0, 1]
	uint unkn1_11;//Values:[0, 2, 5]
	uint unkn1_12;//Values:[0, 2, 5]
	uint unkn1_13;//Values:[0, 3, 5, 8, 10, 12, 15, 20, 25, 26] + 9 more
	uint unkn1_14;//Values:[0, 3, 5, 8, 10, 12, 15, 20, 25, 26] + 9 more
	uint unkn1_15;//Values:[0, 10, 15, 16, 20, 25, 30, 40, 45, 50] + 9 more
	uint unkn1_16;//Values:[0, 10, 15, 16, 20, 25, 30, 45, 50, 60] + 9 more

}TexelChannelOperator<bgcolor=0xbe9672>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[27, 36, 43, 51, 66, 79, 145, 182, 196, 208] + 111 more

	uint unkn0;//Values:[2, 3, 130, 131, 162, 256, 512, 1024, 1026]
	uint null1;//Values:[0]
	uint unkn2;//Values:[2]
	float unkn3;//Values:[20.0, 25.0, 30.0, 45.0, 55.0, 60.0, 80.0, 85.0, 99.0, 110.0] + 3 more
	uint unkn4;//Values:[1, 2, 3]
	uint unkn5;//Values:[2, 3, 4, 5, 6, 7, 10]
	uint unkn6;//Values:[0, 1, 2]
	uint substruct1Length;//Values:[8, 16, 24]
	uint substruct2Length;//Values:[24, 36, 48, 60, 72, 84, 120]
	uint substruct3Length;//Values:[0, 16, 32]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}TexelChannelOperatorClip<bgcolor=0xe78607>;//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_09_0011.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(100);

}TexelChannelOperatorExpression<bgcolor=0xfd1e6e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 15, 16, 17, 18, 19, 20, 21, 22, 23] + 2009 more
    float unkn1;//Values:[0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.09000000357627869, 0.10000000149011612, 0.11999999731779099] + 183 more
	float unkn2;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07500000298023224, 0.07999999821186066] + 72 more
	float unkn3;//Values:[0.0, 0.029999999329447746, 0.05999999865889549, 0.10000000149011612, 0.11999999731779099, 0.20000000298023224, 0.23000000417232513, 0.25, 0.25999999046325684, 0.27000001072883606] + 10 more
    
}TextureFilter<bgcolor=0x3a2006>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0000.efx.2621987
typedef struct//Struct may be incorrect, might not be fixed length
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[35, 45, 120, 183, 209, 215, 259, 276, 280, 360] + 14 more

	uint unkn1_0;//Values:[81955, 81967, 81975, 87331, 87335]
	uint unkn1_1;//Values:[320, 448, 458, 1018]
	int unkn1_2;//Values:[-1] + 19 more
	float unkn1_3;//Values:[1.0, 26.0]
	uint null1_4;//Values:[0]
	uint null1_5;//Values:[0]
	float unkn1_6;//Values:[0.0, 0.25, 1.7999999523162842]
	uint null1_7;//Values:[0]
	float unkn1_8;//Values:[0.0, 0.10000000149011612]
	uint null1_9;//Values:[0]
	float unkn1_10;//Values:[-0.004999999888241291, 0.0, 0.007000000216066837, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224]
	uint null1_11;//Values:[0]
	float unkn1_12;//Values:[0.5, 1.0]
	uint null1_13;//Values:[0]
	float unkn1_14;//Values:[0.800000011920929, 0.8999999761581421, 0.9700000286102295, 1.0]
	uint null1_15;//Values:[0]
	float unkn1_16;//Values:[0.0, 90.0, 180.0]
	uint null1_17;//Values:[0]
	uint null1_18;//Values:[0]
	uint null1_19;//Values:[0]
	float unkn1_20;//Values:[1.0]
	uint null1_21;//Values:[0]
	float unkn1_22;//Values:[0.699999988079071, 0.75, 1.0, 2.0, 3.0, 4.0]
	uint null1_23;//Values:[0]
	float unkn1_24;//Values:[-1.0, 0.699999988079071, 1.0, 3.0, 4.0]
	uint null1_25;//Values:[0]
	uint null1_26;//Values:[0]
	uint null1_27;//Values:[0]
	float unkn1_28;//Values:[-0.029999999329447746, 0.0]
	uint null1_29;//Values:[0]
	float unkn1_30;//Values:[1.0]
	uint null1_31;//Values:[0]
	float unkn1_32;//Values:[1.0]
	uint null1_33;//Values:[0]
	uint null1_34;//Values:[0]
	uint null1_35;//Values:[0]
	uint null1_36;//Values:[0]
	uint null1_37;//Values:[0]
	float unkn1_38;//Values:[1.0]
	float unkn1_39;//Values:[1.0]
	uint unkn1_40;//Values:[356, 448, 453, 464, 480, 485, 1664, 1984]
	int unkn1_41;//Values:[-1] + 22 more
	float unkn1_42;//Values:[1.0, 4.0, 50.0, 100.0]
	uint null1_43;//Values:[0]
	float unkn1_44;//Values:[0.0, 1.0]
	float unkn1_45;//Values:[0.0, 0.10000000149011612, 0.800000011920929, 1.2000000476837158]
	float unkn1_46;//Values:[0.0, 1.0]
	float unkn1_47;//Values:[-0.004999999888241291, -0.0010000000474974513, 0.0, 0.0010000000474974513, 0.004999999888241291]
	uint null1_48;//Values:[0]
	float unkn1_49;//Values:[-0.05000000074505806, -0.02500000037252903, -0.009999999776482582, -0.004999999888241291, -0.0020000000949949026, 0.0, 0.0007999999797903001, 0.004999999888241291, 0.009999999776482582]
	uint null1_50;//Values:[0]
	float unkn1_51;//Values:[1.0]
	uint null1_52;//Values:[0]
	float unkn1_53;//Values:[0.9399999976158142, 0.9800000190734863, 1.0]
	uint null1_54;//Values:[0]
	uint null1_55;//Values:[0]
	float unkn1_56;//Values:[0.0, 10.0]
	uint null1_57;//Values:[0]
	uint null1_58;//Values:[0]
	float unkn1_59;//Values:[1.0]
	uint null1_60;//Values:[0]
	float unkn1_61;//Values:[0.800000011920929, 1.0, 1.25, 1.7000000476837158, 2.0]
	uint null1_62;//Values:[0]
	float unkn1_63;//Values:[0.5, 0.550000011920929, 0.6000000238418579, 0.6499999761581421, 1.0, 1.5, 1.7000000476837158, 2.0, 3.0]
	uint null1_64;//Values:[0]
	float unkn1_65;//Values:[0.0, 0.10000000149011612]
	uint null1_66;//Values:[0]
	float unkn1_67;//Values:[-0.10000000149011612, 0.0, 0.029999999329447746]
	uint null1_68;//Values:[0]
	float unkn1_69;//Values:[1.0]
	uint null1_70;//Values:[0]
	float unkn1_71;//Values:[0.9900000095367432, 1.0]
	uint null1_72;//Values:[0]
	uint null1_73;//Values:[0]
	uint unkn1_74;//Values:[0, 10]
	uint null1_75;//Values:[0]
	uint null1_76;//Values:[0]
	float unkn1_77;//Values:[0.44999998807907104, 0.5, 0.550000011920929, 0.6000000238418579, 1.0]
	float unkn1_78;//Values:[0.44999998807907104, 0.550000011920929, 0.6000000238418579, 1.0]
	uint unkn1_79;//Values:[448, 453, 464]
	int unkn1_80;//Values:[-1] + 22 more
	float unkn1_81;//Values:[1.0]
	float unkn1_82;//Values:[0.0, 0.30000001192092896]
	float unkn1_83;//Values:[0.0, 1.0]
	uint null1_84;//Values:[0]
	float unkn1_85;//Values:[0.0, 1.0]
	uint null1_86;//Values:[0]
	uint null1_87;//Values:[0]
	float unkn1_88;//Values:[0.0, 0.004999999888241291]
	uint null1_89;//Values:[0]
	float unkn1_90;//Values:[1.0]
	uint null1_91;//Values:[0]
	float unkn1_92;//Values:[1.0]
	uint null1_93;//Values:[0]
	uint null1_94;//Values:[0]
	uint null1_95;//Values:[0]
	uint null1_96;//Values:[0]
	uint null1_97;//Values:[0]
	float unkn1_98;//Values:[1.0]
	uint null1_99;//Values:[0]
	float unkn1_100;//Values:[1.0, 1.2000000476837158, 1.5]
	uint null1_101;//Values:[0]
	float unkn1_102;//Values:[0.800000011920929, 1.0, 1.5]
	uint null1_103;//Values:[0]
	float unkn1_104;//Values:[0.0, 0.10000000149011612]
	uint null1_105;//Values:[0]
	float unkn1_106;//Values:[-0.10000000149011612, 0.0]
	uint null1_107;//Values:[0]
	float unkn1_108;//Values:[1.0]
	uint null1_109;//Values:[0]
	float unkn1_110;//Values:[1.0]
	uint null1_111;//Values:[0]
	uint null1_112;//Values:[0]
	uint null1_113;//Values:[0]
	uint null1_114;//Values:[0]
	uint null1_115;//Values:[0]
	float unkn1_116;//Values:[1.0]
	float unkn1_117;//Values:[1.0]
	uint uvs0PathUnicodeCharCount;//Values:[32, 36]
	uint uvs1PathUnicodeCharCount;//Values:[32, 36]
	uint uvs2PathUnicodeCharCount;//Values:[1, 32]
	wstring uvs0Path;//Values:[32]
	wstring uvs1Path;//Values:[32]
	wstring uvs2Path;//Values:[32]
}TextureUnit<bgcolor=0x3f16f9>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(87);

}TextureUnitExpression<bgcolor=0x363669>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[1, 13, 19, 90, 92, 207, 232]
	float pos_x;//Values:[256.0, 288.0, 512.0, 750.0, 800.0, 1024.0, 1500.0]
	float pos_y;//Values:[-200.0, -100.0, -78.0, -75.0, -4.0, 256.0, 2500.0]
	uint rot;//Values:[0]
	float scale_x;//Values:[1.0]
	float scale_y;//Values:[1.0]

}Transform2D<bgcolor=0xe78607>/*META:ICON=ItemIconTransform*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0013\efd_0004_evc0013_00_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(8);

}Transform2DClip<bgcolor=0xe78607>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn1_0;//Values:[1, 4, 8]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[0, 2]
	uint unkn1_4;//Values:[2, 4]
	uint unkn1_5;//Values:[2]
	uint solverSize;//Values:[28, 44]
	uint expression[solverSize/4];

}Transform2DExpression<bgcolor=0xfd1e6e>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(7);

}Transform2DModifier<bgcolor=0xe23209>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint frameDelay;
	uint unkn1;

}Transform2DModifierDelayFrame<bgcolor=0xef6ade>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[1, 7, 8, 9, 10, 13, 14, 15, 16, 17] + 5943 more
	Vec3 Translation;
	Vec3 Rotation;
	Vec3 Scale;
	uint RotationOrder;//Values:[0, 1, 2, 3, 4, 5]

}Transform3D<bgcolor=0x731727>/*META:ICON=ItemIconTransform*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[7, 13, 15, 16, 17, 21, 22, 28, 38, 51] + 142 more
	uint unkn0;//Values:[0, 2, 3, 4, 5, 6, 7, 128, 192, 264] + 4 more
	uint null1;//Values:[0]
	int unkn2;//Values:[-1, 0, 2]
	float unkn3;//Values:[0.0, 3.0, 8.0, 9.0, 10.0, 15.0, 16.0, 19.0, 20.0, 30.0] + 28 more
	uint unkn4;//Values:[0, 1, 2, 3, 4, 6]
	uint unkn5;//Values:[0, 2, 3, 4, 5, 6, 9, 12, 18]
	uint unkn6;//Values:[0, 3, 4, 6, 9]
	uint substruct1Length;//Values:[0, 8, 16, 24, 32, 48]
	uint substruct2Length;//Values:[0, 24, 36, 48, 60, 72, 108, 144, 216]
	uint substruct3Length;//Values:[0, 48, 64, 96, 144]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}Transform3DClip<bgcolor=0xfd1e6e>;//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_00_9150.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[20, 21, 22, 23, 29, 34, 38, 46, 57, 59] + 524 more
	uint unkn1;//Values:[0, 1, 2, 3, 4, 5, 7, 8, 16, 17] + 23 more
	uint unkn2;//Values:[0, 2, 4]
	uint unkn3;//Values:[0, 2, 4]
	uint unkn4;//Values:[0, 1, 2, 4]
	uint unkn5;//Values:[0, 2, 4]
	uint unkn6;//Values:[0, 1, 2, 4]
	uint unkn7;//Values:[0, 2, 4]
	uint unkn8;//Values:[0, 1, 2, 3, 4]
	uint unkn9;//Values:[0, 1, 2, 3, 4]
	uint unkn10;//Values:[0, 1, 2, 4]
	uint solverSize;//Values:[0, 28, 32, 44, 52, 56, 60, 68, 72, 76] + 38 more
	uint expression[solverSize/4];

}Transform3DExpression<optimize=false,bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 23, 24, 25] + 2024 more
	uint unkn1_0;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 18, 19] + 33 more
	uint null1_1;//Values:[0]
	float unkn1_2;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 5.0]
	float unkn1_3;//Values:[-0.25, -0.15000000596046448, 0.0, 5.0]
	float unkn1_4;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.5, 2.0]
	float unkn1_5;//Values:[0.0, 0.10000000149011612]
	float unkn1_6;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 5.0]
	float unkn1_7;//Values:[0.0, 0.01745329424738884, 0.03490658849477768, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.5235987901687622, 0.8726646900177002, 1.0471975803375244, 1.5707963705062866] + 1 more
	float unkn1_8;//Values:[0.0, 0.01745329424738884, 0.05235988274216652, 0.0872664675116539, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.4363323450088501, 0.7853981852531433, 0.8726646900177002] + 1 more
	float unkn1_9;//Values:[-0.5235987901687622, 0.0, 1.5707963705062866, 2.5307276248931885, 3.1415927410125732]
	float unkn1_10;//Values:[0.0, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.4363323450088501, 0.5235987901687622, 0.7853981852531433, 3.1415927410125732, 6.2831854820251465]
	float unkn1_11;//Values:[-0.3490658700466156, 0.0, 0.01745329424738884, 0.0872664675116539, 0.10471976548433304, 0.1745329350233078, 0.2617993950843811, 0.7853981852531433, 0.8726646900177002, 1.5707963705062866] + 1 more
	float unkn1_12;//Values:[0.0, 0.01745329424738884, 0.05235988274216652, 0.0872664675116539, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.4363323450088501, 0.8726646900177002, 3.1415927410125732]
	float unkn1_13;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.800000011920929, 0.8999999761581421, 1.0, 1.2000000476837158, 1.350000023841858]
	float unkn1_14;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.4000000059604645]
	float unkn1_15;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 0.8999999761581421, 1.0, 1.2000000476837158, 1.350000023841858] + 1 more
	float unkn1_16;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.4000000059604645]
	float unkn1_17;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.800000011920929, 0.8999999761581421, 1.0, 1.2000000476837158, 1.350000023841858]
	float unkn1_18;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.4000000059604645]
	float unkn1_19;//Values:[-1.0, -0.6000000238418579, -0.5, -0.4000000059604645, -0.30000001192092896, -0.25, -0.20000000298023224, -0.18000000715255737, -0.10000000149011612, -0.07000000029802322] + 47 more
	uint null1_20;//Values:[0]
	float unkn1_21;//Values:[0.0, 0.699999988079071, 0.8999999761581421, 0.9350000023841858, 0.9399999976158142, 0.949999988079071, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863, 0.9900000095367432] + 11 more
	uint null1_22;//Values:[0]
	uint unkn1_23;//Values:[3197737370, 3201092813, 3204448256, 3208642560, 3212836864, 3214514586, 3215353446, 3216192307, 3217031168, 3219547750] + 73 more
	uint unkn1_24;//Values:[0, 985963430, 992204554, 1000593162, 1008981770, 1017370378]
	float unkn1_25;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.6000000238418579, 0.699999988079071, 0.8999999761581421, 0.9399999976158142, 0.949999988079071, 0.9599999785423279, 0.9700000286102295] + 15 more
	uint null1_26;//Values:[0]
	float unkn1_27;//Values:[-2.0, -1.5, -1.2999999523162842, -1.0, -0.800000011920929, -0.75, -0.6000000238418579, -0.5, -0.25, -0.23000000417232513] + 47 more
	uint unkn1_28;//Values:[0, 1000593162]
	float unkn1_29;//Values:[0.0, 0.09870000183582306, 0.3499999940395355, 0.800000011920929, 0.8700000047683716, 0.8999999761581421, 0.9300000071525574, 0.9399999976158142, 0.949999988079071, 0.9599999785423279] + 14 more
	uint unkn1_30;//Values:[0, 992204554]
	float unkn1_31;//Values:[-0.5759586691856384, -0.5235987901687622, -0.12217305600643158, -0.0872664675116539, -0.05235988274216652, -0.03490658849477768, -0.02617994137108326, -0.01745329424738884, -0.009424778632819653, -0.00872664712369442] + 42 more
	float unkn1_32;//Values:[0.0, 0.0008726646774448454, 0.0017453293548896909, 0.0034906587097793818, 0.00436332356184721, 0.0052359881810843945, 0.00872664712369442, 0.01745329424738884, 0.03490658849477768, 0.05235988274216652] + 3 more
	float unkn1_33;//Values:[0.0, 0.8999999761581421, 0.9200000166893005, 0.9559999704360962, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863, 0.9819999933242798, 0.9850000143051147, 0.9879999756813049] + 4 more
	float unkn1_34;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164]
	float unkn1_35;//Values:[-1.5707963705062866, -0.5235987901687622, -0.4363323450088501, -0.41887906193733215, -0.3490658700466156, -0.27925270795822144, -0.2617993950843811, -0.24434611201286316, -0.20943953096866608, -0.13962635397911072] + 86 more
	float unkn1_36;//Values:[0.0, 0.00026179940323345363, 0.0003490658418741077, 0.0008726646774448454, 0.0012217306066304445, 0.0017453293548896909, 0.0034906587097793818, 0.00436332356184721, 0.0052359881810843945, 0.0069813174195587635] + 7 more
	float unkn1_37;//Values:[0.0, 0.20000000298023224, 0.800000011920929, 0.8999999761581421, 0.9300000071525574, 0.9399999976158142, 0.949999988079071, 0.9599999785423279, 0.9649999737739563, 0.9700000286102295] + 16 more
	float unkn1_38;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164]
	float unkn1_39;//Values:[-0.4363323450088501, -0.1745329350233078, -0.13962635397911072, -0.12217305600643158, -0.0872664675116539, -0.06981317698955536, -0.056723203510046005, -0.03839724510908127, -0.03490658849477768, -0.01745329424738884] + 55 more
	float unkn1_40;//Values:[0.0, 0.0008726646774448454, 0.0017453293548896909, 0.0034906587097793818, 0.00436332356184721, 0.0052359881810843945, 0.00872664712369442, 0.01745329424738884, 0.03490658849477768, 0.06981317698955536] + 3 more
	float unkn1_41;//Values:[0.0, 0.699999988079071, 0.8799999952316284, 0.9200000166893005, 0.949999988079071, 0.9559999704360962, 0.9599999785423279, 0.9649999737739563, 0.9700000286102295, 0.9800000190734863] + 9 more
	float unkn1_42;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164]
	float unkn1_43;//Values:[-0.10000000149011612, -0.09000000357627869, -0.05000000074505806, -0.029999999329447746, -0.02500000037252903, -0.02199999988079071, -0.019999999552965164, -0.014999999664723873, -0.009999999776482582, -0.007499999832361937] + 46 more
	uint unkn1_44;//Values:[0, 1000593162, 1008981770]
	float unkn1_45;//Values:[0.0, 0.800000011920929, 0.8199999928474426, 0.8500000238418579, 0.8600000143051147, 0.8999999761581421, 0.9100000262260437, 0.9200000166893005, 0.9300000071525574, 0.9399999976158142] + 14 more
	uint null1_46;//Values:[0]
	float unkn1_47;//Values:[-0.10000000149011612, -0.09000000357627869, -0.05000000074505806, -0.029999999329447746, -0.02199999988079071, -0.019999999552965164, -0.014999999664723873, -0.009999999776482582, -0.006000000052154064, -0.004999999888241291] + 39 more
	uint unkn1_48;//Values:[0, 981668463, 1000593162, 1008981770]
	float unkn1_49;//Values:[0.0, 0.800000011920929, 0.8199999928474426, 0.8500000238418579, 0.8999999761581421, 0.9100000262260437, 0.9200000166893005, 0.9300000071525574, 0.9399999976158142, 0.949999988079071] + 15 more
	uint null1_50;//Values:[0]
	float unkn1_51;//Values:[-0.05000000074505806, -0.029999999329447746, -0.02500000037252903, -0.019999999552965164, -0.014999999664723873, -0.009999999776482582, -0.007499999832361937, -0.007000000216066837, -0.006000000052154064, -0.004999999888241291] + 45 more
	uint unkn1_52;//Values:[0, 1000593162, 1008981770]
	float unkn1_53;//Values:[0.0, 0.699999988079071, 0.800000011920929, 0.8199999928474426, 0.8500000238418579, 0.8600000143051147, 0.8999999761581421, 0.9100000262260437, 0.9200000166893005, 0.9300000071525574] + 14 more
	uint null1_54;//Values:[0]

}Transform3DModifier<bgcolor=0xfd1e6e>;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[50, 52, 87, 125, 153, 182, 310, 337, 374, 421] + 39 more

	uint frameDelay;//Values:[0, 2, 10, 15, 16, 20, 30, 32, 40, 41] + 8 more
	uint null1;//Values:[0]

}Transform3DModifierDelayFrame<bgcolor=0x731727>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc1011\efd_0004_evc1011_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[5, 17, 23, 43, 55, 87, 95, 97, 115]

	uint unkn1;//Values:[0, 16]
	Color color0;
	Color color1;
	float unkn2_0;//Values:[1.0, 2.0, 2.5, 3.0]
	uint null2_1;//Values:[0]
	uint null2_2;//Values:[0]
	float unkn2_3;//Values:[0.0, 0.8726646900177002]
	float unkn2_4;//Values:[0.0, 0.5235987901687622, 3.1415927410125732]
	float unkn2_5;//Values:[0.05000000074505806, 0.10000000149011612, 0.5, 1.0, 1.2000000476837158, 2.0, 4.0, 18.0]
	float unkn2_6;//Values:[0.0, 0.029999999329447746, 0.05000000074505806, 0.5]
	float unkn2_7;//Values:[200.0, 256.0, 800.0, 2225.0, 3000.0, 6000.0]
	uint null2_8;//Values:[0]
	float unkn2_9;//Values:[256.0, 512.0, 1000.0]
	uint null2_10;//Values:[0]
	float unkn2_11;//Values:[0.0, 1.5]
	uint null2_12;//Values:[0]

}TypeBillboard2D<bgcolor=0x3f16f9>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0013\efd_0004_evc0013_00_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn1_0;//Values:[1, 4, 8]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[0, 2]
	uint unkn1_4;//Values:[2, 4]
	uint unkn1_5;//Values:[2]
    uint unkn1_6;
    uint unkn1_7;
    uint unkn1_8;
    uint unkn1_9;
    uint unkn1_10;
    uint unkn1_11;
    uint unkn1_12;
    uint unkn1_13;
	uint solverSize;//Values:[28, 44]
	uint expression[solverSize/4];

}TypeBillboard2DExpression<bgcolor=0x0a2c0f>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[5, 11, 12, 13, 14, 15, 16, 17, 18, 19] + 4566 more
	uint unkn1<comment="Might be BlendType">;//Values:[0, 1, 2, 3, 4, 16, 17, 18, 20, 32] + 4 more
	Color color0;
	Color color1;
	float unknOpacityValue;//Values:[0.0, 0.05000000074505806, 0.05999999865889549, 0.07500000298023224, 0.07999999821186066, 0.10000000149011612, 0.10999999940395355, 0.11999999731779099, 0.125, 0.15000000596046448] + 121 more
	float ColorRate;//Values:[0.0, 0.004000000189989805, 0.10000000149011612, 0.20000000298023224, 0.25, 0.5, 0.6000000238418579, 0.699999988079071, 0.800000011920929, 1.0] + 34 more
	float AlphaRate;//Values:[0.0, 0.5, 1.0, 2.0, 4.0, 4.300000190734863, 5.0, 8.0, 9.0, 10.0] + 8 more
	float Rotation;//Values:[-17.10422706604004, -5.58505392074585, -5.235987663269043, -4.886922359466553, -4.537856101989746, -4.014257431030273, -3.665191411972046, -3.6302850246429443, -3.1415927410125732, -2.96705961227417] + 187 more
	float RotationVariation;//Values:[0.0, 0.01745329424738884, 0.03490658849477768, 0.04363323375582695, 0.05235988274216652, 0.0872664675116539, 0.10471976548433304, 0.13962635397911072, 0.1745329350233078, 0.20943953096866608] + 27 more
	float SizeScaler;//Values:[0.0, 9.999999747378752e-05, 0.00039999998989515007, 0.0005000000237487257, 0.0010000000474974513, 0.001500000013038516, 0.0020000000949949026, 0.003000000026077032, 0.0035000001080334187, 0.004999999888241291] + 267 more
	float SizeScalerVariation;//Values:[0.0, 0.00019999999494757503, 0.0003000000142492354, 0.0005000000237487257, 0.0010000000474974513, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004000000189989805, 0.004999999888241291] + 67 more
	float SizeX;//Values:[0.0, 0.006000000052154064, 0.009999990463256836, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03500000014901161, 0.03999999910593033, 0.05000000074505806] + 72 more
	float SizeXVariation;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896] + 13 more
	float SizeY;//Values:[0.0, 0.006000000052154064, 0.00800000037997961, 0.009999999776482582, 0.013000000268220901, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03500000014901161] + 67 more
	float SizeYVariation;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25] + 12 more
	
    float unkn13;//Values:[-2.0, -1.0, -0.5, -0.10000000149011612, 0.0, 0.009999999776482582, 0.02500000037252903, 0.07500000298023224, 0.10000000149011612, 0.15000000596046448] + 37 more
	if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
	}
	float unkn14;
    float unkn15;//Values:[0.0, 1.1210387714598537e-44, 2.2420775429197073e-44, 3.363116314379561e-44]
	float unkn16;//Values:[-0.4000000059604645, -0.375, -0.3499999940395355, -0.25, -0.20000000298023224, -0.15000000596046448, -0.125, -0.10000000149011612, -0.07500000298023224, -0.05000000074505806] + 20 more

}TypeBillboard3D<bgcolor=0x85aa32>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[20, 26, 34, 36, 38, 40, 41, 44, 57, 68] + 100 more
    
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
    }
	uint unkn1_0;//Values:[1, 4, 16, 48, 64, 65, 80, 1024, 1280]
	uint unkn1_1;//Values:[0, 2, 4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[0, 1, 2, 4]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[0, 1, 2, 4]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[0, 1, 2]
	uint unkn1_8;//Values:[1, 2]
	uint unkn1_9;//Values:[0, 2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[0, 1, 2]
	uint unkn1_12;//Values:[2]
	uint solverSize;//Values:[28, 44, 56, 68, 88, 104, 124, 140, 172]
	uint expression[solverSize/4];

}TypeBillboard3DExpression<bgcolor=0x0a2c0f>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(23);

}TypeBillboard3DMaterial<bgcolor=0xfd1e6e>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(24);

}TypeBillboard3DMaterialClip<bgcolor=0xf57685>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(25);

}TypeBillboard3DMaterialExpression<bgcolor=0x3f16f9>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 14, 15, 16, 17, 18, 19, 21, 23, 24] + 928 more
	uint unkn1;//Values:[2, 5, 7, 8, 10, 11, 12, 13, 14, 15] + 56 more
	uint unkn2;//Values:[0, 1, 2, 8, 9, 12, 16, 17, 18, 64] + 3 more
	uint unkn3;//Values:[0, 1]
	Color color0;
	Color color1;
	float emission;//Values:[0.07500000298023224, 0.15000000596046448, 0.5, 0.75, 1.0, 1.2000000476837158, 1.2999999523162842, 1.5, 2.0, 2.5] + 35 more
	float unkn5;//Values:[0.0, 0.20000000298023224, 1.0, 1.2000000476837158, 1.5, 2.0, 3.0, 4.0, 5.0, 7.0] + 10 more
	float unkn6;//Values:[0.0, 1.5, 8.0, 10.0, 30.0, 41.0]
	float unkn7;//Values:[-1.3962634801864624, 0.0, 0.5585054159164429, 0.7853981852531433]
	float unkn8;//Values:[0.0, 0.2617993950843811, 0.5235987901687622, 0.6981317400932312, 0.7853981852531433, 1.5707963705062866, 1.7453293800354004, 3.1415927410125732, 6.2831854820251465]
	float effectScale;//Values:[0.004999999888241291, 0.007000000216066837, 0.00800000037997961, 0.009999999776482582, 0.012000000104308128, 0.013000000268220901, 0.014999999664723873, 0.017999999225139618, 0.019999999552965164, 0.023000000044703484] + 54 more
	float unkn10;//Values:[0.0, 0.0010000000474974513, 0.001500000013038516, 0.0020000000949949026, 0.003000000026077032, 0.004999999888241291, 0.006000000052154064, 0.007000000216066837, 0.00800000037997961, 0.009999999776482582] + 31 more
	float unkn11;//Values:[0.0, 0.20000000298023224, 0.5, 0.699999988079071, 0.800000011920929, 0.8999999761581421, 0.9800000190734863, 1.0, 1.5, 2.0] + 3 more
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0.10000000149011612, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.75, 0.800000011920929, 0.8999999761581421, 1.0] + 5 more
	    float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.25, 0.5, 1.0]
	    float sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0.10000000149011612, 0.30000001192092896, 0.4000000059604645, 0.5, 0.8999999761581421, 1.0, 1.100000023841858, 1.5, 1.7999999523162842, 2.0] + 2 more
	    float sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 1.0]
	    float sb_unkn4<comment="Required Version: MHRSB (.2818730) or above">;//Values:[-1.0, 0.0]
	    float sb_unkn5<comment="Required Version: MHRSB (.2818730) or above">;//Values:[0.0, 1.0]
	}
	
}TypeGpuBillboard<bgcolor=0xfd1e6e>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[106, 227, 228, 314, 323, 483, 1015, 1772, 2285, 4272] + 3 more

	uint unkn1_0;//Values:[0, 1, 17, 32]
	uint unkn1_1;//Values:[2, 4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[1, 2]
	uint unkn1_6;//Values:[2, 4]
	uint unkn1_7;//Values:[2]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn4<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn5<comment="Required Version: MHRSB (.2818730) or above">;
    }
	
	uint solverSize;//Values:[0, 28, 44, 88]
	uint expression[solverSize/4];

}TypeGpuBillboardExpression<bgcolor=0xbe9672>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[1607]

	uint unkn1;//Values:[371712]
	Color color0;
	Color color1;
	int unkn2_0;//Values:[-1]
	float unkn2_1;//Values:[80.0]
	uint null2_2;//Values:[0]
	uint null2_3;//Values:[0]
	float unkn2_4;//Values:[1.0]
	uint unkn2_5;//Values:[64]
	uint unkn2_6;//Values:[4]
	uint null2_7;//Values:[0]
	float unkn2_8;//Values:[1.0]
	uint null2_9;//Values:[0]
	float unkn2_10;//Values:[1.0]
	uint null2_11;//Values:[0]
	float unkn2_12;//Values:[1.0]
	float unkn2_13;//Values:[1.0]
	uint null2_14;//Values:[0]
	float unkn2_15;//Values:[1.0]
	uint null2_16;//Values:[0]
	float unkn2_17;//Values:[1.0]
	uint null2_18;//Values:[0]
	float unkn2_19;//Values:[1.0]
	uint null2_20;//Values:[0]
	uint null2_21;//Values:[0]
	uint null2_22;//Values:[0]
	uint null2_23;//Values:[0]
	uint null2_24;//Values:[0]
	uint null2_25;//Values:[0]
	uint null2_26;//Values:[0]
	uint null2_27;//Values:[0]
	float unkn2_28;//Values:[1.600000023841858]
	uint null2_29;//Values:[0]
	uint null2_30;//Values:[0]
	float unkn2_31;//Values:[0.019999999552965164]
	float unkn2_32;//Values:[0.9800000190734863]
	uint null2_33;//Values:[0]
	float unkn2_34;//Values:[0.800000011920929]
	float unkn2_35;//Values:[1.0]
	float unkn2_36;//Values:[8.0]
	uint unkn2_37;//Values:[10]
	uint unkn2_38;//Values:[6]
	float unkn2_39;//Values:[30.0]
	float unkn2_40;//Values:[60.0]
	uint unkn2_41;//Values:[6]
	float unkn2_42;//Values:[10.0]
	float unkn2_43;//Values:[10.0]
	float unkn2_44;//Values:[10.0]
	float unkn2_45;//Values:[10.0]
	float unkn2_46;//Values:[10.0]
	float unkn2_47;//Values:[10.0]
	uint unkn2_48;//Values:[1]
	uint unkn2_49;//Values:[64]
	uint null2_50;//Values:[0]
	uint null2_51;//Values:[0]
	uint null2_52;//Values:[0]
	uint null2_53;//Values:[0]
	uint unkn2_54;//Values:[2]
	float unkn2_55;//Values:[8.0]
	float unkn2_56;//Values:[8.0]
	float unkn2_57;//Values:[8.0]
	float unkn2_58;//Values:[8.0]
	float unkn2_59;//Values:[8.0]
	float unkn2_60;//Values:[8.0]
	uint unkn2_61;//Values:[1]
	uint unkn2_62;//Values:[64]
	uint null2_63;//Values:[0]
	uint null2_64;//Values:[0]
	uint null2_65;//Values:[0]
	uint null2_66;//Values:[0]
	uint unkn2_67;//Values:[2]
	float unkn2_68;//Values:[0.5]
	float unkn2_69;//Values:[1.0]
	float unkn2_70;//Values:[0.5]
	float unkn2_71;//Values:[1.0]
	float unkn2_72;//Values:[0.5]
	float unkn2_73;//Values:[1.0]
	uint null2_74;//Values:[0]
	uint null2_75;//Values:[0]
	uint null2_76;//Values:[0]
	uint null2_77;//Values:[0]
	uint null2_78;//Values:[0]
	uint null2_79;//Values:[0]
	uint unkn2_80;//Values:[2]
	uint unkn2_81;//Values:[1]
	uint unkn2_82;//Values:[1]
	uint unkn2_83;//Values:[1]
	uint null2_84;//Values:[0]
	ushort unkn3;
}TypeGpuLightning3D<bgcolor=0xbe9672>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc1016\efd_0004_evc1016_01_0001.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn0;
    uint unkn1;
    uint unkn2;
    uint unkn3;
    Color color0;
    Color color1;
    float unkn6;
    uint unkn7;
    uint unkn8;
    uint unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    uint unkn13;
    uint unkn14;
    uint unkn15;
    uint unkn16;
    uint unkn17;
    float unkn18;
    float unkn19;
    float unkn20;
    float unkn21;
    float unkn22;
    float unkn23;
    float unkn24;
    float unkn25;
    float unkn26;
    float unkn27;
    float unkn28;
    float unkn29;
    float unkn30;
    uint unkn31;
    uint texCount;
    uint meshPathLength;
    wstring meshPath;
    uint unknPathLength;
    wstring unknPath;
    uint mdfPathLength;
    wstring mdfPath;
    uint unknDataSize;
    if (unknDataSize != 0)
    {
        ubyte unknData[unknDataSize];
    }
    if (texCount != 0)
    {
        struct
        {
            uint texturePathLength;
            wstring texturePath;
        }texturePath[texCount]<optimize=false>;
    }
    else
    {
        uint unkn33;
    }
    

}TypeGpuMesh<read=ReadTypeGpuMesh,bgcolor=0x2a6866>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(177);

}TypeGpuMeshExpression<bgcolor=0x731727>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(178);

}TypeGpuMeshTrail<bgcolor=0x4081ec>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(179);

}TypeGpuMeshTrailClip<bgcolor=0xfd1e6e>/*META:ICON=ItemIconExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(180);

}TypeGpuMeshTrailExpression<bgcolor=0x85aa32>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 17, 44, 45, 49, 57, 59, 69, 90, 96] + 112 more

	uint unkn1;//Values:[8, 15, 20, 30, 32, 50, 64, 72, 74, 128] + 5 more
	uint unkn2;//Values:[0, 16, 20, 256, 259, 260, 272, 276, 288, 291] + 2 more
	uint unkn3;//Values:[0, 1]
	Color color0;
	Color color1;
	float unkn4_0;//Values:[0.0, 0.25, 0.75, 1.0, 1.2999999523162842, 2.0, 3.0, 5.0, 10.0, 15.0] + 6 more
	float unkn4_1;//Values:[0.0, 1.0, 2.0, 3.0, 4.0, 6.0, 10.0, 20.0, 40.0]
	float unkn4_2;//Values:[0.0, 1.0, 3.0, 4.0, 6.0, 8.0]
	uint unkn4_3;//Values:[0, 1070141403]
	float unkn4_4;//Values:[0.0, 1.5707963705062866, 3.1415927410125732]
	uint null4_5;//Values:[0]
	float unkn4_6;//Values:[0.0, 1.5707963705062866, 3.1415927410125732]
	uint null4_7;//Values:[0]
	float unkn4_8;//Values:[0.0, 1.5707963705062866, 3.1415927410125732]
	float unkn4_9;//Values:[0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07500000298023224, 0.07999999821186066, 0.10000000149011612] + 11 more
	float unkn4_10;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.07000000029802322] + 5 more
	float unkn4_11;//Values:[0.30000001192092896, 0.5, 0.699999988079071, 0.8999999761581421, 1.0]
	float unkn4_12;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896]
	float unkn4_13;//Values:[1.0, 1.2000000476837158, 2.0]
	float unkn4_14;//Values:[0.0, 0.20000000298023224, 0.30000001192092896, 0.5]
	float unkn4_15;//Values:[0.0, 0.30000001192092896, 0.9800000190734863, 1.0, 1.5, 2.0]

}TypeGpuPolygon<bgcolor=0x363669>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc1003\efd_0004_evc1003_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 25, 26, 28, 35, 53, 64, 67, 73, 80] + 86 more

	uint unkn1_0;//Values:[0, 1, 4, 10, 32, 33, 65540]
	uint unkn1_1;//Values:[0, 1]
	uint unkn1_2;//Values:[1, 5, 16, 20, 30, 32, 50, 60, 64, 90] + 5 more
	uint unkn1_3;//Values:[1, 2, 3, 5, 10]
	uint unkn1_4;//Values:[2, 3, 4, 6, 11]
	Color color0;
	Color color1;
	float unkn2_0;//Values:[0.699999988079071, 1.0, 1.5, 2.0, 3.0, 5.0, 15.0, 20.0, 25.0, 30.0] + 8 more
	float unkn2_1;//Values:[0.0, 5.0, 6.0, 30.0]
	uint null2_2;//Values:[0]
	float unkn2_3;//Values:[0.0, 0.699999988079071, 0.800000011920929, 0.9800000190734863, 1.0]
	float unkn2_4;//Values:[0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02070000022649765, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322] + 8 more
	float unkn2_5;//Values:[0.0, 0.001500000013038516, 0.0020000000949949026, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806] + 5 more
	float unkn2_6;//Values:[0.0, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5] + 9 more
	float unkn2_7;//Values:[0.0, 0.0010000000474974513, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5] + 2 more
}TypeGpuRibbonFollow<bgcolor=0x4081ec>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_h-bg\efd_0004_h-bg_10_0001.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[22, 30, 38, 39, 62, 63, 73, 75, 82, 94] + 31 more

	uint unkn1;//Values:[0, 512, 640, 2560, 2564, 2592, 2624, 2688, 2752]
	uint unkn2;//Values:[1]
	Color color0;
	Color color1;
	float unkn3_0;//Values:[1.0, 2.0, 6.0, 15.0, 30.0, 50.0, 100.0, 150.0, 200.0, 243.0]
	float unkn3_1;//Values:[0.0, 1.0]
	uint null3_2;//Values:[0]
	float unkn3_3;//Values:[0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07999999821186066, 0.10000000149011612, 0.11999999731779099, 0.12999999523162842] + 5 more
	float unkn3_4;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.15000000596046448, 0.5]
	float unkn3_5;//Values:[0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.800000011920929, 1.0, 1.399999976158142, 2.0]
	float unkn3_6;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.5]
	float unkn3_7;//Values:[1.0]
	float unkn3_8;//Values:[0.0, 0.9800000190734863, 1.0]
	uint unkn3_9;//Values:[9, 16, 24, 32, 40, 64, 128, 256, 360, 512]
	float unkn3_10;//Values:[1.2000000476837158, 2.0, 2.5, 2.5999999046325684, 3.0, 3.5, 4.0, 4.5, 5.0, 5.599999904632568] + 7 more
	float unkn3_11;//Values:[0.0, 0.20000000298023224, 0.5, 1.0, 1.5, 2.0, 2.5, 2.799999952316284, 4.0, 5.0] + 1 more
	uint unkn3_12;//Values:[1, 2, 3]
	float unkn3_13;//Values:[0.5]
	float unkn3_14;//Values:[1.0]
	uint null3_15;//Values:[0]
	uint null3_16;//Values:[0]
	float unkn3_17;//Values:[0.0, 1.0]
	uint null3_18;//Values:[0]
	float unkn3_19;//Values:[0.0, 1.0]
	uint null3_20;//Values:[0]
}TypeGpuRibbonLength<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_ot\efd_ninken\efd_0004_ninken_00_0090.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[13, 14, 15, 22, 24, 25, 26, 27, 28, 33] + 556 more
	uint unknBitFlag<comment="The values change between base game and sunbreak, even on files that have no changes. Game will crash when value is set wrong.">;//Values:[397312, 492032, 492544, 983296, 1212672, 1213184, 1215232, 1540352, 1548544, 4624384] + 57 more
	Color color0;
	Color color1;
	float unkn2_0;//Values:[1.0, 3.0, 5.0, 8.0, 10.0, 12.0, 13.0, 14.0, 15.0, 18.0] + 19 more
	float unkn2_1;//Values:[0.0, 1.0, 10.0, 20.0, 30.0, 50.0, 80.0]
	float unkn2_2;//Values:[0.0, 15.0, 20.0, 30.0, 50.0, 150.0]
	float unkn2_3;//Values:[0.0, 0.800000011920929, 0.9800000190734863, 1.0]
	if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        
    }
    float unkn2_4;//Values:[1.0]
	float unkn2_5;//Values:[0.20000000298023224, 0.25, 0.25999999046325684, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.75, 0.800000011920929] + 31 more
	float unkn2_6;//Values:[0.0, 0.04999999701976776, 0.050000011920928955, 0.09999847412109375, 0.09999999403953552, 0.10000000894069672, 0.10000002384185791, 0.10000038146972656, 0.19999992847442627, 0.19999998807907104] + 23 more
	float unkn2_7;//Values:[0.0, 1.0, 2.0]
	float unkn2_8;//Values:[0.0, 1.0, 60.0, 180.0]
	float unkn2_9;//Values:[0.0, 40.0, 50.0, 60.0, 70.0, 80.0, 100.0, 110.0, 120.0, 140.0] + 16 more
	uint unkn2_10;//Values:[0.0, 20.0, 27.0, 30.0, 40.0, 47.0, 50.0, 60.0, 70.0, 100.0] + 2 more
	uint unkn2_11;//Values:[2, 4, 5, 6, 7, 8, 9, 10, 11, 12] + 13 more
	uint unkn2_12;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 3 more
	float unkn2_13;//Values:[0.0, 2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 7.006492321624085e-45, 8.407790785948902e-45, 9.80908925027372e-45, 1.1210387714598537e-44, 1.2611686178923354e-44, 1.401298464324817e-44] + 3 more
	float unkn2_14;//Values:[0.0, 1.401298464324817e-45, 2.802596928649634e-45, 0.0005000000237487257, 0.004999999888241291, 0.029999999329447746, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896] + 5 more
	float unkn2_15;//Values:[0.0, 1.401298464324817e-45, 2.802596928649634e-45, 4.203895392974451e-45, 8.407790785948902e-44, 0.04999999701976776, 0.05000000074505806, 0.05000000447034836, 0.05000019073486328, 0.09999990463256836] + 11 more
	float unkn2_16;//Values:[0.0, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.05999999865889549, 0.09999990463256836, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25] + 12 more
	float unkn2_17;//Values:[0.0, 0.009999999776482582, 0.010000001639127731, 0.019999999552965164, 0.020000003278255463, 0.024999618530273438, 0.02499999850988388, 0.02500152587890625, 0.049999915063381195, 0.04999992251396179] + 31 more
	float unkn2_18;//Values:[0.0, 0.0005000000237487257, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.05999999865889549, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896] + 6 more
	float unkn2_19;//Values:[0.0, 0.0009999275207519531, 0.009999999776482582, 0.010000001639127731, 0.019999999552965164, 0.020000003278255463, 0.024999618530273438, 0.02499999850988388, 0.04999999701976776, 0.05000000074505806] + 18 more
	float unkn2_20;//Values:[0.0, 0.09999990463256836, 0.10000000149011612, 0.19999980926513672, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 1.0]
	float unkn2_21;//Values:[0.0, 0.09999999403953552, 0.10000000894069672, 0.10000002384185791, 0.10000038146972656, 0.19999998807907104, 0.5, 1.0, 16.0]
	float unkn2_22;//Values:[0.0, 0.02500000037252903, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.20000004768371582, 0.30000001192092896, 0.4000000059604645, 0.5] + 1 more
	float unkn2_23;//Values:[0.0, 0.020000003278255463, 0.05000000447034836, 0.10000000894069672, 0.19999998807907104, 0.20000000298023224, 0.5]
	float unkn2_24;//Values:[0.0, 0.02500000037252903, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.20000004768371582, 0.30000001192092896, 0.4000000059604645] + 2 more
	float unkn2_25;//Values:[0.0, 0.020000003278255463, 0.029999997466802597, 0.05000000447034836, 0.10000000894069672, 0.19999998807907104, 0.20000000298023224]
	float unkn2_26;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 1.0]
	float unkn2_27;//Values:[0.0, 0.05000000447034836, 0.09999999403953552, 0.10000000149011612, 0.10000000894069672, 0.19999998807907104, 0.20000000298023224, 1.0]
	float unkn2_28;//Values:[0.0, 0.5]
	float unkn2_29;//Values:[0.0, 0.20000000298023224, 0.25, 0.5]
	float unkn2_30;//Values:[-120.0, -100.0, 0.0, 50.0, 100.0, 120.0, 180.0]
	float unkn2_31;//Values:[0.0, 30.0, 180.0]
	float unkn2_32;//Values:[0.0, 0.10000000149011612, 0.30000001192092896, 0.3199999928474426, 0.3499999940395355, 0.4000000059604645, 0.6000000238418579, 1.0, 1.2000000476837158, 2.0] + 1 more
	float unkn2_33;//Values:[0.0, 0.019999999552965164, 0.02500000037252903, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 1.0]
	float unkn2_34;//Values:[0.0, 0.019999999552965164, 0.029999999329447746, 0.04999995231628418, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579] + 6 more
	float unkn2_35;//Values:[0.0, 0.09999999403953552, 0.10000002384185791, 0.20000004768371582, 0.20000076293945312, 1.0]
	float unkn2_36;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.20999999344348907, 0.2999999523162842, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.6499999761581421] + 12 more
	float unkn2_37;//Values:[0.0, 0.05000019073486328, 0.09999999403953552, 0.10000002384185791, 0.19999998807907104, 0.20000001788139343, 0.20000004768371582, 0.2999998927116394, 0.2999999523162842, 0.3999999761581421] + 4 more
	float unkn2_38;//Values:[0.0, 0.05000000074505806, 0.05000019073486328, 0.10000000149011612, 0.19999980926513672, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579] + 9 more
	float unkn2_39;//Values:[0.0, 0.10000002384185791, 0.20000004768371582, 1.0]
	float unkn2_40;//Values:[0.05000000074505806, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.46000000834465027, 0.5, 0.6000000238418579, 0.6499999761581421, 0.699999988079071, 0.75] + 18 more
	float unkn2_41;//Values:[0.0, 0.09999988973140717, 0.09999990463256836, 0.09999999403953552, 0.10000002384185791, 0.10000038146972656, 0.19999998807907104, 0.20000004768371582, 0.25, 0.2999999523162842] + 9 more
	float unkn2_42;//Values:[-8.769760131835938, -8.5638427734375, -8.426422119140625, -8.300000190734863, -8.0, -7.0, -5.0, -4.0, -3.0, -2.0] + 9 more
	float unkn2_43;//Values:[-5.400000095367432, -5.0, -2.0, -1.0, -0.5, 0.0, 1.0, 1.217575192451477, 1.600000023841858, 2.0] + 19 more
	float unkn2_44;//Values:[-21.062030792236328, -20.0, -18.537900924682617, -17.728639602661133, -15.875289916992188, -10.0, -5.0, -3.0, -2.0, -1.0] + 13 more
	float unkn2_45;//Values:[-0.019999999552965164, -0.0020000000949949026, 0.0, 0.001500000013038516, 0.004999999888241291, 0.00800000037997961, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.020999999716877937] + 13 more
	float unkn2_46;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.05000000074505806, 0.10000000149011612, 0.30000001192092896, 0.5, 5.0]
	float unkn2_47;//Values:[0.0, 0.8999999761581421, 0.949999988079071, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863, 0.9900000095367432, 1.0]
	uint unkn2_48;//Values:[0, 1008981760]
	uint unkn2_49;//Values:[0, 2, 5]
	float unkn2_50;//Values:[-80.0, -5.0, 0.0, 10.0, 20.0, 90.0, 120.0, 220.0]
	float unkn2_51;//Values:[0.0, 5.0, 10.0, 15.0, 20.0, 30.0, 40.0, 90.0, 150.0, 180.0]
	float unkn2_52;//Values:[0.0, 30.0, 45.0, 93.0]
	float unkn2_53;//Values:[0.0, 10.0, 30.0, 150.0, 180.0]
	float unkn2_54;//Values:[-93.0, -45.0, 0.0, 50.0, 90.0]
	float unkn2_55;//Values:[0.0, 5.0, 10.0, 15.0, 20.0, 30.0, 40.0, 90.0, 150.0, 180.0]
	float unkn2_56;//Values:[0.0, 0.0005000000237487257, 0.004999999888241291, 0.029999999329447746, 0.07999999821186066, 0.09000000357627869, 0.10000000149011612, 0.12999999523162842, 0.15000000596046448, 0.20000000298023224] + 22 more
	float unkn2_57;//Values:[1.0, 1.0399999618530273, 1.100000023841858, 1.1399999856948853, 1.3600000143051147, 1.3799999952316284, 1.6100000143051147, 2.0, 3.119999885559082, 4.119999885559082] + 8 more
	float unkn2_58;//Values:[1.0, 1.100000023841858, 1.5, 2.0, 2.5, 3.0, 4.0, 5.0, 6.0, 8.0]
	float unkn2_59;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 1.0, 1.5, 1.7999999523162842, 2.0] + 7 more
	float unkn2_60;//Values:[0.0, 0.019999999552965164, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.4000000059604645, 0.5, 0.6000000238418579, 1.0, 1.5] + 13 more
	float unkn2_61;//Values:[-50.0, -1.0, -0.4000000059604645, -0.20000000298023224, -0.10000000149011612, 0.0, 0.30000001192092896, 0.5, 1.0, 1.5] + 6 more
	float unkn2_62;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 0.6000000238418579, 1.0, 1.5, 1.7999999523162842, 2.0] + 7 more
	float unkn2_63;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 1.0, 1.5, 1.7999999523162842, 2.0] + 7 more
	uint unkn2_64;//Values:[0.0, 0.019999999552965164, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.4000000059604645, 0.5, 0.6000000238418579, 1.0, 1.5] + 11 more
	uint unkn2_65;//Values:[0, 1, 2]
	uint unkn2_66;//Values:[0, 1, 3, 5, 6, 8, 12, 15]
	float null2_67;//Values:[0.0]
	float unkn2_68;//Values:[0.0, 1.5707963705062866]
	float unkn2_69;//Values:[0.0, 0.01745329424738884, 0.6981317400932312]
	uint unkn2_70;//Values:[0, 1070141403]
	
	float unkn2_71;//Values:[2.802596928649634e-45]
	float unkn2_72;//Values:[0.800000011920929, 0.949999988079071, 1.0]
	uint boneNameLength;//Values:[2, 16, 18, 20, 22]
	wstring boneName;//Values:[22] + 3 more

}TypeLightning3D<read=ReadBoneTypeLightning3D,write=WriteBoneTypeLightning3D,bgcolor=0x2f158b>/*META:ICON=ItemIconPreset,IsBoneAttribute*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_h-bg\efd_0004_h-bg_20_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[21, 64, 90, 108, 329, 876, 902, 998, 1032, 2082] + 26 more

	uint unkn1_0;//Values:[1, 64, 33554432, 33562624, 33595392]
	uint unkn1_1;//Values:[0, 2, 4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[2, 4]
	uint unkn1_7;//Values:[2, 4]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2, 4]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2, 4]
	uint unkn1_15;//Values:[2]
	uint unkn1_16;//Values:[2]
	uint unkn1_17;//Values:[2]
	uint unkn1_18;//Values:[2]
	uint unkn1_19;//Values:[2]
	uint unkn1_20;//Values:[2]
	uint unkn1_21;//Values:[2]
	uint unkn1_22;//Values:[2]
	uint unkn1_23;//Values:[2]
	uint unkn1_24;//Values:[2]
	uint unkn1_25;//Values:[2]
	uint unkn1_26;//Values:[0, 2]
	uint unkn1_27;//Values:[2]
	uint unkn1_28;//Values:[2]
	uint unkn1_29;//Values:[2]
	uint solverSize;//Values:[28, 44, 56, 116, 132]
	uint expression[solverSize/4];

}TypeLightning3DExpression<bgcolor=0x08a9e5>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(105);

}TypeLightning3DMaterial<bgcolor=0xfd1e6e>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 2849 more
	ubyte unkn1_A;
    ubyte unkn1_B;
    ubyte unkn1_C;
    ubyte unkn1_D;
	if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
    }
    Color color0;
	Color color1;
	float unkn4;//Values:[1.0, 1.2999999523162842, 2.0, 2.5, 3.0, 4.0, 5.0, 10.0, 30.0, 50.0] + 6 more
	Color color2;
	float unkn6;//Values:[1.0]
	uint frameCount <name="Frame Count">;
	uint startingFrameMin <name="Starting Frame Min">;
	uint startingFrameMax <name="Starting Frame Max">;
	float animationSpeedMin <name="Animation Speed Min">;
	float animationSpeedMax <name="Animation Speed Max">;
	float acceleration <name="Acceleration">;
    float accelerationRange <name="Acceleration Range">;					  
	uint animationMode;//Values:[0, 1, 2]
	uint unkn13;//Values:[0, 1, 2]
	uint unkn14;//Values:[0, 1, 2, 3, 4, 5]
	float rotationX;//Values:[-2.268928050994873, -1.919862151145935, -1.832595705986023, -1.6580629348754883, -1.6057029962539673, -1.5707963705062866, -1.483529806137085, -1.2217305898666382, -1.1344640254974365, -1.0471975803375244] + 84 more
	float rotationXVariation;//Values:[0.0, 0.0034906587097793818, 0.03490658849477768, 0.05235988274216652, 0.06981317698955536, 0.0872664675116539, 0.10471976548433304, 0.12217305600643158, 0.1745329350233078, 0.2617993950843811] + 17 more
	float rotationY;//Values:[-53.2325439453125, -3.665191411972046, -3.490658760070801, -2.96705961227417, -2.792526960372925, -2.6179938316345215, -2.5481808185577393, -2.268928050994873, -2.094395160675049, -1.937315583229065] + 92 more
	float rotationYVariation;//Values:[0.0, 0.03490658849477768, 0.05235988274216652, 0.0872664675116539, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.4363323450088501, 0.5235987901687622, 0.6108652949333191] + 13 more
	float rotationZ;//Values:[-4.74729585647583, -3.1415927410125732, -2.0245821475982666, -1.7453293800354004, -1.5707963705062866, -1.3962634801864624, -1.0471975803375244, -0.9599310755729675, -0.8726646900177002, -0.7853981852531433] + 63 more
	float rotationZVariation;//Values:[0.0, 0.0034906587097793818, 0.03490658849477768, 0.05235988274216652, 0.06981317698955536, 0.0872664675116539, 0.10471976548433304, 0.1745329350233078, 0.24434611201286316, 0.2617993950843811] + 18 more
	float scaleX;//Values:[-1.7999999523162842, 0.0, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.10000000149011612] + 72 more
	float scaleXVariation;//Values:[0.0, 0.03999999910593033, 0.05000000074505806, 0.10000000149011612, 0.11999999731779099, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645] + 5 more
	float scaleY;//Values:[-0.30000001192092896, 0.0, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25] + 73 more
	float scaleYVariation;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25] + 10 more
	float scaleZ;//Values:[-1.7999999523162842, -0.3499999940395355, -0.25, -0.20000000298023224, -0.10000000149011612, -0.05000000074505806, 0.0, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903] + 84 more
	float scaleZVariation;//Values:[0.0, 0.004999999888241291, 0.03999999910593033, 0.05000000074505806, 0.10000000149011612, 0.11999999731779099, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896] + 6 more
	float scaleMultiplier;//Values:[0.0, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02199999988079071, 0.024000000208616257, 0.02500000037252903, 0.026000000536441803, 0.029999999329447746, 0.03500000014901161] + 189 more
	float scaleMultiplierVariation;//Values:[0.0, 0.0020000000949949026, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03500000014901161, 0.03999999910593033] + 36 more
	uint unkn23;//Values:[0, 1, 2]
	uint unkn24;//Values:[32, 48, 64, 80, 96, 112, 128, 144, 160, 176] + 6 more
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn1;
    }
    uint texCount;//Values:[0, 1, 2, 3]
	uint meshPathLength;//Values:[64, 68, 72, 74, 76, 82, 88, 90, 92, 94] + 18 more
	wstring meshPath;//Values:[94] + 166 more
	uint unknPathLength;//Values:[2]
	wstring unknPath;//Values:[2]
	uint mdfPathLength;//Values:[58, 64, 68, 74, 80, 88, 90, 92, 94, 96] + 18 more
	wstring mdfPath;//Values:[96] + 116 more
	if (texCount != 0)
	{
        uint mdfPropertiesLength;
		struct
		{
			uint PropertyNameUTF8Hash;
			int ukn1;
			ushort parameterCount <name="Parameter Count">;
			enum <ushort> 
            {
                MDFProperty_None = 0,
                MDFProperty_Float = 1,
                MDFProperty_Range = 2,
                MDFProperty_Texture = 3,
                
            }MaterialParameterType;
            uint unkn2;
            ubyte propertyValue[16];
            //switch(MaterialParameterType)
            //{
            //    case MDFProperty_Texture:
            //    {
            //        uint texturePathLength;
            //        uint texturePathIndex;
            //        uint padding0;
            //        uint padding1;
            //        break;
            //    }
            //    case MDFProperty_Float:
            //    {
            //        uint padding2;
            //        uint padding3;
            //        uint padding4;
            //        float propertyValue;
            //        break;
            //    }
            //    case MDFProperty_Range:
            //    {
            //        float x;
            //        float y;
            //        float z;
            //        float w;
            //        break;
            //    }
            //    default:
            //    {
            //        Printf("Unmapped MDF Property Data Type %i, using default type at %i\n",mdfPropertyDataType,FTell());
            //        float propertyValue[4];
            //        break;
            //    }
            //}//##END ENUM FACTORY DEF##
		}mdfProperties[mdfPropertiesLength/32]<optimize=false>;
	   
	}
	uint texPathBlockLength;//Values:[0, 32, 64, 72, 74, 76, 78, 80, 82, 88] + 36 more
	if (texCount != 0)
	{
		struct
		{
			wstring path;
		}TexPath[texCount]<optimize = false>;
	}
	else
	{
		uint hash;//Should correspond to a property in the mdf
		if (texPathBlockLength != 0)
		{
			struct
			{
				uint substructValue[texPathBlockLength/4];
			}substruct;
		}
		
	}
}TypeMesh<read=ReadTypeMesh,bgcolor=0x02b72e>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 15, 16, 17, 18, 21, 22, 24, 25, 27] + 526 more
	uint null1;//Values:[0]
	uint unkn2;//Values:[2, 3, 4, 5, 6, 7, 8, 12, 14]
	int unkn3;//Values:[-1, 2]
	float unkn4;//Values:[3.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 12.0, 13.0, 14.0] + 51 more
	uint substruct1Count;//Values:[1, 2, 3, 4, 6, 7]
	uint substruct2Count;//Values:[2, 3, 4, 5, 6, 7, 8, 9, 10, 12] + 4 more
	uint substruct3Count;//Values:[0, 1, 2]
	uint substruct1Length;//Values:[8, 16, 24, 32, 48, 56]
	uint substruct2Length;//Values:[24, 36, 48, 60, 72, 84, 96, 108, 120, 144] + 4 more
	uint substruct3Length;//Values:[0, 16, 32]
	uint indicesCount;//Values:[1, 2, 3, 4]
	if (substruct1Count != 0)
	{
		struct
		{
			uint unkn0;
			uint null1;//Values:[0]
		}substruct1[substruct1Count];
	}
	if (substruct2Count != 0)
	{
		struct
		{
			float unkn0;
			uint null1;//Values:[0]
			uint unkn2;//Values:[2, 3, 4, 5, 6, 7, 8, 12, 14]
		}substruct2[substruct2Count];//Can be either floats or ints
	}
	if (substruct3Count != 0)
	{
		struct
		{
			float unkn0;
			uint null1;//Values:[0]
			uint unkn2;//Values:[2, 3, 4, 5, 6, 7, 8, 12, 14]
			int unkn3;//Values:[-1, 2]
		}substruct3[substruct3Count];
	}
	if (substruct1Count != 0)
	{
		struct
		{
			uint hash;
			uint null1;//Values:[0]
			uint unkn2;//Values:[2, 3, 4, 5, 6, 7, 8, 12, 14]
			int unkn3;//Values:[-1, 2]
		}substruct4[substruct1Count];
	}
	uint indices[indicesCount];

}TypeMeshClip<bgcolor=0xf57685>/*META:ICON=ItemIconPresetExpression*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
//This typedef struct works for some files but fails on others
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[17, 27, 31, 47, 49, 83, 112, 118, 134, 136] + 139 more
	uint substructCount;//Values:[0, 1, 2, 3, 4, 5, 6, 10, 11]
	uint substructLength;//Values:[0, 44, 60, 76, 84, 88, 104, 120, 132, 136] + 19 more
	uint indicesCount;//Values:[0, 1, 2, 3, 4, 5]
	uint unkn4;//Values:[0, 1, 5, 32768, 524288, 2131968]
	uint unkn5_0;//Values:[0, 2, 4]
	uint unkn5_1;//Values:[2]
	uint unkn5_2;//Values:[2, 4]
	uint unkn5_3;//Values:[2]
	uint unkn5_4;//Values:[1, 2]
	uint unkn5_5;//Values:[2]
	uint unkn5_6;//Values:[2]
	uint unkn5_7;//Values:[2]
	uint unkn5_8;//Values:[2]
	uint unkn5_9;//Values:[2, 4]
	uint unkn5_10;//Values:[2]
	uint unkn5_11;//Values:[0, 1, 2, 4]
	uint unkn5_12;//Values:[0, 2]
	uint unkn5_13;//Values:[2]
	uint unkn5_14;//Values:[2]
	uint unkn5_15;//Values:[0, 2]
	uint unkn5_16;//Values:[2]
	uint unkn5_17;//Values:[2]
	uint unkn5_18;//Values:[2]
	uint unkn5_19;//Values:[0, 2, 4]
	uint unkn5_20;//Values:[2]
	uint unkn5_21;//Values:[0, 2]
	uint unkn5_22;//Values:[2]
    
	uint solverSize;//Values:[0, 28, 44, 56, 68, 132]
	if (solverSize != 0)
    {
	     uint expression[solverSize/4];
	}
    if (substructCount != 0)
	{
		struct
		{
			uint unkn0[substructLength/4];
		}substruct<optimize=false>;
	}
	if (indicesCount != 0)
	{
		uint indices[indicesCount];
	}
	
}TypeMeshExpression<bgcolor=0x85aa32>/*META:ICON=ItemIconPresetExpression*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(209);

}TypeModularBillboard<bgcolor=0x3a2006>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 764 more

	uint unkn1_0;//Values:[0, 1]
	Color color0;
	Color color1;
	uint unkn1_3;//Values:[1, 2]
	uint unkn1_4;//Values:[0, 1035122883]
	uint null1_5;//Values:[0]
	uint null1_6;//Values:[0]
	float unkn1_7;//Values:[0.0, 3.1415927410125732]
	uint unkn1_8;//Values:[0, 1070141403]
	uint null1_9;//Values:[0]
	float unkn1_10;//Values:[0.10000000149011612, 0.25, 0.699999988079071, 1.0, 2.0, 5.0, 10.0, 15.0, 20.0, 30.0]
	uint null1_11;//Values:[0]
	float unkn1_12;//Values:[0.25, 0.5, 0.699999988079071, 1.0, 2.0, 5.0, 50.0]
	uint null1_13;//Values:[0]
	float unkn1_14;//Values:[0.25, 0.699999988079071, 1.0, 2.0, 5.0, 10.0, 20.0, 30.0, 100.0]
	uint null1_15;//Values:[0]

}TypeNoDraw<bgcolor=0x0a2c0f>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[204]

	uint unkn1_0;//Values:[1]
	uint unkn1_1;//Values:[4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2]
	uint unkn1_15;//Values:[2]
	uint unkn1_16;//Values:[2]
	uint solverSize;//Values:[28]
	uint expression[solverSize/4];

}TypeNoDrawExpression<bgcolor=0xbe9672>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[12, 13, 14, 15, 17, 18, 19, 20, 23, 25] + 971 more
	uint unkn1_0;//Values:[0, 2, 4, 6, 16, 18, 20, 22, 32, 34] + 50 more
	uint unkn1_1;//Values:[0, 1, 2, 3, 4]
	uint unkn1_2;//Values:[0, 1]
	uint unkn1_3;//Values:[3, 4, 5, 6, 8, 10, 12, 15, 16, 20] + 26 more
	float unkn1_4;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 1.0, 2.0, 2.5, 3.0, 4.0, 5.0] + 11 more
	float unkn1_5;//Values:[0.0, 0.05000000074505806, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.5, 0.699999988079071, 1.0, 1.2000000476837158] + 28 more
	float unkn1_6;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.6000000238418579, 1.0] + 18 more
	float unkn1_7;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.14000000059604645, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 54 more
	float unkn1_8;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.14000000059604645, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 41 more
	float unkn1_9;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.14000000059604645, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 50 more
	Color color0;//Values:[0, 58, 183, 255, 2559, 3583, 5631, 11007, 15103, 27391] + 354 more
	uint unkn1_11;//Values:[-16777216, -16773633, -15660749, -1846904, -1336490, -568577, -48988, -34836, -11845, 16765371] + 1 more
	float unkn1_12;//Values:[0.0, 0.20000000298023224, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0, 5.0, 8.0] + 21 more
	float unkn1_13;//Values:[0.0, 1.0, 2.0, 3.0, 5.0, 10.0, 20.0, 50.0, 70.0, 100.0] + 1 more
	float unkn1_14;//Values:[0.0, 2.0, 3.0, 5.0, 20.0, 30.0, 60.0]
	float unkn1_15;//Values:[0.0, 0.029999999329447746, 0.05000000074505806, 0.07000000029802322, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5] + 35 more
	float unkn1_16;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.11999999731779099, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 53 more
	float unkn1_17;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.33000001311302185, 0.4000000059604645, 0.5, 0.6000000238418579, 0.800000011920929] + 35 more
	float unkn1_18;//Values:[0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.550000011920929] + 74 more
	float unkn1_19;//Values:[0.0, 0.07999999821186066, 0.10000000149011612, 0.14000000059604645, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5] + 57 more
	float unkn1_20;//Values:[0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.550000011920929, 0.6000000238418579, 0.699999988079071] + 72 more
	Color color1;//Values:[858404, 2064793, 2711500, 2854655, 13941669, 401008358, 436997375, 554437887, 637863423, 652666598] + 395 more
	int unkn1_22;//Values:[-16777216, -16773889, -16186843, -8032952, -4486573, -568577, -48988, -30481, -11845, -1]
	float unkn1_23;//Values:[0.20000000298023224, 0.25, 0.5, 1.0, 1.5, 1.75, 2.0, 2.25, 3.0, 5.0] + 25 more
	float unkn1_24;//Values:[0.0, 1.0, 1.2000000476837158, 2.0, 3.0, 5.0, 6.0, 10.0, 15.0, 20.0] + 6 more
	float unkn1_25;//Values:[0.0, 2.0, 3.0, 5.0, 30.0, 50.0, 60.0]
	float unkn1_26;//Values:[0.0, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645] + 38 more
	float unkn1_27;//Values:[0.0, 0.019999999552965164, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 60 more
	float unkn1_28;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.6000000238418579] + 47 more
	float unkn1_29;//Values:[0.05000000074505806, 0.10000000149011612, 0.1599999964237213, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.7999999523162842] + 85 more
	float unkn1_30;//Values:[0.0, 0.10000000149011612, 0.11999999731779099, 0.14000000059604645, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579] + 71 more
	float unkn1_31;//Values:[0.05000000074505806, 0.10000000149011612, 0.1599999964237213, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.800000011920929] + 79 more
	Color color2;//Values:[2559, 989772, 1859558, 2064793, 134217983, 167772343, 184525568, 184549375, 451340006, 452978879] + 388 more
	int unkn1_33;//Values:[-16777216, -16773889, -16186843, -6913446, -943794, -568577, -48988, -27663, -11845, -1]
	float unkn1_34;//Values:[0.20000000298023224, 0.25, 0.5, 1.0, 1.25, 1.5, 1.75, 2.0, 2.5, 3.0] + 24 more
	float unkn1_35;//Values:[0.0, 1.0, 1.2000000476837158, 2.0, 3.0, 5.0, 10.0, 15.0, 20.0, 30.0] + 5 more
	float unkn1_36;//Values:[0.0, 2.0, 3.0, 5.0, 8.0, 30.0, 60.0]
	float unkn1_37;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 1.0, 2.0, 3.0, 4.0, 5.0] + 26 more
	float unkn1_38;//Values:[0.0, 0.05000000074505806, 0.07000000029802322, 0.10000000149011612, 0.10000002384185791, 0.15000000596046448, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645] + 70 more
	float unkn1_39;//Values:[0.0, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.5, 0.6000000238418579, 0.800000011920929, 1.0, 1.2000000476837158] + 43 more
	float unkn1_40;//Values:[0.0, 0.05000000074505806, 0.17000000178813934, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.75] + 82 more
	float unkn1_41;//Values:[0.0, 0.05000000074505806, 0.10000000149011612, 0.14000000059604645, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.550000011920929, 0.6000000238418579] + 78 more
	float unkn1_42;//Values:[0.05000000074505806, 0.10000000149011612, 0.17000000178813934, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.75, 0.8999999761581421] + 80 more
	Color color3;//Values:[0, 18, 24, 91, 103, 204, 255, 1279, 2406, 2559] + 341 more
	int unkn1_44;//Values:[-16777216, -16773889, -16186843, -3899322, -568577, -48988, -39958, 3327, 13597006, 16208639] + 2 more
	float unkn1_45;//Values:[0.0, 0.20000000298023224, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0, 5.0, 8.0] + 19 more
	float unkn1_46;//Values:[0.0, 1.0, 1.2000000476837158, 2.0, 3.0, 5.0, 6.0, 10.0, 20.0, 50.0] + 3 more
	float unkn1_47;//Values:[0.0, 2.0, 3.0, 5.0, 30.0, 60.0]
	uint null1_48;//Values:[0]
	float unkn1_49;//Values:[0.0, 0.1745329350233078, 1.0471975803375244, 3.1415927410125732, 6.2831854820251465, 31.41592788696289]
	float unkn1_50;//Values:[0.004999999888241291, 0.007000000216066837, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03500000014901161, 0.03999999910593033, 0.04500000178813934] + 39 more
	float unkn1_51;//Values:[0.0, 0.0020000000949949026, 0.003000000026077032, 0.004000000189989805, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746] + 14 more
	uint unkn1_52;//Values:[0, 1]
	float unkn1_53;//Values:[0.0, 0.009999999776482582, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07500000298023224, 0.09999990463256836, 0.10000000149011612, 0.10000002384185791, 0.11999999731779099] + 29 more
	float unkn1_54;//Values:[0.0, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07500000298023224, 0.10000000149011612, 0.15000000596046448] + 11 more
	float unkn1_55;//Values:[0.0, 0.009999999776482582, 0.010999999940395355, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07999999821186066] + 53 more
	float unkn1_56;//Values:[0.0, 0.0010000000474974513, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806] + 27 more
	uint unkn1_57;//Values:[0, 1, 2, 4, 5, 10, 15, 16, 20, 30] + 5 more
	uint unkn1_58;//Values:[0, 1, 5, 8, 10, 20, 24, 30, 32, 40] + 9 more
	uint unkn1_59;//Values:[0, 1, 2, 10]
	uint unkn1_60;//Values:[1, 2, 3, 11]
	float unkn1_61;//Values:[0.0, 0.25, 0.5, 0.800000011920929, 0.9800000190734863, 1.0, 2.0, 3.0, 5.0]
	

}TypeNodeBillboard<bgcolor=0x5eac94>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[33, 132, 204, 206, 212, 215, 311, 1207, 1937, 2005] + 10 more

	uint unkn1_0;//Values:[0, 460551, 4210688, 67372036, 117901063, 1077952576, 3233857728]
	uint unkn1_1;//Values:[0, 64]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2, 4]
	uint unkn1_9;//Values:[1, 2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2]
	uint unkn1_15;//Values:[2]
	uint unkn1_16;//Values:[2, 4]
	uint unkn1_17;//Values:[1, 2]
	uint unkn1_18;//Values:[2]
	uint unkn1_19;//Values:[2]
	uint unkn1_20;//Values:[2]
	uint unkn1_21;//Values:[2]
	uint unkn1_22;//Values:[2]
	uint unkn1_23;//Values:[2]
	uint unkn1_24;//Values:[2, 4]
	uint unkn1_25;//Values:[1, 2]
	uint unkn1_26;//Values:[0, 2]
	uint unkn1_27;//Values:[0, 2]
	uint unkn1_28;//Values:[0, 2]
	uint unkn1_29;//Values:[2]
	uint unkn1_30;//Values:[2]
	uint unkn1_31;//Values:[2]
	uint unkn1_32;//Values:[2, 4]
	uint unkn1_33;//Values:[1, 2]
	uint unkn1_34;//Values:[2]
	uint unkn1_35;//Values:[2]
	uint unkn1_36;//Values:[2]
	uint unkn1_37;//Values:[2]
	uint unkn1_38;//Values:[1, 2]
	uint unkn1_39;//Values:[2]
	uint unkn1_40;//Values:[2, 3]
	uint unkn1_41;//Values:[2]
	uint unkn1_42;//Values:[2]
	uint unkn1_43;//Values:[2]
	uint solverSize;//Values:[0, 44, 56, 112, 416, 468, 624]
	uint expression[solverSize/4];

}TypeNodeBillboardExpression<bgcolor=0x3f16f9>/*META:ICON=ItemIconPresetExpression*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 935 more
    uint mFlags;
	Color color0;
	Color color1;
    float unkn2;//Values:[92105297, 135013179, 150994943, 218628264, 218899259, 225533975, 226517076, 226520870, 227594464, 231029369] + 853 more
	int unkn3;//Values:[224476685, 230849046, 234864227, 234864505, 266036520, 335544460, 437718527, 555901951, 563994951, 570375424] + 106 more
	
	uint unkn4_0;//Values:[0.0, 1.0, 22.0, 200.0]
	uint unkn4_1;//Values:[0, 1, 2, 3, 4, 5]
	float unkn4_2;//Values:[0.0, 0.0872664675116539, 0.13962635397911072, 0.1745329350233078, 0.20943953096866608, 0.2617993950843811, 0.3490658700466156, 0.41887906193733215, 0.5235987901687622, 0.5934119820594788] + 54 more
	if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
    }
    float unkn4_3;//Values:[0.0, 0.05235988274216652, 0.06981317698955536, 0.0872664675116539, 0.13962635397911072, 0.1745329350233078, 0.22689281404018402, 0.2617993950843811, 0.3490658700466156, 0.5235987901687622] + 6 more
	float unkn4_4;//Values:[0.0, 0.0017453293548896909, 0.0872664675116539, 0.10471976548433304, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.3839724361896515, 0.41887906193733215, 0.45378562808036804] + 66 more
	float unkn4_5;//Values:[0.0, 0.05235988274216652, 0.0872664675116539, 0.1745329350233078, 0.3490658700466156, 0.5235987901687622, 0.6283185482025146, 0.7853981852531433, 0.8726646900177002, 1.5707963705062866] + 2 more
	float unkn4_6;//Values:[0.0, 0.05235988274216652, 0.06981317698955536, 0.0872664675116539, 0.10471976548433304, 0.12217305600643158, 0.13962635397911072, 0.1745329350233078, 0.21816617250442505, 0.22689281404018402] + 74 more
	float unkn4_7;//Values:[0.0, 0.05235988274216652, 0.06981317698955536, 0.0872664675116539, 0.10471976548433304, 0.12217305600643158, 0.1745329350233078, 0.2617993950843811, 0.3490658700466156, 0.4014257490634918] + 10 more
	float unkn4_8;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.017999999225139618, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03500000014901161, 0.03999999910593033] + 112 more
	float unkn4_9;//Values:[0.0, 0.0005000000237487257, 0.0020000000949949026, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746] + 25 more
	float unkn4_10;//Values:[0.0010000000474974513, 0.003000000026077032, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.10000000149011612] + 39 more
	float unkn4_11;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224] + 2 more
	float unkn4_12;//Values:[0.0, 0.009999999776482582, 0.029999999329447746, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.47999998927116394, 0.5] + 37 more
	float unkn4_13;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 1.0, 3.0, 8.0]
	float unkn4_14;//Values:[-0.30000001192092896, -0.20000000298023224, -0.10000000149011612, 0.0, 0.10000000149011612, 0.4000000059604645, 0.5, 0.75, 0.8999999761581421, 1.0] + 3 more
	float unkn4_15;//Values:[0.0, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.6499999761581421, 0.75] + 20 more
	float unkn4_16;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5, 0.800000011920929, 0.9800000190734863, 1.0, 1.5] + 5 more
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">; 
    }
    if (VERSION >= VERSION_RE4)
    {
        float re4_unkn1;
    }
}TypePolygon<bgcolor=0x0a2c0f>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc1003\efd_0004_evc1003_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[141, 146, 192, 1538]

	uint unkn0;//Values:[256]
	uint null1;//Values:[0]
	int unkn2;//Values:[-1, 2]
	float unkn3;//Values:[99.0, 300.0, 501.0]
	uint unkn4;//Values:[1]
	uint unkn5;//Values:[2]
	uint null6;//Values:[0]
	uint substruct1Length;//Values:[8]
	uint substruct2Length;//Values:[24]
	uint substruct3Length;//Values:[0]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}TypePolygonClip<bgcolor=0x7a5736>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[22, 32, 67, 73, 138, 144, 205, 211, 538, 610] + 3 more

	uint unkn1_0;//Values:[1, 8193]
	uint unkn1_1;//Values:[4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2, 4]
	uint unkn1_15;//Values:[2]
	uint unkn1_16;//Values:[2]
	uint unkn1_17;//Values:[2]
	uint unkn1_18;//Values:[2]
	uint solverSize;//Values:[28, 56]
	uint expression[solverSize/4];

}TypePolygonExpression<bgcolor=0xef6ade>/*META:ICON=ItemIconPresetExpression*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_c-axe\efd_0004_c-axe_40_0001.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(60);

}TypePolygonMaterial<bgcolor=0x056e12>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[17, 30, 34, 43, 52, 60, 68, 76, 83, 91] + 8 more

	uint unkn1;//Values:[0, 3, 4, 512]
	Color color0;//Values:[-1073741825, -12115186, -9795715, -1, 993725706, 1718257533, 1721485236, 1722139306, 1728053247]
	Color color1;//Values:[-10412028, -1]
	float unkn4;//Values:[1.0, 1.5, 16.0]
	float unkn5;//Values:[0.0, 1.0, 12.0]
	float unkn6;//Values:[0.0, 21.0]
	float unkn7;//Values:[-0.5, 0.0, 0.9800000190734863]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        
    }
    
	uint unkn8;//Values:[1.0]
	float unkn9;//Values:[0.0, 2.802596928649634e-45]
	float unkn10;//Values:[1.0, 4.0, 10.0]
	float unkn11;//Values:[0.0, 1.0]
	uint unkn12;//Values:[1.0, 5.0, 64.0]
	uint unkn13;//Values:[1, 4, 10]
	uint unkn14;//Values:[0, 1, 6]
	uint unkn15;//Values:[1, 2, 6, 10]
	int unkn16;//Values:[1]
	int unkn17;//Values:[-1]
	int unkn18;//Values:[-1]
	float unkn19;//Values:[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan] + 8 more
	float unkn20;//Values:[0.5]
	
	

}TypePolygonTrail<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(63);

}TypePolygonTrailMaterial<bgcolor=0x3f16f9>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 14, 23, 36, 59, 63, 65, 68, 69, 72] + 102 more

	uint unkn1;//Values:[0, 16, 32, 48, 128, 144, 160]
	Color color0;
	Color color1;
	float unkn2_0;//Values:[1.0, 1.5, 2.0, 3.0, 3.5, 4.0, 5.0, 8.0, 10.0, 15.0] + 7 more
	uint null2_1;//Values:[0]
	uint null2_2;//Values:[0]
	float unkn2_3;//Values:[0.10000000149011612, 0.11999999731779099, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.800000011920929] + 11 more
	float unkn2_4;//Values:[0.0, 0.02500000037252903, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.5, 1.0]
	float unkn2_5;//Values:[0.05000000074505806, 0.10000000149011612, 0.12999999523162842, 0.15000000596046448, 0.17000000178813934, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645] + 13 more
	float unkn2_6;//Values:[0.0, 0.019999980926513672, 0.02499997615814209, 0.029999971389770508, 0.04000000283122063, 0.04999995231628418, 0.04999998211860657, 0.04999999701976776, 0.05000000819563866, 0.050000011920928955] + 10 more
	float unkn2_7;//Values:[0.5, 0.800000011920929, 1.0]
	float unkn2_8;//Values:[0.0, 0.20000000298023224, 0.800000011920929, 1.0, 2.0]
	float unkn2_9;//Values:[1.0]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
    }	
    float unkn2_10;//Values:[0.0, 5.605193857299268e-45, 2.2420775429197073e-44, 1.793662034335766e-43, 2.0178697886277366e-43, 3.8115318229635024e-43, 7.286752014489049e-43, 7.398855891635034e-43, 7.623063645927005e-43, 2.9371215812248166e-42] + 4 more
	float unkn2_11;//Values:[0.05000000074505806, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.699999988079071, 0.800000011920929] + 16 more
	float unkn2_12;//Values:[0.0, 0.02500000037252903, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 4 more
	float unkn2_13;//Values:[0.0, 0.10000000149011612, 0.15000000596046448, 0.20000000298023224, 0.5, 1.0, 2.0, 5.0, 10.0, 15.0] + 10 more
	float unkn2_14;//Values:[0.0, 5.0]
	float unkn2_15;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.75, 0.800000011920929] + 2 more
	float unkn2_16;//Values:[0.0, 0.050000011920928955]
	float unkn2_17;//Values:[0.0, 0.07000000029802322, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5, 0.6000000238418579, 0.949999988079071, 1.0]
	uint unkn2_18;//Values:[0, 1008981768, 1036831948, 1041865114]
	float unkn2_19;//Values:[2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 7.006492321624085e-45, 9.80908925027372e-45, 1.1210387714598537e-44, 1.401298464324817e-44, 1.6815581571897805e-44, 2.2420775429197073e-44, 3.5032461608120427e-44] + 2 more
	float unkn2_20;//Values:[0.5]
	float unkn2_21;//Values:[0.0, 0.5, 1.0]
	if (VERSION >= VERSION_RERT)
    {
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
    }
    float unkn2_22;//Values:[-0.8830221891403198, -0.7986355423927307, -0.7602254748344421, -0.7071067690849304, 0.0, 0.6427876353263855, 0.7602254748344421, 0.7986355423927307, 0.8830221891403198]
	float unkn2_23;//Values:[-0.11743783950805664, -0.10579991340637207, 0.0, 1.0]
	float unkn2_24;//Values:[-1.0, -0.7660444378852844, -0.637904942035675, -0.38683927059173584, -0.3420201241970062, 0.0, 0.38683927059173584, 0.7071067690849304, 1.0]
	float unkn2_25;//Values:[-0.13790494203567505, 0.0, 0.12813955545425415, 0.1736481785774231, 1.0]
	uint unkn2_26;//Values:[0, 1050971578, 1055656558, 3203140206, 3212709422, 3212836864]
	float unkn2_27;//Values:[0.0, 0.007596135139465332, 1.0]
	uint unkn2_28;//Values:[0, 1062229259, 3209712907]
	float null2_29;//Values:[0.0]
	uint unkn2_30;//Values:[-1.0, -0.5, 0.0, 1.0]
	float null2_31;//Values:[0.0]
	uint unkn2_32;//Values:[0, 1050126151, 3212836864]
	int null2_33;//Values:[0]
	int unkn2_34;//Values:[0.5, 1.0, 2.0, 3.0, 5.0]
	int null2_35;//Values:[0]
	float unkn2_36;//Values:[9.660686137707864e-39, 1.9801730382493954e-38, nan, -2.3297456723186183e+38, -2.1024719428012837e+38, -1.79539869529115e+38]
	float unkn2_37;//Values:[-1.7148608975887777e+38, nan, nan, -3.099700623793658e+38, -2.2238088215418813e+38]
	float unkn2_38;//Values:[1.9801730382493954e-38, nan, -3.099700623793658e+38, -2.2238088215418813e+38, -1.7148608975887777e+38]
	float unkn2_39;//Values:[0.10999999940395355, 0.3700000047683716, 0.5]
	float unkn2_40;//Values:[1.0]
	float unkn2_41;//Values:[0.20000000298023224, 0.5, 1.0, 6.0]
	float unkn2_42;//Values:[0.0, 0.5, 0.699999988079071, 0.75, 0.800000011920929, 1.0]
	float unkn2_43;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 1.0, 2.0]
	float unkn2_44;//Values:[0.3100000023841858, 0.5, 0.5299999713897705]
	float unkn2_45;//Values:[0.8899999856948853, 1.0]
	float unkn2_46;//Values:[1.0, 5.0, 7.0]
	float unkn2_47;//Values:[1.0]
	float unkn2_48;//Values:[1.0, 5.0]
	float unkn2_49;//Values:[0.5]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
    }
    if (VERSION >= VERSION_RE4)
    {
        float re4_unkn0;
    }
}TypeRibbonChain<bgcolor=0x363669>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc1015\efd_0004_evc1015_01_0006.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(55);

}TypeRibbonChainExpression<bgcolor=0xfd1e6e>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(41);

}TypeRibbonChainMaterial<bgcolor=0x5eac94>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(42);

}TypeRibbonChainMaterialClip<bgcolor=0x08a9e5>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(43);

}TypeRibbonChainMaterialExpression<bgcolor=0x2f158b>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[58, 74, 85, 105, 121, 147, 165, 174, 196, 207] + 115 more

	uint unkn1;//Values:[0, 2, 4, 16, 32, 50, 128, 132]
	Color color0;
	Color color1;
	float unkn2_0;//Values:[1.0, 1.2000000476837158, 3.0, 5.0, 10.0, 20.0, 30.0, 50.0, 60.0, 100.0] + 3 more
	float unkn2_1;//Values:[0.0, 1.0, 3.0, 6.0]
	uint null2_2;//Values:[0]
	float unkn2_3;//Values:[0.029999999329447746, 0.20000000298023224, 0.5, 0.699999988079071, 0.800000011920929, 1.0, 1.2999999523162842, 1.5, 2.0, 3.0] + 11 more
	float unkn2_4;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.05000000074505806, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.800000011920929, 2.0] + 2 more
	float unkn2_5;//Values:[0.07500000298023224, 0.10000000149011612, 0.15000000596046448, 0.18000000715255737, 0.20000000298023224, 0.2199999988079071, 0.25, 0.25999999046325684, 0.30000001192092896, 0.4000000059604645] + 9 more
	uint unkn2_6;//Values:[0, 1017370368, 1017370384, 1020054736, 1022739088, 1028443340, 1028443342, 1028443392, 1036831948, 1036831952] + 5 more
	float unkn2_7;//Values:[0.30000001192092896, 0.5, 1.0, 1.5, 2.0, 3.0]
	float unkn2_8;//Values:[0.0, 0.800000011920929, 0.9800000190734863, 1.0]
	if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
    }
    if (VERSION >= VERSION_RE4)
    {
        float re4_unkn0;
    }
    uint unkn2_9;//Values:[1.0]
	float unkn2_10;//Values:[0.0, 1.401298464324817e-45, 2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 7.006492321624085e-45, 1.2611686178923354e-44, 1.6815581571897805e-44]
	float unkn2_11;//Values:[0.5, 0.550000011920929]
	uint unkn2_12;//Values:[0.0, 0.800000011920929, 0.8999999761581421, 1.0]
	uint unkn2_13;//Values:[0, 1, 2, 3, 5, 10, 35, 50, 200, 1000]
	uint unkn2_14;//Values:[0, 1, 3, 4, 5, 10, 35, 50, 200, 1000]
	float unkn2_15;//Values:[2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 7.006492321624085e-45, 8.407790785948902e-45, 1.1210387714598537e-44, 1.401298464324817e-44]
	int unkn2_16;//Values:[0, 1036831949, 1106247680]
	int unkn2_17;//Values:[-16776961, -14875631, -1, 255, 2327021, 16777215, 1660956671, 1799971513]
	int unkn2_18;//Values:[-14450195, -12451548, -11967815, -30720, -1, 255, 26367, 1207959551]
	float unkn2_19;//Values:[-1.741822507499008e+38, 3.694803660885245e-41, 2.9803228329683407e-08, nan, nan, -2.5787615364587795e+38, -2.1733877653876835e+38, 131071.9921875, 134221808.0]
	float unkn2_20;//Values:[0.0, 0.20000000298023224, 0.5, 1.0]
	float unkn2_21;//Values:[0.15000000596046448, 0.4000000059604645, 1.0]
	float unkn2_22;//Values:[0.0, 1.0]
	float unkn2_23;//Values:[0.5, 1.0, 15.0]
	float unkn2_24;//Values:[0.5, 1.0, 15.0]
	float unkn2_25;//Values:[0.10000000149011612, 0.3499999940395355, 0.5]
	float unkn2_26;//Values:[1.0]
	float unkn2_27;//Values:[0.800000011920929, 0.949999988079071, 1.0]
	
}TypeRibbonFixEnd<bgcolor=0x3a2006>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_ot\efd_airou\efd_0004_airou_10_0050.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(56);

}TypeRibbonFixEndExpression<bgcolor=0x7a5736>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(44);

}TypeRibbonFixEndMaterial<bgcolor=0x363669>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(45);

}TypeRibbonFixEndMaterialClip<bgcolor=0xe78607>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(46);

}TypeRibbonFixEndMaterialExpression<bgcolor=0x3a2006>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 557 more
	uint emission;//Values:[0, 1, 3, 4, 16, 32, 35, 36, 64, 96] + 10 more
	Color color0;//Values:[-2147483393, -2147467009, -2145181663, -2141549372, -2136956768, -2131107198, -2130706433, -2029977727, -1725684173, -1725092305] + 269 more
	Color color1;//Values:[-1090321661, -955514878, -780842955, -771751937, -16777216, -16777147, -16777125, -16776961, -16774460, -16772097] + 82 more
	float unkn4;//Values:[0.5, 0.699999988079071, 1.0, 1.100000023841858, 1.2999999523162842, 1.5, 2.0, 3.0, 5.0, 7.0] + 32 more
	float unkn5;//Values:[0.0, 1.0, 1.2000000476837158, 1.5, 2.0, 3.0, 4.0, 5.0, 6.0, 10.0] + 4 more
	float unkn6;//Values:[0.0, 0.5, 10.0, 300.0]
	float unkn7;//Values:[0.0003000000142492354, 0.0010000000474974513, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.013000000268220901, 0.014999999664723873, 0.019999999552965164] + 43 more
	uint unkn8;//Values:[0, 953267991, 966609234, 981668463, 985963430, 990057071, 1000593162, 1008981770, 1014350479, 1017370378] + 17 more
	float unkn9;//Values:[0.00800000037997961, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03500000014901161, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322] + 31 more
	uint unkn10;//Values:[0, 1000593160, 1000593162, 1000593412, 1008981760, 1008981768, 1008981770, 1008981772, 1008982018, 1017370377] + 29 more
	float trailWidth;//Values:[1.0, 1.2000000476837158, 2.0, 3.0]
	float unkn12;//Values:[-1.0, 0.0, 0.4000000059604645, 0.5, 0.699999988079071, 0.800000011920929, 0.9800000190734863, 1.0, 2.0, 3.0] + 1 more
	if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
    }
    uint unkn13;//Values:[1.0]
	float unkn14;//Values:[0.0, 1.401298464324817e-45, 2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 7.006492321624085e-45, 1.1210387714598537e-44, 1.2611686178923354e-44, 2.2420775429197073e-44, 2.382207389352189e-44] + 6 more
	float unkn15;//Values:[0.029999999329447746, 0.03999999910593033, 0.04500000178813934, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.09000000357627869, 0.10000000149011612, 0.15000000596046448] + 40 more
	uint unkn16;//Values:[0, 1008981770, 1017370378, 1022739087, 1028443341, 1036831949, 1041865114, 1045220557, 1048576000, 1050253722] + 9 more
	uint trailLength;//Values:[2, 3, 4, 5, 6, 7, 8, 9, 10, 12] + 7 more
    if (VERSION >= VERSION_RE4)
            {
                int trailStartDelay;
			}
    
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
    }
    Color color2;//Values:[0, 1, 2, 3, 4, 8, 20, 30, 50]//Possibly color
	int unkn19;//Values:[0, 3]//Possibly color
	int unkn20;//Values:[-2147483393, -2147461633, -2147439873, -2145420464, -1795162113, -1203150151, -16777216, -16777088, -16776961, -16237825] + 28 more//Possibly color
	float unkn21;//Values:[-60332288, -13941567, -2646229, -1, 16722432] + 719 more
	float unkn22;//Values:[-60332288, -13941567, -65526, -1, 14130987, 16722432] + 719 more
	float unkn23;//Values:[0.0, 0.05000000074505806, 0.09000000357627869, 0.10999999940395355, 0.20000000298023224, 0.3199999928474426, 0.4000000059604645, 0.5, 0.699999988079071, 0.7400000095367432] + 1 more
	float unkn24;//Values:[0.20000000298023224, 0.6200000047683716, 0.800000011920929, 1.0]
	float unkn25;//Values:[0.0, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 1.0, 1.2000000476837158, 1.2999999523162842, 2.0, 3.0]
	float unkn26;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 1.0, 2.0]
	float unkn27;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 1.0, 2.0]
	float unkn28;//Values:[0.0, 0.25, 0.3499999940395355, 0.4000000059604645, 0.47999998927116394, 0.5, 0.5299999713897705, 0.7900000214576721, 1.0]
	float unkn29;//Values:[0.75, 0.8899999856948853, 1.0]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;
    }
    
}TypeRibbonFollow<bgcolor=0x3f16f9>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[61, 119, 289, 317, 332, 366, 384, 458, 985, 1173] + 2 more

	uint unkn1_0;//Values:[1, 5, 16]
	uint unkn1_1;//Values:[2, 4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[1, 2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[0, 2]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[2]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
    }
	uint solverSize;//Values:[28, 76, 104]
	uint expression[solverSize/4];

}TypeRibbonFollowExpression<bgcolor=0x08a9e5>/*META:ICON=ItemIconPresetExpression*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(35);

}TypeRibbonFollowMaterial<bgcolor=0x731727>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(36);

}TypeRibbonFollowMaterialClip<bgcolor=0x4081ec>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(37);

}TypeRibbonFollowMaterialExpression<bgcolor=0x363669>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 21, 22, 23] + 1101 more

	uint unkn1_0;//Values:[0, 1, 2, 3, 4, 16, 32, 34, 35, 36] + 13 more
	Color color0;//Values:[-1711276033, -4018689, -3750202, -1127681, -786433, -400766, -1, 2103340401] + 1144 more
	Color color1;//Values:[-1] + 1705 more
	float unkn1_3;//Values:[0.10000000149011612, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.5, 0.75, 0.800000011920929, 0.8500000238418579, 1.0, 1.2000000476837158] + 39 more
	float unkn1_4;//Values:[0.0, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0, 4.0, 5.0, 6.0] + 6 more
	float unkn1_5;//Values:[0.0, 1.0, 2.0, 10.0, 12.0, 100.0]
	float unkn1_6;//Values:[0.0, 0.0013000000035390258, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02070000022649765, 0.02500000037252903, 0.029999999329447746, 0.03500000014901161] + 87 more
	float unkn1_7;//Values:[0.0, 0.0007999999797903001, 0.003000000026077032, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033] + 22 more
	float unkn1_8;//Values:[0.007499999832361937, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07999999821186066, 0.10000000149011612] + 60 more
	uint unkn1_9;//Values:[0, 1000593160, 1000593161, 1000593162, 1004888132, 1008981760, 1008981762, 1008981768, 1008981769, 1008981770] + 46 more
	float unkn1_10;//Values:[0.5, 0.800000011920929, 1.0, 1.5, 2.0, 3.0, 7.0, 10.0]
	float unkn1_11;//Values:[-1.0, 0.0, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.5, 0.699999988079071, 0.75, 0.800000011920929, 0.8500000238418579] + 9 more
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
    }
	uint unkn1_12;//Values:[1.0]
	float unkn1_13;//Values:[0.0, 1.401298464324817e-45, 2.802596928649634e-45, 4.203895392974451e-45, 7.006492321624085e-45, 9.80908925027372e-45, 1.1210387714598537e-44, 1.2611686178923354e-44, 1.6815581571897805e-44, 1.8216880036222622e-44] + 19 more
	float unkn1_14;//Values:[0.0, 0.009999999776482582, 0.029999999329447746, 0.10000000149011612, 0.11999999731779099, 0.20000000298023224, 0.30000001192092896, 0.3499999940395355, 0.3799999952316284, 0.4000000059604645] + 77 more
	uint unkn1_15;//Values:[0, 1017370378, 1028443341, 1036831949, 1041865114, 1045220557, 1048576000, 1050253722, 1056964608, 1058642330] + 16 more
	float unkn1_16;//Values:[2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 7.006492321624085e-45, 8.407790785948902e-45, 1.1210387714598537e-44, 1.2611686178923354e-44, 1.401298464324817e-44, 1.6815581571897805e-44, 2.1019476964872256e-44]
	float unkn1_17;//Values:[0.0, 0.10000000149011612, 0.30000001192092896, 0.4000000059604645, 0.44999998807907104, 0.5, 0.550000011920929, 0.6000000238418579, 0.6499999761581421, 0.8500000238418579]
	float unkn1_18;//Values:[-0.6000000238418579, -0.5, -0.10000000149011612, 0.0, 0.029999999329447746, 0.05000000074505806, 0.07500000298023224, 0.10000000149011612, 0.20000000298023224, 0.25] + 35 more
	float unkn1_19;//Values:[0.0, 0.10000000149011612, 0.5, 2.0, 5.0, 8.5, 10.0]
	float unkn1_20;//Values:[0.0, 0.0010000000474974513, 0.05000000074505806, 0.10000000149011612]
	float unkn1_21;//Values:[-1.0, -0.9848077297210693, -0.9707485437393188, -0.969846248626709, -0.951251208782196, -0.9396926164627075, -0.9254165291786194, -0.866025447845459, -0.8660253882408142, -0.8535533547401428] + 132 more
	float unkn1_22;//Values:[-1.0, -0.9999999403953552, -0.8560436367988586, -0.72829270362854, -0.7071067690849304, -0.6358092427253723, -0.6143752932548523, -0.447541207075119, -0.3112749457359314, -0.263166606426239] + 36 more
	float unkn1_23;//Values:[-1.0, -0.9980973601341248, -0.9961946606636047, -0.9951339960098267, -0.9848077297210693, -0.9659258127212524, -0.9396926164627075, -0.9374036192893982, -0.9254165291786194, -0.9063077569007874] + 117 more
	float unkn1_24;//Values:[-0.9848077297210693, -0.5159984230995178, -0.46941667795181274, -0.36149293184280396, -0.3420201241970062, -0.3292100131511688, -0.32139381766319275, -0.24345816671848297, -0.20159733295440674, -0.1838773787021637] + 43 more
	float unkn1_25;//Values:[-1.0, -0.9993908405303955, -0.9980973601341248, -0.9961947202682495, -0.9924038648605347, -0.9848077297210693, -0.9659258127212524, -0.9396926164627075, -0.9379047155380249, -0.9330127239227295] + 136 more
	int unkn1_26;//Values:[3136905728, 3153651968, 3186282552, 3186355416, 3188622181, 3188715296, 3190634584, 3194020576, 3208642562, 3208688144] + 40 more
	int unkn1_27;//Values:[-1, 33023, 989772] + 1849 more
	int unkn1_28;//Values:[-1] + 1883 more
	float unkn1_29;//Values:[-1] + 1880 more
	float unkn1_30;//Values:[0.0, 0.05999999865889549, 0.07999999821186066, 0.12999999523162842, 0.17000000178813934, 0.20000000298023224, 0.36000001430511475, 0.4399999976158142, 0.44999998807907104, 0.5] + 9 more
	float unkn1_31;//Values:[0.4000000059604645, 0.6700000166893005, 0.8999999761581421, 0.9100000262260437, 1.0]
	float unkn1_32;//Values:[0.0, 0.10000000149011612, 0.4000000059604645, 0.5, 0.5000100135803223, 0.699999988079071, 0.75, 0.800000011920929, 0.8999999761581421, 1.0] + 4 more
	float unkn1_33;//Values:[0.5, 0.6000000238418579, 0.699999988079071, 1.0, 1.5, 3.0, 15.0]
	float unkn1_34;//Values:[0.5, 0.6000000238418579, 0.699999988079071, 1.0, 1.5, 2.0, 3.0, 5.0, 15.0]
	float unkn1_35;//Values:[0.0, 0.20000000298023224, 0.2199999988079071, 0.25, 0.5, 0.699999988079071, 0.7599999904632568, 1.0]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
    }
    if (VERSION >= VERSION_RE4)
    {
        float re4_unkn0;
    }
}TypeRibbonLength<bgcolor=0xef6ade>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_h-bg\efd_0004_h-bg_20_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[165, 275, 336, 990, 1038, 2589, 2648, 2858, 3002, 3033] + 27 more

	uint unkn1;//Values:[0, 1, 4, 5, 16, 128]
	uint unkn2;//Values:[0, 2, 4]
	uint unkn3;//Values:[2]
	uint unkn4;//Values:[0, 1, 2, 4]
	uint unkn5;//Values:[2]
	uint unkn6;//Values:[0, 2, 4]
	uint unkn7;//Values:[2]
	uint unkn8;//Values:[2]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn3<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn4<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn5<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn6<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn7<comment="Required Version: MHRSB (.2818730) or above">;
    }
	uint solverSize;//Values:[0, 28, 44, 68, 104, 124, 176]
	uint expression[solverSize/4];
}TypeRibbonLengthExpression<bgcolor=0x363669>/*META:ICON=ItemIconPresetExpression*/;//Example: natives\NSW\vfx\editor\efd_cm\efd_0004_cm_64_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(38);

}TypeRibbonLengthMaterial<bgcolor=0x056e12>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(39);

}TypeRibbonLengthMaterialClip<bgcolor=0x0a2c0f>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(40);

}TypeRibbonLengthMaterialExpression<bgcolor=0x0a2c0f>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[32, 57, 64, 68, 71, 72, 86, 90, 95, 97] + 38 more

	uint unkn1;//Values:[0, 128]
	Color color0;
	Color color1;
	float unkn2_0;//Values:[1.0, 2.0, 3.0, 3.5, 4.0, 5.0, 16.0, 20.0, 30.0, 48.0] + 5 more
	uint null2_1;//Values:[0]
	uint null2_2;//Values:[0]
	float unkn2_3;//Values:[0.019999999552965164, 0.03999999910593033, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.44999998807907104, 0.5, 0.6000000238418579, 0.75, 0.800000011920929] + 10 more
	uint unkn2_4;//Values:[0, 1028443341, 1036831949, 1041865114, 1045220557, 1048576000, 1050253722, 1056964608, 1069547520]
	float unkn2_5;//Values:[0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.05000000074505806, 0.05999999865889549, 0.10000000149011612, 0.15000000596046448, 0.17499999701976776, 0.20000000298023224, 0.22499999403953552] + 6 more
	uint unkn2_6;//Values:[0, 1000593162, 1008981772, 1020054720, 1020054734, 1020054736, 1028443328, 1028443340, 1028443344, 1033476502] + 3 more
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
    }
	float unkn2_7;//Values:[0.0, 0.10000000149011612, 0.25, 0.800000011920929, 1.0, 10.0]
	uint unkn2_8;//Values:[1.0]
	float unkn2_9;//Values:[2.802596928649634e-45, 4.203895392974451e-45, 5.605193857299268e-45, 1.1210387714598537e-44]
	float unkn2_10;//Values:[1.0]
}TypeRibbonLightweight<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_g-lan\efd_0004_g-lan_05_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(47);

}TypeRibbonLightweightMaterial<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(48);

}TypeRibbonLightweightMaterialClip<bgcolor=0x08a9e5>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(49);

}TypeRibbonLightweightMaterialExpression<bgcolor=0xbe9672>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(34);

}TypeRibbonParticle<bgcolor=0x2a6866>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	uint unkn0;
    uint unkn1;
    Color color0;
    Color color1;
    float unkn4;
    float unkn5;
    float unkn6;
    float unkn7;
    float unkn8;
    float unkn9;
    float unkn10;
    uint unkn11;
    uint unkn12;

}TypeRibbonTrail<bgcolor=0x02b72e>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 14, 17, 18, 19, 20, 22, 24, 27] + 94 more
	uint unkn1_0;//Values:[0, 16, 32, 64, 112, 4096, 4112, 4176, 8256, 8272] + 7 more
	Color color0;//Values:[] + 17 more
	Color color1;//Values:[-16776680, -14540213, -11374994, -5121575, -1]
	float unkn1_3;//Values:[0.5, 0.6000000238418579, 0.800000011920929, 1.0, 1.25, 1.5, 2.0, 3.0, 4.0, 5.0] + 9 more
	uint null1_4;//Values:[0]
	uint null1_5;//Values:[0]
	float unkn1_6;//Values:[-3.0, 0.0, 201.74969482421875, 201.86305236816406, 201.97213745117188]
	float unkn1_7;//Values:[-48.0, 0.0, 39.749080657958984, 40.30953598022461, 40.562198638916016]
	float unkn1_8;//Values:[-199.6508026123047, -199.62120056152344, -199.0728302001953, 0.0, 8.0]
	float unkn1_9;//Values:[-0.029999999329447746, 0.0, 0.029999999329447746, 0.10000000149011612, 0.11999999731779099, 0.20000000298023224, 0.20999999344348907, 0.25, 1.0, 2.0] + 7 more
	float unkn1_10;//Values:[-0.30000001192092896, -0.20000000298023224, -0.05000000074505806, 0.0, 0.029999999329447746, 0.05000000074505806, 0.10000000149011612, 0.30000001192092896, 0.5, 1.0] + 4 more
	float unkn1_11;//Values:[0.0, 0.18000000715255737, 0.20000000298023224, 0.25, 0.2800000011920929, 0.3499999940395355, 0.4000000059604645, 0.44999998807907104, 0.5, 1.0] + 5 more
	uint unkn1_12;//Values:[1, 2, 4, 5, 6, 8, 10, 12, 15, 16] + 1 more
	float unkn1_13;//Values:[0.0020000000949949026, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07500000298023224, 0.07999999821186066, 0.10000000149011612, 0.10999999940395355] + 13 more
	float unkn1_14;//Values:[0.0, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.05000000074505806, 0.20000000298023224]
	float unkn1_15;//Values:[0.0, 0.0010000000474974513, 0.019999999552965164, 0.5, 0.800000011920929, 1.0, 1.25, 1.2699999809265137, 1.5, 2.0] + 3 more
	float unkn1_16;//Values:[0.0, 0.0005000000237487257, 0.10000000149011612, 0.25, 0.5]
	float unkn1_17;//Values:[0.0, 0.800000011920929, 0.9800000190734863, 1.0]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
    }
	uint unkn1_18;//Values:[1.0]
	uint unkn1_19;//Values:[0, 1]
	uint unkn1_20;//Values:[0, 1, 4]
	uint null1_21;//Values:[0]
    
	Color color2;
	Color color3;
	Color color4;
	float unkn1_25;//Values:[-2.6768742449068118e+38, -1.9954114465325044e+38, -1.861861514849068e+38, -1.7014118346046923e+38, -3378690304.0, 1.4100485923256005e-38, 7.087991819656483e-16, 6.505378991050748e-08, nan, nan] + 3 more
	float unkn1_26;//Values:[0.0, 0.17000000178813934, 0.5, 0.7400000095367432, 0.8100000023841858, 1.0]
	float unkn1_27;//Values:[0.800000011920929, 0.9900000095367432, 1.0]
	float unkn1_28;//Values:[0.949999988079071, 1.0]
	float unkn1_29;//Values:[1.0]
	uint unkn1_30;//Values:[0.0, 0.15000000596046448, 0.4000000059604645, 0.5, 1.0]
	float unkn1_31;//Values:[0.0, 0.04999999701976776, 0.20000001788139343]
	uint unkn1_32;//Values:[0.0, 5.0]
	uint null1_33;//Values:[0]
	uint unkn1_34;//Values:[0, 4, 5, 6, 10, 50]
	float unkn1_35;//Values:[0.0, 5.605193857299268e-45, 8.407790785948902e-45, 1.401298464324817e-44]
	float unkn1_36;//Values:[0.0, 0.10000000149011612, 0.5, 10.0, 20.0, 30.0, 50.0]
	float unkn1_37;//Values:[0.0, 10.0, 50.0]
	float unkn1_38;//Values:[0.10000000149011612, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.7599999904632568, 0.7799999713897705, 0.800000011920929, 0.9900000095367432, 1.0]
	float unkn1_39;//Values:[0.0, 0.009999990463256836, 0.10000002384185791]
	float unkn1_40;//Values:[0.5, 0.6000000238418579, 0.800000011920929, 0.8999999761581421, 1.0, 1.2000000476837158]
	uint unkn1_41;//Values:[0, 1036831952]
	float null1_42;//Values:[0.0]
	float unkn1_43;//Values:[0.0, 0.10000000149011612, 0.30000001192092896, 0.3499999940395355, 0.5, 1.0, 2.0]
	float unkn1_44;//Values:[0.0, 0.10000000149011612, 0.30000001192092896, 0.3499999940395355, 0.5, 1.0, 2.0]
	float unkn1_45;//Values:[0.0, 0.10000000149011612, 0.5]
	float unkn1_46;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.5, 1.0, 9.0]
	float unkn1_47;//Values:[0.0, 0.10000000149011612, 0.5, 0.699999988079071, 1.0, 2.0]
	uint unkn1_48;//Values:[0.0, 0.10000000149011612, 0.5, 0.699999988079071, 1.0, 2.0]
	uint unkn1_49;//Values:[0, 2]
	uint unkn1_50;//Values:[0, 3, 8]
	uint unkn1_51;//Values:[0, 1]
	uint unkn1_52;//Values:[0, 5]
	uint null1_53;//Values:[0]
	uint null1_54;//Values:[0]
	uint null1_55;//Values:[0]
	uint null1_56;//Values:[0]
	ubyte unkn2;//Values:[2, 4]
	float null3_0;//Values:[0.0]
    if (VERSION >= VERSION_RERT)
        {
            float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
        }
	float null3_1;//Values:[0.0]
    
	float unkn3_2;//Values:[0.0, 1.0]
	float unkn3_3;//Values:[0.0, 6.2831854820251465]
	uint boneNameLength;//Values:[2, 8, 12, 16, 18, 24, 26]
	wstring boneName;//Values:[26] + 18 more
    
}TypeStrainRibbon<read=ReadBoneTypeStrainRibbon,write=WriteBoneTypeStrainRibbon,bgcolor=0x02b72e>/*META:ICON=ItemIconPreset,IsBoneAttribute*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[28, 54, 75, 85, 104, 113, 306, 338, 353, 1129] + 4 more

	uint unkn1_0;//Values:[112, 512, 1013, 4609, 5104, 5105]
	uint unkn1_1;//Values:[2, 4]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2, 4]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2, 4]
	uint unkn1_6;//Values:[2, 4]
	uint unkn1_7;//Values:[2, 4]
	uint unkn1_8;//Values:[2, 4]
	uint unkn1_9;//Values:[2, 4]
	uint unkn1_10;//Values:[2, 4]
	uint unkn1_11;//Values:[2, 3]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2, 4]
    if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
    }
    uint solverSize;
	uint expression[solverSize/4];

}TypeStrainRibbonExpression<bgcolor=0x3a2006>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(50);

}TypeStrainRibbonMaterial<bgcolor=0x08a9e5>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(51);

}TypeStrainRibbonMaterialClip<bgcolor=0xbe9672>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	float unkn1_0;
	float unkn1_1;
	float unkn1_2;
	float unkn1_3;
	float unkn1_4;
	float unkn1_5;
	float unkn1_6;
	float unkn1_7;
	float unkn1_8;
	float unkn1_9;

}TypeStrainRibbonMaterialExpression<bgcolor=0x7a5736>/*META:ICON=ItemIconPresetExpression*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[17, 18, 19, 20, 24, 26, 27, 28, 29, 31] + 648 more

	uint unkn1_0;//Values:[0, 1]
	float unkn1_1;//Values:[0.0, 1.0]
	uint null1_2;//Values:[0]
	float unkn1_3;//Values:[-0.5, -0.10000000149011612, -0.03999999910593033, -0.029999999329447746, -0.026000000536441803, -0.019999999552965164, -0.009999999776482582, -0.00800000037997961, -0.006500000134110451, -0.006000000052154064] + 19 more
	float unkn1_4;//Values:[0.0, 0.0010000000474974513, 0.001500000013038516, 0.009999999776482582, 0.019999999552965164]
	float unkn1_5;//Values:[1.0]
	uint null1_6;//Values:[0]
	float unkn1_7;//Values:[0.9200000166893005, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863, 0.9900000095367432, 1.0, 2.0]
	float unkn1_8;//Values:[0.0, 0.009999990463256836]
	uint null1_9;//Values:[0]
	uint null1_10;//Values:[0]
	float unkn1_11;//Values:[-0.05000000074505806, 0.0, 0.02500000037252903, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.5, 0.6499999761581421, 0.699999988079071]
	float unkn1_12;//Values:[0.0, 0.05000000074505806, 1.0, 180.0]

}UVScroll<bgcolor=0x85aa32>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[6, 11, 12, 13, 14, 15, 16, 17, 18, 19] + 5310 more
	uint null1<comment = "Might be SequenceNum">;//Values:[0]
	uint unkn2<comment = "Might be SequenceNumVariation">;//Values:[1, 2, 5]
	uint startingFrame;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 21 more
	uint startingFrameRandom;//Values:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] + 20 more
	float animationSpeed;//Values:[0.0, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322] + 78 more
	float animationSpeedRandom;//Values:[0.0, 0.009999999776482582, 0.019999999552965164, 0.029999999329447746, 0.03999999910593033, 0.04999999701976776, 0.05000000074505806, 0.05999999865889549, 0.07000000029802322, 0.07500000298023224] + 85 more
	uint mode<comment="0 - Show only starting frame,1 - Looped Animation, 2 - Play once and disappear after last frame, 3 - Play once and stay on last frame until end of duration in Life struct.">;//Values:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + 181 more
	uint pathUnicodeCharCount;//Values:[32, 35, 37, 44]
	wstring uvsPath;//Values:[44] + 149 more
}UVSequence<read=ReadUVSequence,bgcolor=0x02b72e>/*META:ICON=ItemIconUVSequence*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(84);

}UVSequenceExpression<bgcolor=0x056e12>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[14, 16, 17, 18, 19, 20, 21, 23, 24, 25] + 335 more

	uint unkn1_0;//Values:[1, 2, 3]
	float unkn1_1;//Values:[0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.6499999761581421, 0.699999988079071, 0.800000011920929, 0.8999999761581421, 1.0] + 7 more
	float unkn1_2;//Values:[0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.6000000238418579, 0.6499999761581421, 0.699999988079071, 0.800000011920929, 1.0, 1.100000023841858] + 6 more
	float minSpeed;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3499999940395355, 0.4000000059604645, 0.44999998807907104, 0.4699999988079071, 0.5] + 3 more
	float minSpeedRandom;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.44999998807907104, 0.4699999988079071, 0.5, 0.550000011920929] + 3 more
	float maxSpeed;//Values:[0.699999988079071, 0.8999999761581421, 0.9200000166893005, 0.9300000071525574, 0.949999988079071, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863, 0.9900000095367432, 1.0] + 10 more
	float maxSpeedRandom;//Values:[0.699999988079071, 0.8999999761581421, 0.9200000166893005, 0.9300000071525574, 0.949999988079071, 0.9599999785423279, 0.9700000286102295, 0.9800000190734863, 0.9900000095367432, 1.0] + 10 more

}UVSequenceModifier<bgcolor=0x08a9e5>;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0010\efd_0004_evc0010_00_0028.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[7, 9, 17, 18, 20, 21, 23, 24, 25, 27] + 889 more

	uint unkn1_0;//Values:[33, 34, 35, 37, 38, 39, 295]
	float unkn1_1;//Values:[-60.0, -15.068702697753906, -15.0, -10.0, -9.0, -7.0, -6.0, -5.898686408996582, -5.816646575927734, -5.0847015380859375] + 151 more
	float unkn1_2;//Values:[-25533.64453125, -241.9564208984375, -107.4259262084961, -34.78888702392578, -32.540103912353516, -30.0, -24.0, -22.0, -20.0, -19.76772689819336] + 191 more
	float unkn1_3;//Values:[-350.0, -25.0, -20.0, -15.0, -10.0, -6.162955284118652, -5.35173225402832, -5.1341552734375, -5.0, -4.955313682556152] + 168 more
	float unkn1_4;//Values:[0.0, 0.10000000149011612, 0.16095930337905884, 0.20000000298023224, 0.3680002689361572, 0.4000000059604645, 0.5, 0.550000011920929, 0.5629208087921143, 0.699999988079071] + 148 more
	float unkn1_5;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.3461158275604248, 0.5, 0.550000011920929, 0.699999988079071, 0.800000011920929] + 154 more
	float unkn1_6;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.5, 0.550000011920929, 0.699999988079071, 0.800000011920929, 0.8500000238418579, 0.8999999761581421, 0.949999988079071] + 146 more
	float unkn1_7;//Values:[0.0, 0.05235988274216652, 0.06981317698955536, 0.8552113771438599]
	float unkn1_8;//Values:[-0.06981317698955536, -0.05235988274216652, 0.0, 0.05235988274216652, 0.19198621809482574, 0.5235987901687622, 0.6806784272193909, 0.6981317400932312, 0.767944872379303, 0.7853981852531433] + 3 more
	float unkn1_9;//Values:[0.0, 0.05235988274216652, 0.06981317698955536]
	float unkn1_10;//Values:[-1.0, 75.0]

}UnitCulling<bgcolor=0xbe9672>;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_00_0010.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[12, 38, 54, 61, 118, 151, 194, 228, 328, 369] + 45 more

	uint unkn1_0;//Values:[0, 1, 4, 6, 8, 9]
	uint null1_1;//Values:[0]
	uint unkn1_2;//Values:[-14.0, -10.0, -8.0, -0.25, 0.0, 0.5, 18.0]
	float unkn1_3;//Values:[-1.0, 0.0, 0.5, 10.0]
	float unkn1_4;//Values:[0.05000000074505806, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 1.0, 2.0, 3.0, 4.0, 5.0] + 3 more
	float unkn1_5;//Values:[0.05000000074505806, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 1.0, 2.0, 2.25, 3.0, 5.0] + 4 more
	float unkn1_6;//Values:[0.05000000074505806, 0.20000000298023224, 0.30000001192092896, 0.5, 0.800000011920929, 1.0, 1.7999999523162842, 2.0, 3.0, 4.0] + 4 more
	float unkn1_7;//Values:[0.0, 1.5707963705062866]
	uint null1_8;//Values:[0]
	uint null1_9;//Values:[0]
	float unkn1_10;//Values:[0.0, 3.0, 4.0, 5.0, 6.0, 8.0, 10.0, 12.0, 15.0, 16.0] + 1 more
	uint unkn1_11;//Values:[0.0, 1.0, 5.0, 8.0, 10.0]
	uint boneNameLength;//Values:[2]
	wstring boneName;//Values:[2]

}VanishArea3D<read=ReadBoneVanishArea3D,write=WriteBoneVanishArea3D,bgcolor=0x08a9e5>/*META:IsBoneAttribute*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[238, 401, 435, 670, 7317, 7412, 13213, 13444, 13494, 14073]

	uint unkn1_0;//Values:[4]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[4]
	uint unkn1_3;//Values:[4]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2]
	uint solverSize;//Values:[28, 44]
	uint expression[solverSize/4];

}VanishArea3DExpression<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(184);

}VectorField<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[12, 13, 14, 15, 23, 25, 29, 32, 33, 34] + 289 more

	float unkn1_0;//Values:[-1.0, 0.009999999776482582, 0.15000000596046448, 0.20000000298023224, 0.4000000059604645, 0.5, 0.6000000238418579, 0.699999988079071, 0.800000011920929, 0.8500000238418579] + 19 more
	float unkn1_1;//Values:[0.009999999776482582, 0.10000000149011612, 0.5, 0.699999988079071, 1.0, 2.0, 3.0, 4.0, 5.0, 7.0] + 2 more
	float unkn1_2;//Values:[0]
	float unkn1_3;//Values:[0.009999999776482582, 0.09999992698431015, 0.10000000149011612, 0.20000000298023224, 0.5, 0.699999988079071, 1.0, 1.100000023841858, 1.2000000476837158, 1.2999999523162842] + 9 more
	float unkn1_4;//Values:[0.07999999821186066, 0.10000000149011612, 0.20000000298023224, 0.30000001192092896, 0.4000000059604645, 0.5, 0.699999988079071, 0.800000011920929, 1.0, 1.100000023841858] + 21 more
	float unkn1_5;//Values:[0.0, 0.11999999731779099, 0.15000000596046448, 0.20999999344348907, 0.25999999046325684, 0.30000001192092896, 0.3199999928474426, 0.36000001430511475, 0.4000000059604645, 0.4099999964237213] + 43 more
	float unkn1_6;//Values:[3.0]
	float unkn1_7;//Values:[10.0]
	float unkn1_8;//Values:[-0.6981316804885864, -0.5585053563117981, -0.2617993950843811, -0.1745329201221466, -0.0872664600610733, 0.0, 0.1745329201221466, 0.2617993950843811, 0.296705961227417, 0.3490658402442932] + 7 more
	float unkn1_9;//Values:[-3.4906585216522217, -0.7853981852531433, -0.3839724361896515, -0.3490658402442932, -0.0872664600610733, 0.0, 0.6108652353286743, 0.6457718014717102, 0.7853981852531433, 0.8726646304130554] + 3 more
	float unkn1_10;//Values:[-1.0471975803375244, -0.8726646304130554, -0.5235987901687622, -0.45378559827804565, -0.2617993950843811, 0.0, 0.13962633907794952, 0.2617993950843811, 0.296705961227417, 0.3490658402442932] + 6 more
	float unkn1_11;//Values:[0.5, 0.949999988079071, 1.0, 1.100000023841858, 1.2000000476837158, 2.0, 3.0, 20.0]
	float unkn1_12;//Values:[0.5, 0.949999988079071, 1.0, 1.100000023841858, 3.0, 5.0]
	float unkn1_13;//Values:[0.5, 0.949999988079071, 1.0, 1.100000023841858, 1.2000000476837158, 2.0, 3.0, 20.0]
	float unkn1_14;//Values:[0.9200000166893005, 0.949999988079071, 0.9599999785423279, 0.9700000286102295, 0.9750000238418579, 0.9800000190734863, 0.9850000143051147, 0.9900000095367432, 0.9950000047683716, 0.996999979019165] + 4 more
	float unkn1_15;//Values:[0.0, 0.0010000000474974513, 0.004999999888241291, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164]
	uint null1_16;//Values:[0]
	uint null1_17;//Values:[0]
	uint unkn1_18;//Values:[33, 34, 35, 37, 38, 39, 41, 42, 43, 45] + 4 more
	uint unkn1_19;//Values:[0, 1, 2, 3]

}VectorFieldParameter<bgcolor=0x731727>/*META:IsFieldAttribute*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_l-swd\efd_0004_l-swd_99_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[369, 512, 615, 2795]

	uint unkn0;//Values:[1024, 2048, 7168]
	uint null1;//Values:[0]
	int unkn2;//Values:[-1]
	float unkn3;//Values:[10.0, 52.0, 80.0]
	uint unkn4;//Values:[1, 3]
	uint unkn5;//Values:[2, 12]
	uint null6;//Values:[0]
	uint substruct1Length;//Values:[8, 24]
	uint substruct2Length;//Values:[24, 144]
	uint substruct3Length;//Values:[0]
	if (substruct1Length > 0)
	{
		struct
		{
			int substructValue[substruct1Length/4];
		}substruct1;
	}
	 if (substruct2Length > 0)
	{
		struct
		{
			int substructValue[substruct2Length/4];
		}substruct2;
	}
	 if (substruct3Length > 0)
	{
		struct
		{
			float substructValue[substruct3Length/4];
		}substruct3;
	}	

}VectorFieldParameterClip<bgcolor=0xe78607>;//Example: natives\NSW\vfx\editor\efd_em\efd_em004\efd_0004_em004_00_0009.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[560, 567, 580, 622, 647, 691, 834, 932, 2242, 2378] + 1 more
	uint unkn1_0;//Values:[6144, 14336]
	uint unkn1_1;//Values:[2]
	uint unkn1_2;//Values:[2]
	uint unkn1_3;//Values:[2]
	uint unkn1_4;//Values:[2]
	uint unkn1_5;//Values:[2]
	uint unkn1_6;//Values:[2]
	uint unkn1_7;//Values:[2]
	uint unkn1_8;//Values:[2]
	uint unkn1_9;//Values:[2]
	uint unkn1_10;//Values:[2]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[0, 4]
	uint unkn1_13;//Values:[0, 2, 4]
	uint unkn1_14;//Values:[2, 4]
	uint unkn1_15;//Values:[2]
	uint unkn1_16;//Values:[2]
	uint unkn1_17;//Values:[2]
	uint unkn1_18;//Values:[2]
	uint unkn1_19;//Values:[2]
	uint unkn1_20;//Values:[2]
	uint solverSize;//Values:[88, 132, 160]
	uint expression[solverSize/4];

}VectorFieldParameterExpression<bgcolor=0x7a5736>; //Example: natives\STM\vfx\editor\efd_em\efd_em086\efd_0004_em086_05_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[38, 50, 82, 94, 96, 110]

	float unkn1_0;//Values:[1.3089969158172607, 1.5707963705062866]
	float unkn1_1;//Values:[0.0, 0.1745329201221466, 0.3490658402442932]
	float unkn1_2;//Values:[-200.0, 0.5, 1.350000023841858, 10.0, 30.0]
	float unkn1_3;//Values:[0.0, 0.25, 2.0, 5.0]
	float unkn1_4;//Values:[1.0]
    
	float unkn1_5;//Values:[0]
	uint null1_6;//Values:[0]
	uint null1_7;//Values:[0]
	float unkn1_8;//Values:[1.0]
	float unkn1_9;//Values:[1.0]
	uint null1_10;//Values:[0]
	float unkn1_11;//Values:[0.0, 0.009999999776482582, 0.014999999664723873, 0.029999999329447746]
	float unkn1_12;//Values:[0.0, 0.004999999888241291]
    if (VERSION >= VERSION_RE4)
    {
        float re4_unkn0;
        float re4_unkn1;
        float re4_unkn2;
        float re4_unkn3;
        float re4_unkn4;
    }
}Velocity2D<bgcolor=0x2a6866>/*META:ICON=ItemIconVelocity3D*/;//Example: natives\NSW\vfx\editor\efd_evc\efd_evc0013\efd_0004_evc0013_00_0004.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(66);

}Velocity2DDelayFrame<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(68);

}Velocity2DExpression<bgcolor=0x2f158b>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[11, 12, 13, 14, 15, 16, 17, 18, 19, 20] + 4703 more
	uint unkn1;//Values:[0, 1, 2, 3, 4, 5, 8, 9, 16, 20] + 2 more
	float unkn2_0;//Values:[-1.0, -0.9993908405303955, -0.9993147850036621, -0.9980973601341248, -0.9975640773773193, -0.9961947202682495, -0.9945219159126282, -0.9942992925643921, -0.9942190051078796, -0.9924038648605347] + 757 more
	float unkn2_1;//Values:[-0.9396926164627075, -0.7745190858840942, -0.6250000596046448, -0.5334158539772034, -0.5290063619613647, -0.5094095468521118, -0.5064293146133423, -0.5006157159805298, -0.5, -0.4981815218925476] + 463 more
	float unkn2_2;//Values:[-1.0, -0.9998477101325989, -0.9996954202651978, -0.9993147850036621, -0.9980973601341248, -0.9975640773773193, -0.9961947202682495, -0.9955121278762817, -0.9951339960098267, -0.9942993521690369] + 576 more
	float unkn2_3;//Values:[-0.809456467628479, -0.7854211330413818, -0.7071067690849304, -0.6968861818313599, -0.6603201031684875, -0.6250000596046448, -0.5741109251976013, -0.5391490459442139, -0.5151650309562683, -0.4981815218925476] + 448 more
	float unkn2_4;//Values:[-1.0, -0.9998477101325989, -0.9996954202651978, -0.9993908405303955, -0.9993147850036621, -0.9985535144805908, -0.9980973601341248, -0.9961947202682495, -0.9958533644676208, -0.9925461411476135] + 842 more
	float unkn2_5;//Values:[-0.5554525852203369, -0.49984824657440186, -0.4665064215660095, -0.45112308859825134, -0.4239243268966675, -0.4104551374912262, -0.40753620862960815, -0.40641507506370544, -0.39951908588409424, -0.38860195875167847] + 536 more
	float unkn2_6;//Values:[-80.0, -39.0, -30.0, -20.0, -12.0, -10.0, -8.5, -8.0, -7.0, -6.5] + 226 more
	float unkn2_7;//Values:[0.0, 0.004999999888241291, 0.007000000216066837, 0.009999999776482582, 0.014999999664723873, 0.019999999552965164, 0.02500000037252903, 0.029999999329447746, 0.03999999910593033, 0.05000000074505806] + 75 more
	float unkn2_8;//Values:[0.0, 0.10000000149011612, 0.30000001192092896, 0.5, 0.550000011920929, 0.6000000238418579, 0.699999988079071, 0.75, 0.7699999809265137, 0.800000011920929] + 80 more
	float unkn2_9;//Values:[0.0, 9.999999747378752e-05, 0.0005000000237487257, 0.0010000000474974513, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004999999888241291, 0.007000000216066837, 0.008999999612569809] + 10 more
	float unkn2_10;//Values:[-50.0, -40.0, -35.0, -30.0, -25.0, -20.0, -15.0, -10.0, -9.0, -8.0] + 84 more
	float unkn2_11;//Values:[-300.0, -150.0, -80.0, -60.0, -50.0, -45.0, -40.0, -35.0, -30.0, -25.0] + 121 more
	float unkn2_12;//Values:[-100.0, -50.0, -30.0, -21.0, -20.0, -19.0, -15.0, -12.0, -10.0, -9.0] + 87 more
	float unkn2_13;//Values:[0.0, 0.009999999776482582, 0.05000000074505806, 0.10000000149011612, 0.11999999731779099, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5] + 67 more
	float unkn2_14;//Values:[-0.10000000149011612, 0.0, 0.009999999776482582, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.5, 0.699999988079071] + 43 more
	float unkn2_15;//Values:[0.0, 0.009999999776482582, 0.10000000149011612, 0.20000000298023224, 0.25, 0.30000001192092896, 0.4000000059604645, 0.44999998807907104, 0.5, 0.6000000238418579] + 60 more
	if (VERSION >= VERSION_RE4)
    {
        float re4_unkn0;
        float re4_unkn1;
    }
    uint unkn3;//Values:[0, 1, 2, 3]
	float unkn4_0;//Values:[-5.0, -4.0, -3.5, -3.0, -2.0, -1.7999999523162842, -1.5, -1.0, -0.9800000190734863, -0.8999999761581421] + 189 more
	float unkn4_1;//Values:[0.0, 0.00019999999494757503, 0.0005000000237487257, 0.0010000000474974513, 0.001500000013038516, 0.0020000000949949026, 0.0024999999441206455, 0.003000000026077032, 0.004999999888241291, 0.0052999998442828655] + 31 more
	float unkn4_2;//Values:[-2.0, 0.0, 0.10000000149011612, 0.20000000298023224, 0.5, 0.5799999833106995, 0.800000011920929, 1.0, 2.0, 3.0] + 7 more
	float unkn4_3;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.5, 0.800000011920929, 1.0, 2.0, 10.0]
	float unkn4_4;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.5, 0.8999999761581421, 1.0, 2.0, 3.0, 4.0, 5.0] + 2 more
	float unkn4_5;//Values:[0.0, 0.10000000149011612, 0.20000000298023224, 0.5, 1.0, 1.5, 2.0, 3.0, 4.0, 5.0] + 3 more
	if (VERSION >= VERSION_RERT)
    {
        float sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        float sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
    }
    if (VERSION >= VERSION_RE4)
    {
        float re4_unkn2;
        float re4_unkn3;
    }
}Velocity3D<bgcolor=0xfd1e6e>/*META:ICON=ItemIconVelocity3D*/;//Example: natives\NSW\vfx\editor\efd_pl\efd_s-axe\efd_0004_s-axe_10_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[13, 14, 25, 30, 44, 56, 58, 65, 81, 82] + 143 more
	uint frameDelay;//Values:[0, 4, 5, 7, 8, 10, 12, 14, 15, 17] + 30 more
	uint unkn2;//Values:[0, 1, 2, 3, 5, 10, 15]

}Velocity3DDelayFrame<bgcolor=0x08a9e5>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[59, 83, 100, 139, 283, 294, 1123, 1154, 1232, 1256] + 21 more

	uint unkn1_0;//Values:[1, 2, 4]
	uint unkn1_1;//Values:[0, 2]
	float unkn1_2;//Values:[-10.0, -8.0, 0.0, 15.0, 27.0]
	float unkn1_3;//Values:[0.0, 3.0, 5.0, 10.0]
	float unkn1_4;//Values:[0.0, 14.0]
	float unkn1_5;//Values:[0.0, 10.0]
	float unkn1_6;//Values:[0.0, 42.0, 60.0]
	float unkn1_7;//Values:[0.0, 10.0]
	uint unkn1_8;//Values:[0, 1, 3, 256, 3264]
	uint unkn1_9;//Values:[0, 1, 2, 4]
	uint unkn1_10;//Values:[2, 4]
	uint unkn1_11;//Values:[2]
	uint unkn1_12;//Values:[2]
	uint unkn1_13;//Values:[2]
	uint unkn1_14;//Values:[2]
	uint unkn1_15;//Values:[2, 4]
	uint unkn1_16;//Values:[2, 4]
	uint unkn1_17;//Values:[2, 4]
	uint unkn1_18;//Values:[2]
	uint unkn1_19;//Values:[0, 2, 4]
	uint unkn1_20;//Values:[2, 4]
    if (VERSION >= VERSION_RERT)
    {
        uint sb_unkn0<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn1<comment="Required Version: MHRSB (.2818730) or above">;
        uint sb_unkn2<comment="Required Version: MHRSB (.2818730) or above">;
    }
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
        uint re4_unkn1;
        uint re4_unkn2;
        uint re4_unkn3;
    }
	uint solverSize;//Values:[0, 44, 52, 68, 84, 112, 136]
	uint expression[solverSize/4];

}Velocity3DExpression<bgcolor=0x3a2006>;//Example: natives\NSW\vfx\editor\efd_ec\efd_ec030\efd_0004_ec030_00_0000.efx.2621987
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(185);

}VolumeField<bgcolor=0xf57685>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(110);

}VolumetricLighting<bgcolor=0x85aa32>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(166);

}WindInfluence3D<bgcolor=0x4081ec>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

	//STRUCT UNMAPPED
	Printf("Unmapped Struct, template stopping.");
	writeErrorToFile(165);

}WindInfluence3DDelayFrame<bgcolor=0x5eac94>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[543, 625, 911, 937, 1216, 1627]
	float unkn1_0;//Values:[0.20000000298023224, 0.800000011920929, 1.0]
	float unkn1_1;//Values:[1.7799999713897705, 10.0, 100.0]
	float unkn1_2;//Values:[0.5, 1.0]
	float unkn1_3;//Values:[0.5, 1.0, 2.0]
	uint unkn1_4;//Values:[]
	float unkn1_5;//Values:[1.0, 4.0]

}unknSBStruct100_ContrastHighlighter<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[1403, 8052]
	
	uint unkn1_0;//Values:[51, 85]
	uint unkn1_1;//Values:[2, 4]
	uint unkn1_2;//Values:[2, 4]
	uint unkn1_3;//Values:[2, 3]
	uint unkn1_4;//Values:[2, 3]
	uint unkn1_5;//Values:[2, 4]
	uint unkn1_6;//Values:[2, 4]
	uint unkn1_7;//Values:[2, 3]
	uint unkn1_8;//Values:[2, 3]
	uint solverSize;//Values:[272]
	uint expression[solverSize/4];

}unknSBStruct104_NoiseExpression<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[331, 1847]

	uint unkn1;//Values:[128, 640]
	float unkn2;//Values:[45.0]
	float null3;//Values:[0.0]
	uint unkn4;//Values:[911159508, 3826188502]
	uint unkn5;//Values:[2]
	float unkn6;//Values:[1.0]
	float unkn7;//Values:[1.0]
	float unkn8;//Values:[1.0]
	uint null9_0;//Values:[0]
	uint null9_1;//Values:[0]
	uint null9_2;//Values:[0]
	uint unkn9_3;//Values:[1]
	uint unkn9_4;//Values:[1]
	uint null9_5;//Values:[0]
	uint null9_6;//Values:[0]
	uint unkn9_7;//Values:[1]
	uint unkn9_8;//Values:[1]
	uint null9_9;//Values:[0]
	uint null9_10;//Values:[0]
	uint null9_11;//Values:[0]
	uint unkn9_12;//Values:[1]
	uint unkn9_13;//Values:[1]
	uint unkn9_14;//Values:[1]
	uint unkn9_15;//Values:[1]
	uint unkn9_16;//Values:[1]
	uint null9_17;//Values:[0]
	uint null9_18;//Values:[0]
	wstring unkn10;//Values:[0]
}unknSBStruct156_MeshEmitter<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[2026, 8030]

	uint null1;//Values:[0]
	float null2;//Values:[0.0]
	float unkn3;//Values:[1.0]
	uint null4;//Values:[0]
	uint null5;//Values:[0]
	float null6;//Values:[0.0]
	float unkn7;//Values:[1.0, 1.0499999523162842]
	float unkn8;//Values:[1.0]

}unknSBStruct189_PtAngularVelocity3D<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;//Values:[1273, 1323, 1352]

	uint null1;//Values:[0]
    if (VERSION >= VERSION_RE4)
    {
        uint re4_unkn0;
	}
	float unkn2_0;//Values:[7.5867133140563965, 8.464887619018555, 10.351163864135742]
	uint substructCount;//Values:[5]
    struct
    {
        float unkn0;
        float unkn1;
        float unkn2;
        float unkn3;
        float unkn4;
        float unkn5;
        float unkn6;
        float unkn7;
        float unkn11;
        float unkn12;
        float unkn13;   
    }substruct[substructCount];
    
    float unkn13;
    float unkn14;
    float unkn15;


    

}unknSBStruct195<bgcolor=0x7a5736>;

//STRUCT INSERT SCRIPT STRUCT POINT <>
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    Color color0;
    Color color1;
    uint unkn1[17];
}unknRE4Struct243_UnknGPUBillboard<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    Color color0;
    Color color1;
    float unkn1;
    float unkn2;
    float unkn3;
    float unkn4;
    float unkn5;
    uint unkn6;
    uint unkn7;
    uint unkn8;
    uint unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
}unknRE4Struct247_UnknTypeGPU<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    uint unkn0;
    float unkn1[10];

}unknRE4Struct130<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    float unkn0;
    float unkn1;
    float unkn2;
    float unkn3;
    uint unkn4;
    uint unkn5;
    ushort unkn6;
}unknRE4Struct195<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    float unkn0[41];

}unknRE4Struct123<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;

    uint unkn0[20];

}unknRE4Struct200<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0[15];
    float unkn1;
    uint unkn2[6];
}unknRE4Struct16<bgcolor=0x7a5736>;

typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    float unkn0;
    float unkn1;
    float unkn2;
    float unkn3;
    float unkn4;
    float unkn5;
    float unkn6;
    float unkn7;
}unknRE4Struct109<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    float unkn1;
    float unkn2;
    float unkn3;
    float unkn4;
    float unkn5;
    float unkn6;
    uint unkn7;
    uint unkn8;
    float unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
    float unkn14;
    float unkn15;
}unknRE4Struct185<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    Color color0;
    Color color1;
    float unkn3;
    float unkn4;
    float unkn5;
    Color color2;
    Color color3;
    float unkn8;
    float unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
    float unkn14;
    float unkn15;
    float unkn16;
    uint unkn17;
    float unkn18;
    float unkn19;
    float unkn20;
    float unkn21;
    float unkn22;
    float unkn23;
    uint unkn24;
    float unkn25;
}unknRE4Struct226<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    uint unkn1;
    uint unkn2;
    uint unkn3;
    uint unkn4;
    uint unkn5;
    uint unkn6;
    uint unkn7;
    uint unkn8;
    uint unkn9;
}unknRE4Struct110<bgcolor=0x7a5736>;//Might be clip struct

typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    ushort unkn0;
    uint unkn1;
    uint unkn2;
    uint efcsvPathLength;
    wstring efcsvPath;
    uint unknString0Length<comment="Might not be strings, but there's 2 bytes after each of these variables, suggesting an empty string">;
    wstring unknString0;
    uint unknString1Length;
    wstring unknString1;
    uint unknString2Length;
    wstring unknString2;
}unknRE4Struct231<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    uint unkn1;
    uint unkn2;
    uint unkn3;
    float unkn4;
    float unkn5;
    float unkn6;
    float unkn7;
    ubyte unkn8;
    ubyte unkn9;
    ubyte unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
    float unkn14;
    float unkn15;
    float unkn16;
    float unkn17;
    float unkn18;
    float unkn19;
    ubyte unkn20;
}unknRE4Struct197<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    float unkn1;
    float unkn2;
    float unkn3;
    float unkn4;
    float unkn5;
    float unkn6;
    float unkn7;
    float unkn8;
    float unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
}unknRE4Struct184<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    Color color0;
    Color color1;
    float unkn3;
    float unkn4;
    float unkn5;
    uint unkn6;
    uint unkn7;
    float unkn8;
    float unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
    float unkn14;
    float unkn15;
    float unkn16;
    float unkn17;
    float unkn18;
    float unkn19;
    float unkn20;
    float unkn21;
}unknRE4Struct245_UnknType<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    float unkn0;
    float unkn1;
    float unkn2;
    float unkn3;
    uint unkn4;
    uint unkn5;
}unknRE4Struct191<bgcolor=0x7a5736>;
typedef struct
{
	local int currentAttributeIndex = -1;
	uint itemType<bgcolor=0x00CC00>;
	uint unknSeqNum;
    
    uint unkn0;
    Color color0;
    Color color1;
    float unkn3;
    float unkn4;
    float unkn5;
    float unkn6;
    uint unkn7;
    uint unkn8;
    float unkn9;
    float unkn10;
    float unkn11;
    float unkn12;
    float unkn13;
    uint unkn14;
    float unkn15;
    float unkn16;
    uint unkn17;
    float unkn18;
    float unkn19;
    float unkn20;
    float unkn21;
    float unkn22;
    float unkn23;
    float unkn24;
    float unkn25;
}unknRE4Struct249_UnknTypeB<bgcolor=0x7a5736>/*META:ICON=ItemIconPreset*/;
void GetEFXItemStruct(string itemType)
{
//EFX Item Type Enum Switch
	switch(itemType)
	{
        case "AlphaCorrection":
			{
				AlphaCorrection attribute;
			};break;
		case "AngularVelocity2D":
			{
				AngularVelocity2D attribute;
			};break;
		case "AngularVelocity2DDelayFrame":
			{
				AngularVelocity2DDelayFrame attribute;
			};break;
		case "AngularVelocity3D":
			{
				AngularVelocity3D attribute;
			};break;
		case "AngularVelocity3DDelayFrame":
			{
				AngularVelocity3DDelayFrame attribute;
			};break;
		case "Attractor":
			{
				Attractor attribute;
			};break;
		case "AttractorClip":
			{
				AttractorClip attribute;
			};break;
		case "AttractorExpression":
			{
				AttractorExpression attribute;
			};break;
		case "Blink":
			{
				Blink attribute;
			};break;
		case "ColorGrading":
			{
				ColorGrading attribute;
			};break;
		case "ContrastHighlighter":
			{
				ContrastHighlighter attribute;
			};break;
		case "CustomComputeShader":
			{
				CustomComputeShader attribute;
			};break;
		case "DepthOcclusion":
			{
				DepthOcclusion attribute;
			};break;
		case "DepthOperator":
			{
				DepthOperator attribute;
			};break;
		case "DirectionalField":
			{
				DirectionalField attribute;
			};break;
		case "DirectionalFieldParameter":
			{
				DirectionalFieldParameter attribute;
			};break;
		case "DirectionalFieldParameterClip":
			{
				DirectionalFieldParameterClip attribute;
			};break;
		case "DirectionalFieldParameterExpression":
			{
				DirectionalFieldParameterExpression attribute;
			};break;
		case "Distortion":
			{
				Distortion attribute;
			};break;
		case "DistortionExpression":
			{
				DistortionExpression attribute;
			};break;
		case "DrawOverlay":
			{
				DrawOverlay attribute;
			};break;
		case "EffectOptimizeShader":
			{
				EffectOptimizeShader attribute;
			};break;
		case "EmitMask":
			{
				EmitMask attribute;
			};break;
		case "EmitterColor":
			{
				EmitterColor attribute;
			};break;
		case "EmitterColorClip":
			{
				EmitterColorClip attribute;
			};break;
		case "EmitterHSV":
			{
				EmitterHSV attribute;
			};break;
		case "EmitterHSVExpression":
			{
				EmitterHSVExpression attribute;
			};break;
		case "EmitterPriority":
			{
				EmitterPriority attribute;
			};break;
		case "EmitterShape2D":
			{
				EmitterShape2D attribute;
			};break;
		case "EmitterShape2DExpression":
			{
				EmitterShape2DExpression attribute;
			};break;
		case "EmitterShape3D":
			{
				EmitterShape3D attribute;
			};break;
		case "EmitterShape3DExpression":
			{
				EmitterShape3DExpression attribute;
			};break;
		case "FadeByAngle":
			{
				FadeByAngle attribute;
			};break;
		case "FadeByAngleExpression":
			{
				FadeByAngleExpression attribute;
			};break;
		case "FadeByDepth":
			{
				FadeByDepth attribute;
			};break;
		case "FadeByDepthExpression":
			{
				FadeByDepthExpression attribute;
			};break;
		case "FadeByEmitterAngle":
			{
				FadeByEmitterAngle attribute;
			};break;
		case "FadeByOcclusion":
			{
				FadeByOcclusion attribute;
			};break;
		case "FadeByOcclusionExpression":
			{
				FadeByOcclusionExpression attribute;
			};break;
		case "FakeDoF":
			{
				FakeDoF attribute;
			};break;
		case "FixRandomGenerator":
			{
				FixRandomGenerator attribute;
			};break;
		case "FlowMap":
			{
				FlowMap attribute;
			};break;
		case "FluidEmitter2D":
			{
				FluidEmitter2D attribute;
			};break;
		case "FluidSimulator2D":
			{
				FluidSimulator2D attribute;
			};break;
		case "GlobalVectorField":
			{
				GlobalVectorField attribute;
			};break;
		case "GlobalVectorFieldClip":
			{
				GlobalVectorFieldClip attribute;
			};break;
		case "GlobalVectorFieldExpression":
			{
				GlobalVectorFieldExpression attribute;
			};break;
		case "IgnorePlayerColor":
			{
				IgnorePlayerColor attribute;
			};break;
		case "ItemNum":
			{
				ItemNum attribute;
			};break;
		case "Life":
			{
				Life attribute;
			};break;
		case "LifeExpression":
			{
				LifeExpression attribute;
			};break;
		case "LuminanceBleed":
			{
				LuminanceBleed attribute;
			};break;
		case "MeshEmitter":
			{
				MeshEmitter attribute;
			};break;
		case "MeshEmitterClip":
			{
				MeshEmitterClip attribute;
			};break;
		case "MeshEmitterExpression":
			{
				MeshEmitterExpression attribute;
			};break;
		case "Noise":
			{
				Noise attribute;
			};break;
		case "ParentOptions":
			{
				ParentOptions attribute;
			};break;
		case "PlaneCollider":
			{
				PlaneCollider attribute;
			};break;
		case "PlaneColliderExpression":
			{
				PlaneColliderExpression attribute;
			};break;
		case "PlayEfx":
			{
				PlayEfx attribute;
			};break;
		case "PlayEmitter":
			{
				PlayEmitter attribute;
			};break;
		case "ProceduralDistortion":
			{
				ProceduralDistortion attribute;
			};break;
		case "ProceduralDistortionClip":
			{
				ProceduralDistortionClip attribute;
			};break;
		case "ProceduralDistortionDelayFrame":
			{
				ProceduralDistortionDelayFrame attribute;
			};break;
		case "ProceduralDistortionExpression":
			{
				ProceduralDistortionExpression attribute;
			};break;
		case "PtAngularVelocity2D":
			{
				PtAngularVelocity2D attribute;
			};break;
		case "PtAngularVelocity2DExpression":
			{
				PtAngularVelocity2DExpression attribute;
			};break;
		case "PtAngularVelocity3D":
			{
				PtAngularVelocity3D attribute;
			};break;
		case "PtAngularVelocity3DExpression":
			{
				PtAngularVelocity3DExpression attribute;
			};break;
		case "PtBehavior":
			{
				PtBehavior attribute;
			};break;
		case "PtBehaviorClip":
			{
				PtBehaviorClip attribute;
			};break;
		case "PtColliderAction":
			{
				PtColliderAction attribute;
			};break;
		case "PtCollision":
			{
				PtCollision attribute;
			};break;
		case "PtColor":
			{
				PtColor attribute;
			};break;
		case "PtColorClip":
			{
				PtColorClip attribute;
			};break;
		case "PtLife":
			{
				PtLife attribute;
			};break;
		case "PtSort":
			{
				PtSort attribute;
			};break;
		case "PtTransform2D":
			{
				PtTransform2D attribute;
			};break;
		case "PtTransform2DClip":
			{
				PtTransform2DClip attribute;
			};break;
		case "PtTransform3D":
			{
				PtTransform3D attribute;
			};break;
		case "PtTransform3DClip":
			{
				PtTransform3DClip attribute;
			};break;
		case "PtUvSequence":
			{
				PtUvSequence attribute;
			};break;
		case "PtUvSequenceClip":
			{
				PtUvSequenceClip attribute;
			};break;
		case "PtVelocity2D":
			{
				PtVelocity2D attribute;
			};break;
		case "PtVelocity2DClip":
			{
				PtVelocity2DClip attribute;
			};break;
		case "PtVelocity3D":
			{
				PtVelocity3D attribute;
			};break;
		case "PtVelocity3DClip":
			{
				PtVelocity3DClip attribute;
			};break;
		case "RenderTarget":
			{
				RenderTarget attribute;
			};break;
		case "RgbCommon":
			{
				RgbCommon attribute;
			};break;
		case "RgbWater":
			{
				RgbWater attribute;
			};break;
		case "RotateAnim":
			{
				RotateAnim attribute;
			};break;
		case "RotateAnimDelayFrame":
			{
				RotateAnimDelayFrame attribute;
			};break;
		case "RotateAnimExpression":
			{
				RotateAnimExpression attribute;
			};break;
		case "ScaleAnim":
			{
				ScaleAnim attribute;
			};break;
		case "ScaleAnimDelayFrame":
			{
				ScaleAnimDelayFrame attribute;
			};break;
		case "ScaleAnimExpression":
			{
				ScaleAnimExpression attribute;
			};break;
		case "ScaleByDepth":
			{
				ScaleByDepth attribute;
			};break;
		case "ScreenSpaceEmitter":
			{
				ScreenSpaceEmitter attribute;
			};break;
		case "ShaderSettings":
			{
				ShaderSettings attribute;
			};break;
		case "ShaderSettingsExpression":
			{
				ShaderSettingsExpression attribute;
			};break;
		case "ShapeOperator":
			{
				ShapeOperator attribute;
			};break;
		case "ShapeOperatorExpression":
			{
				ShapeOperatorExpression attribute;
			};break;
		case "Spawn":
			{
				Spawn attribute;
			};break;
		case "SpawnExpression":
			{
				SpawnExpression attribute;
			};break;
		case "StretchBlur":
			{
				StretchBlur attribute;
			};break;
		case "StretchBlurExpression":
			{
				StretchBlurExpression attribute;
			};break;
		case "TestBehaviorUpdater":
			{
				TestBehaviorUpdater attribute;
			};break;
		case "TexelChannelOperator":
			{
				TexelChannelOperator attribute;
			};break;
		case "TexelChannelOperatorClip":
			{
				TexelChannelOperatorClip attribute;
			};break;
		case "TexelChannelOperatorExpression":
			{
				TexelChannelOperatorExpression attribute;
			};break;
		case "TextureFilter":
			{
				TextureFilter attribute;
			};break;
		case "TextureUnit":
			{
				TextureUnit attribute;
			};break;
		case "TextureUnitExpression":
			{
				TextureUnitExpression attribute;
			};break;
		case "Transform2D":
			{
				Transform2D attribute;
			};break;
		case "Transform2DClip":
			{
				Transform2DClip attribute;
			};break;
		case "Transform2DExpression":
			{
				Transform2DExpression attribute;
			};break;
		case "Transform2DModifier":
			{
				Transform2DModifier attribute;
			};break;
		case "Transform2DModifierDelayFrame":
			{
				Transform2DModifierDelayFrame attribute;
			};break;
		case "Transform3D":
			{
				Transform3D attribute;
			};break;
		case "Transform3DClip":
			{
				Transform3DClip attribute;
			};break;
		case "Transform3DExpression":
			{
				Transform3DExpression attribute;
			};break;
		case "Transform3DModifier":
			{
				Transform3DModifier attribute;
			};break;
		case "Transform3DModifierDelayFrame":
			{
				Transform3DModifierDelayFrame attribute;
			};break;
		case "TypeBillboard2D":
			{
				TypeBillboard2D attribute;
			};break;
		case "TypeBillboard2DExpression":
			{
				TypeBillboard2DExpression attribute;
			};break;
		case "TypeBillboard3D":
			{
				TypeBillboard3D attribute;
			};break;
		case "TypeBillboard3DExpression":
			{
				TypeBillboard3DExpression attribute;
			};break;
		case "TypeBillboard3DMaterial":
			{
				TypeBillboard3DMaterial attribute;
			};break;
		case "TypeBillboard3DMaterialClip":
			{
				TypeBillboard3DMaterialClip attribute;
			};break;
		case "TypeBillboard3DMaterialExpression":
			{
				TypeBillboard3DMaterialExpression attribute;
			};break;
		case "TypeGpuBillboard":
			{
				TypeGpuBillboard attribute;
			};break;
		case "TypeGpuBillboardExpression":
			{
				TypeGpuBillboardExpression attribute;
			};break;
		case "TypeGpuLightning3D":
			{
				TypeGpuLightning3D attribute;
			};break;
		case "TypeGpuMesh":
			{
				TypeGpuMesh attribute;
			};break;
		case "TypeGpuMeshExpression":
			{
				TypeGpuMeshExpression attribute;
			};break;
		case "TypeGpuMeshTrail":
			{
				TypeGpuMeshTrail attribute;
			};break;
		case "TypeGpuMeshTrailClip":
			{
				TypeGpuMeshTrailClip attribute;
			};break;
		case "TypeGpuMeshTrailExpression":
			{
				TypeGpuMeshTrailExpression attribute;
			};break;
		case "TypeGpuPolygon":
			{
				TypeGpuPolygon attribute;
			};break;
		case "TypeGpuRibbonFollow":
			{
				TypeGpuRibbonFollow attribute;
			};break;
		case "TypeGpuRibbonLength":
			{
				TypeGpuRibbonLength attribute;
			};break;
		case "TypeLightning3D":
			{
				TypeLightning3D attribute;
			};break;
		case "TypeLightning3DExpression":
			{
				TypeLightning3DExpression attribute;
			};break;
		case "TypeLightning3DMaterial":
			{
				TypeLightning3DMaterial attribute;
			};break;
		case "TypeMesh":
			{
				TypeMesh attribute;
			};break;
		case "TypeMeshClip":
			{
				TypeMeshClip attribute;
			};break;
		case "TypeMeshExpression":
			{
				TypeMeshExpression attribute;
			};break;
		case "TypeModularBillboard":
			{
				TypeModularBillboard attribute;
			};break;
		case "TypeNoDraw":
			{
				TypeNoDraw attribute;
			};break;
		case "TypeNoDrawExpression":
			{
				TypeNoDrawExpression attribute;
			};break;
		case "TypeNodeBillboard":
			{
				TypeNodeBillboard attribute;
			};break;
		case "TypeNodeBillboardExpression":
			{
				TypeNodeBillboardExpression attribute;
			};break;
		case "TypePolygon":
			{
				TypePolygon attribute;
			};break;
		case "TypePolygonClip":
			{
				TypePolygonClip attribute;
			};break;
		case "TypePolygonExpression":
			{
				TypePolygonExpression attribute;
			};break;
		case "TypePolygonMaterial":
			{
				TypePolygonMaterial attribute;
			};break;
		case "TypePolygonTrail":
			{
				TypePolygonTrail attribute;
			};break;
		case "TypePolygonTrailMaterial":
			{
				TypePolygonTrailMaterial attribute;
			};break;
		case "TypeRibbonChain":
			{
				TypeRibbonChain attribute;
			};break;
		case "TypeRibbonChainExpression":
			{
				TypeRibbonChainExpression attribute;
			};break;
		case "TypeRibbonChainMaterial":
			{
				TypeRibbonChainMaterial attribute;
			};break;
		case "TypeRibbonChainMaterialClip":
			{
				TypeRibbonChainMaterialClip attribute;
			};break;
		case "TypeRibbonChainMaterialExpression":
			{
				TypeRibbonChainMaterialExpression attribute;
			};break;
		case "TypeRibbonFixEnd":
			{
				TypeRibbonFixEnd attribute;
			};break;
		case "TypeRibbonFixEndExpression":
			{
				TypeRibbonFixEndExpression attribute;
			};break;
		case "TypeRibbonFixEndMaterial":
			{
				TypeRibbonFixEndMaterial attribute;
			};break;
		case "TypeRibbonFixEndMaterialClip":
			{
				TypeRibbonFixEndMaterialClip attribute;
			};break;
		case "TypeRibbonFixEndMaterialExpression":
			{
				TypeRibbonFixEndMaterialExpression attribute;
			};break;
		case "TypeRibbonFollow":
			{
				TypeRibbonFollow attribute;
			};break;
		case "TypeRibbonFollowExpression":
			{
				TypeRibbonFollowExpression attribute;
			};break;
		case "TypeRibbonFollowMaterial":
			{
				TypeRibbonFollowMaterial attribute;
			};break;
		case "TypeRibbonFollowMaterialClip":
			{
				TypeRibbonFollowMaterialClip attribute;
			};break;
		case "TypeRibbonFollowMaterialExpression":
			{
				TypeRibbonFollowMaterialExpression attribute;
			};break;
		case "TypeRibbonLength":
			{
				TypeRibbonLength attribute;
			};break;
		case "TypeRibbonLengthExpression":
			{
				TypeRibbonLengthExpression attribute;
			};break;
		case "TypeRibbonLengthMaterial":
			{
				TypeRibbonLengthMaterial attribute;
			};break;
		case "TypeRibbonLengthMaterialClip":
			{
				TypeRibbonLengthMaterialClip attribute;
			};break;
		case "TypeRibbonLengthMaterialExpression":
			{
				TypeRibbonLengthMaterialExpression attribute;
			};break;
		case "TypeRibbonLightweight":
			{
				TypeRibbonLightweight attribute;
			};break;
		case "TypeRibbonLightweightMaterial":
			{
				TypeRibbonLightweightMaterial attribute;
			};break;
		case "TypeRibbonLightweightMaterialClip":
			{
				TypeRibbonLightweightMaterialClip attribute;
			};break;
		case "TypeRibbonLightweightMaterialExpression":
			{
				TypeRibbonLightweightMaterialExpression attribute;
			};break;
		case "TypeRibbonParticle":
			{
				TypeRibbonParticle attribute;
			};break;
		case "TypeRibbonTrail":
			{
				TypeRibbonTrail attribute;
			};break;
		case "TypeStrainRibbon":
			{
				TypeStrainRibbon attribute;
			};break;
		case "TypeStrainRibbonExpression":
			{
				TypeStrainRibbonExpression attribute;
			};break;
		case "TypeStrainRibbonMaterial":
			{
				TypeStrainRibbonMaterial attribute;
			};break;
		case "TypeStrainRibbonMaterialClip":
			{
				TypeStrainRibbonMaterialClip attribute;
			};break;
		case "TypeStrainRibbonMaterialExpression":
			{
				TypeStrainRibbonMaterialExpression attribute;
			};break;
		case "UVScroll":
			{
				UVScroll attribute;
			};break;
		case "UVSequence":
			{
				UVSequence attribute;
			};break;
		case "UVSequenceExpression":
			{
				UVSequenceExpression attribute;
			};break;
		case "UVSequenceModifier":
			{
				UVSequenceModifier attribute;
			};break;
		case "UnitCulling":
			{
				UnitCulling attribute;
			};break;
		case "VanishArea3D":
			{
				VanishArea3D attribute;
			};break;
		case "VanishArea3DExpression":
			{
				VanishArea3DExpression attribute;
			};break;
		case "VectorField":
			{
				VectorField attribute;
			};break;
		case "VectorFieldParameter":
			{
				VectorFieldParameter attribute;
			};break;
		case "VectorFieldParameterClip":
			{
				VectorFieldParameterClip attribute;
			};break;
		case "VectorFieldParameterExpression":
			{
				VectorFieldParameterExpression attribute;
			};break;
		case "Velocity2D":
			{
				Velocity2D attribute;
			};break;
		case "Velocity2DDelayFrame":
			{
				Velocity2DDelayFrame attribute;
			};break;
		case "Velocity2DExpression":
			{
				Velocity2DExpression attribute;
			};break;
		case "Velocity3D":
			{
				Velocity3D attribute;
			};break;
		case "Velocity3DDelayFrame":
			{
				Velocity3DDelayFrame attribute;
			};break;
		case "Velocity3DExpression":
			{
				Velocity3DExpression attribute;
			};break;
		case "VolumeField":
			{
				VolumeField attribute;
			};break;
		case "VolumetricLighting":
			{
				VolumetricLighting attribute;
			};break;
		case "WindInfluence3D":
			{
				WindInfluence3D attribute;
			};break;
		case "WindInfluence3DDelayFrame":
			{
				WindInfluence3DDelayFrame attribute;
			};break;
		case "unknSBStruct100_ContrastHighlighter":
			{
				unknSBStruct100_ContrastHighlighter attribute;
			};break;
		case "unknSBStruct104_NoiseExpression":
			{
				unknSBStruct104_NoiseExpression attribute;
			};break;
		case "unknSBStruct156_MeshEmitter":
			{
				unknSBStruct156_MeshEmitter attribute;
			};break;
		case "unknSBStruct189_PtAngularVelocity3D":
			{
				unknSBStruct189_PtAngularVelocity3D attribute;
			};break;
		case "unknSBStruct195":
			{
				unknSBStruct195 attribute;
			};break;
        
        //STRUCT INSERT SCRIPT SWITCH POINT <>
		case "unknRE4Struct243_UnknGPUBillboard":
			{
				unknRE4Struct243_UnknGPUBillboard attribute;
			};break;
        case "unknRE4Struct247_UnknTypeGPU":
			{
				unknRE4Struct247_UnknTypeGPU attribute;
			};break;
        case "unknRE4Struct109":
			{
				unknRE4Struct109 attribute;
			};break;
		case "unknRE4Struct130":
			{
				unknRE4Struct130 attribute;
			};break;
		case "unknRE4Struct195":
			{
				unknRE4Struct195 attribute;
			};break;
		case "unknRE4Struct123":
			{
				unknRE4Struct123 attribute;
			};break;
		case "unknRE4Struct200":
			{
				unknRE4Struct200 attribute;
			};break;
		case "unknRE4Struct16":
			{
				unknRE4Struct16 attribute;
			};break;
        case "unknRE4Struct185":
			{
				unknRE4Struct185 attribute;
			};break;
        case "unknRE4Struct226":
			{
				unknRE4Struct226 attribute;
			};break;
        case "unknRE4Struct110":
			{
				unknRE4Struct110 attribute;
			};break;
        case "unknRE4Struct231":
			{
				unknRE4Struct231 attribute;
			};break;
        case "unknRE4Struct197":
			{
				unknRE4Struct197 attribute;
			};break;
        case "unknRE4Struct184":
			{
				unknRE4Struct184 attribute;
			};break;
        case "unknRE4Struct245_UnknType":
			{
				unknRE4Struct245_UnknType attribute;
			};break;
        case "unknRE4Struct191":
			{
				unknRE4Struct191 attribute;
			};break;
        case "unknRE4Struct249_UnknTypeB":
			{
				unknRE4Struct249_UnknTypeB attribute;
			};break;


		default:
			{
				local uint errorItemType = ReadUInt();
				local uint errorUnknSeqNum = ReadUInt(FTell()+4);
				Printf("Struct ID does not match any known structs, template stopping.\nItem Type:%i\nunknSeqNum:%i\nPosition:%i\n",errorItemType,errorUnknSeqNum,FTell());
                Warning("Struct Error, template stopping. Unknown Item Type: %i",errorItemType);
				writeErrorToFile(999);
			};
	}
}
//END EFX ITEM SWITCH
